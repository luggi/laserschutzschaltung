ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_2_theACLK.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_SAR_2_theACLK_Start,"ax",%progbits
  19              		.align	1
  20              		.global	ADC_SAR_2_theACLK_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_SAR_2_theACLK_Start, %function
  24              	ADC_SAR_2_theACLK_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_2_theACLK.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * File Name: ADC_SAR_2_theACLK.c
   3:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Version 2.10
   4:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
   8:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Note:
   9:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  10:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  17:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #include "ADC_SAR_2_theACLK.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  20:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  27:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  29:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  30:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_Start
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 2


  32:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  34:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
  35:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  38:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
  39:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
  40:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  41:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
  42:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
  43:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  44:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_Start(void) 
  46:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_CLKEN |= ADC_SAR_2_theACLK_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  35 0004 42F00200 		orr	r0, r2, #2
  36 0008 1870     		strb	r0, [r3, #0]
  49:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 	ADC_SAR_2_theACLK_CLKSTBY |= ADC_SAR_2_theACLK_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  39 000c 41F00202 		orr	r2, r1, #2
  40 0010 1A74     		strb	r2, [r3, #16]
  41 0012 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0014 A1430040 		.word	1073759137
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	ADC_SAR_2_theACLK_Start, .-ADC_SAR_2_theACLK_Start
  49              		.section	.text.ADC_SAR_2_theACLK_Stop,"ax",%progbits
  50              		.align	1
  51              		.global	ADC_SAR_2_theACLK_Stop
  52              		.thumb
  53              		.thumb_func
  54              		.type	ADC_SAR_2_theACLK_Stop, %function
  55              	ADC_SAR_2_theACLK_Stop:
  56              	.LFB1:
  50:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
  51:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  52:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  53:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_Stop
  55:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  57:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
  58:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Stops the clock and returns immediately. This API does not require the
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 3


  59:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  64:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
  65:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
  66:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  67:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
  68:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
  69:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  70:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_Stop(void) 
  72:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
  57              		.loc 1 72 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_CLKEN &= (uint8)(~ADC_SAR_2_theACLK_CLKEN_MASK);
  62              		.loc 1 74 0
  63 0000 044B     		ldr	r3, .L5
  64 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  65 0004 02F0FD00 		and	r0, r2, #253
  66 0008 1870     		strb	r0, [r3, #0]
  75:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 	ADC_SAR_2_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_2_theACLK_CLKSTBY_MASK);
  67              		.loc 1 75 0
  68 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  69 000c 01F0FD02 		and	r2, r1, #253
  70 0010 1A74     		strb	r2, [r3, #16]
  71 0012 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 0014 A1430040 		.word	1073759137
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	ADC_SAR_2_theACLK_Stop, .-ADC_SAR_2_theACLK_Stop
  79              		.section	.text.ADC_SAR_2_theACLK_StopBlock,"ax",%progbits
  80              		.align	1
  81              		.global	ADC_SAR_2_theACLK_StopBlock
  82              		.thumb
  83              		.thumb_func
  84              		.type	ADC_SAR_2_theACLK_StopBlock, %function
  85              	ADC_SAR_2_theACLK_StopBlock:
  86              	.LFB2:
  76:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
  77:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  78:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  79:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  81:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
  82:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_StopBlock
  84:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 4


  86:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
  87:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  93:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
  94:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
  95:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
  97:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
  98:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_StopBlock(void) 
 101:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
  87              		.loc 1 101 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 102:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if ((ADC_SAR_2_theACLK_CLKEN & ADC_SAR_2_theACLK_CLKEN_MASK) != 0u)
  96              		.loc 1 102 0
  97 0002 164B     		ldr	r3, .L15
  98 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
  99 0006 00F00201 		and	r1, r0, #2
 100 000a CAB2     		uxtb	r2, r1
 101 000c 22B3     		cbz	r2, .L7
 102              	.LBB10:
 103:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
 104:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 107:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if defined(ADC_SAR_2_theACLK__CFG3)
 111:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 103              		.loc 1 111 0
 104 000e 1449     		ldr	r1, .L15+4
 107:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_LD = 0u;
 105              		.loc 1 107 0
 106 0010 144C     		ldr	r4, .L15+8
 107 0012 0023     		movs	r3, #0
 112:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #else
 114:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_DMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* ADC_SAR_2_theACLK__CFG3 */
 117:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 118:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 108              		.loc 1 119 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 5


 109 0014 144A     		ldr	r2, .L15+12
 111:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 110              		.loc 1 111 0
 111 0016 0220     		movs	r0, #2
 107:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_LD = 0u;
 112              		.loc 1 107 0
 113 0018 2370     		strb	r3, [r4, #0]
 111:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 114              		.loc 1 111 0
 115 001a 0870     		strb	r0, [r1, #0]
 112:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 116              		.loc 1 112 0
 117 001c 01F8043C 		strb	r3, [r1, #-4]
 118              		.loc 1 119 0
 119 0020 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 120 0022 03F07F00 		and	r0, r3, #127
 121 0026 1070     		strb	r0, [r2, #0]
 120:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 121:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 122              		.loc 1 121 0
 123 0028 FC32     		adds	r2, r2, #252
 124 002a 1188     		ldrh	r1, [r2, #0]
 122:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 125              		.loc 1 122 0
 126 002c 0F4A     		ldr	r2, .L15+16
 121:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 127              		.loc 1 121 0
 128 002e 8BB2     		uxth	r3, r1
 129              	.LVL0:
 123:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 130              		.loc 1 123 0
 131 0030 0720     		movs	r0, #7
 122:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 132              		.loc 1 122 0
 133 0032 1380     		strh	r3, [r2, #0]	@ movhi
 134              		.loc 1 123 0
 135 0034 2070     		strb	r0, [r4, #0]
 136              	.L9:
 124:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 125:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 137              		.loc 1 126 0 discriminator 1
 138 0036 0B4A     		ldr	r2, .L15+8
 139 0038 1478     		ldrb	r4, [r2, #0]	@ zero_extendqisi2
 140 003a 14F00100 		ands	r0, r4, #1
 141 003e FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_CLKEN &= (uint8)(~ADC_SAR_2_theACLK_CLKEN_MASK);
 142              		.loc 1 130 0
 143 0040 0649     		ldr	r1, .L15
 144              	.LVL1:
 145 0042 0C78     		ldrb	r4, [r1, #0]	@ zero_extendqisi2
 146 0044 04F0FD04 		and	r4, r4, #253
 147 0048 0C70     		strb	r4, [r1, #0]
 131:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_2_theACLK_CLKSTBY_MASK);
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 6


 148              		.loc 1 131 0
 149 004a 0C7C     		ldrb	r4, [r1, #16]	@ zero_extendqisi2
 150 004c 04F0FD04 		and	r4, r4, #253
 151 0050 0C74     		strb	r4, [r1, #16]
 132:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 133:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CLK_DIST_LD = 0x00u;
 152              		.loc 1 135 0
 153 0052 1070     		strb	r0, [r2, #0]
 136:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, oldDivider);
 154              		.loc 1 136 0
 155 0054 064A     		ldr	r2, .L15+20
 156 0056 1380     		strh	r3, [r2, #0]	@ movhi
 157              	.LVL2:
 158              	.L7:
 159 0058 10BD     		pop	{r4, pc}
 160              	.L16:
 161 005a 00BF     		.align	2
 162              	.L15:
 163 005c A1430040 		.word	1073759137
 164 0060 14400040 		.word	1073758228
 165 0064 01400040 		.word	1073758209
 166 0068 08400040 		.word	1073758216
 167 006c 02400040 		.word	1073758210
 168 0070 04410040 		.word	1073758468
 169              	.LBE10:
 170              		.cfi_endproc
 171              	.LFE2:
 172              		.size	ADC_SAR_2_theACLK_StopBlock, .-ADC_SAR_2_theACLK_StopBlock
 173              		.section	.text.ADC_SAR_2_theACLK_StandbyPower,"ax",%progbits
 174              		.align	1
 175              		.global	ADC_SAR_2_theACLK_StandbyPower
 176              		.thumb
 177              		.thumb_func
 178              		.type	ADC_SAR_2_theACLK_StandbyPower, %function
 179              	ADC_SAR_2_theACLK_StandbyPower:
 180              	.LFB3:
 137:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 139:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 140:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 142:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 143:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_StandbyPower
 145:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 147:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 148:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 150:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 151:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 153:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 154:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 155:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 7


 156:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 181              		.loc 1 158 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186              	.LVL3:
 187 0000 044B     		ldr	r3, .L21
 159:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if(state == 0u)
 160:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
 161:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_2_theACLK_CLKSTBY_MASK);
 188              		.loc 1 161 0
 189 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 159:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if(state == 0u)
 190              		.loc 1 159 0
 191 0004 10B9     		cbnz	r0, .L18
 192              		.loc 1 161 0
 193 0006 02F0FD00 		and	r0, r2, #253
 194              	.LVL4:
 195 000a 01E0     		b	.L20
 196              	.LVL5:
 197              	.L18:
 162:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 163:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     else
 164:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
 165:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_CLKSTBY |= ADC_SAR_2_theACLK_CLKSTBY_MASK;
 198              		.loc 1 165 0
 199 000c 42F00200 		orr	r0, r2, #2
 200              	.LVL6:
 201              	.L20:
 202 0010 1870     		strb	r0, [r3, #0]
 203 0012 7047     		bx	lr
 204              	.L22:
 205              		.align	2
 206              	.L21:
 207 0014 B1430040 		.word	1073759153
 208              		.cfi_endproc
 209              	.LFE3:
 210              		.size	ADC_SAR_2_theACLK_StandbyPower, .-ADC_SAR_2_theACLK_StandbyPower
 211              		.section	.text.ADC_SAR_2_theACLK_SetDividerRegister,"ax",%progbits
 212              		.align	1
 213              		.global	ADC_SAR_2_theACLK_SetDividerRegister
 214              		.thumb
 215              		.thumb_func
 216              		.type	ADC_SAR_2_theACLK_SetDividerRegister, %function
 217              	ADC_SAR_2_theACLK_SetDividerRegister:
 218              	.LFB4:
 166:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 167:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 168:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 169:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 170:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_SetDividerRegister
 172:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 8


 174:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 175:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 180:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 181:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   cycle.
 188:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 189:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 190:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 191:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 192:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                                 
 195:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 219              		.loc 1 195 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              	.LVL7:
 224 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 225              	.LCFI1:
 226              		.cfi_def_cfa_offset 20
 227              		.cfi_offset 4, -20
 228              		.cfi_offset 5, -16
 229              		.cfi_offset 6, -12
 230              		.cfi_offset 7, -8
 231              		.cfi_offset 14, -4
 232              	.LBB11:
 233              	.LBB12:
 196:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 198:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     uint8 currSrc = ADC_SAR_2_theACLK_GetSourceRegister();
 199:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     uint16 oldDivider = ADC_SAR_2_theACLK_GetDividerRegister();
 200:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 201:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
 203:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         enabled = ADC_SAR_2_theACLK_CLKEN & ADC_SAR_2_theACLK_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         {
 207:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             {
 210:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 ADC_SAR_2_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             }
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 9


 216:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             else
 217:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             {
 218:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 ADC_SAR_2_theACLK_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             }
 223:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         }
 224:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         else
 225:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         {
 226:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 			
 227:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             {
 229:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 231:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if defined(ADC_SAR_2_theACLK__CFG3)
 233:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #else
 236:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_DMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* ADC_SAR_2_theACLK__CFG3 */
 239:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 242:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 if (((ADC_SAR_2_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 {
 245:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 249:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     ADC_SAR_2_theACLK_CLKEN &= (uint8)(~ADC_SAR_2_theACLK_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 255:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 }
 260:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             }
 261:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 262:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             if ((ADC_SAR_2_theACLK_CLKEN & ADC_SAR_2_theACLK_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             {
 265:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             }
 271:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             else
 272:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             {
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 10


 273:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 				ADC_SAR_2_theACLK_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             }
 277:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         }
 278:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 279:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 280:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 281:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 282:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_GetDividerRegister
 284:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 287:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 290:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 291:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 292:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 293:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 296:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** uint16 ADC_SAR_2_theACLK_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 300:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 301:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 302:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_SetModeRegister
 305:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 307:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 308:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 313:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 314:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 value.
 319:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 328:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 329:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 11


 330:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 331:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 334:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_2_theACLK_MODE_MASK;
 335:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 336:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 337:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 338:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_ClearModeRegister
 340:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 342:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 343:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 348:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 349:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 value.
 354:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 363:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 364:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 365:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 366:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 369:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_2_theACLK_MODE_MA
 370:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 371:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 373:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_GetModeRegister
 375:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 377:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 378:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 380:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 381:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 382:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 383:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 384:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 12


 387:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** uint8 ADC_SAR_2_theACLK_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 390:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return ADC_SAR_2_theACLK_MOD_SRC & (uint8)(ADC_SAR_2_theACLK_MODE_MASK);
 391:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 392:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 393:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 394:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_SetSourceRegister
 396:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 398:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 399:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 402:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 403:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 415:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 416:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 417:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 418:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 421:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     uint16 currDiv = ADC_SAR_2_theACLK_GetDividerRegister();
 422:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     uint8 oldSrc = ADC_SAR_2_theACLK_GetSourceRegister();
 423:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 424:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
 427:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC =
 431:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (ADC_SAR_2_theACLK_MOD_SRC & (uint8)(~ADC_SAR_2_theACLK_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 433:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
 436:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC =
 439:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (ADC_SAR_2_theACLK_MOD_SRC & (uint8)(~ADC_SAR_2_theACLK_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 442:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     else
 443:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     {
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 13


 444:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC =
 445:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (ADC_SAR_2_theACLK_MOD_SRC & (uint8)(~ADC_SAR_2_theACLK_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     }
 447:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 448:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_GetSourceRegister
 452:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 457:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 458:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 459:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 460:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 461:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 463:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** uint8 ADC_SAR_2_theACLK_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 466:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return ADC_SAR_2_theACLK_MOD_SRC & ADC_SAR_2_theACLK_SRC_SEL_MSK;
 234              		.loc 1 466 0
 235 0002 2D4B     		ldr	r3, .L45
 236              	.LBE12:
 237              	.LBE11:
 238              	.LBB15:
 239              	.LBB16:
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 240              		.loc 1 299 0
 241 0004 2D4C     		ldr	r4, .L45+4
 242              	.LBE16:
 243              	.LBE15:
 244              	.LBB19:
 245              	.LBB13:
 246              		.loc 1 466 0
 247 0006 1E78     		ldrb	r6, [r3, #0]	@ zero_extendqisi2
 248              	.LBE13:
 249              	.LBE19:
 250              	.LBB20:
 251              	.LBB17:
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 252              		.loc 1 299 0
 253 0008 2288     		ldrh	r2, [r4, #0]
 254              	.LBE17:
 255              	.LBE20:
 256              	.LBB21:
 257              	.LBB14:
 258              		.loc 1 466 0
 259 000a 06F00706 		and	r6, r6, #7
 260              	.LBE14:
 261              	.LBE21:
 262              	.LBB22:
 263              	.LBB18:
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 264              		.loc 1 299 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 14


 265 000e 92B2     		uxth	r2, r2
 266              	.LBE18:
 267              	.LBE22:
 201:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if (clkDivider != oldDivider)
 268              		.loc 1 201 0
 269 0010 9042     		cmp	r0, r2
 270 0012 50D0     		beq	.L23
 203:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         enabled = ADC_SAR_2_theACLK_CLKEN & ADC_SAR_2_theACLK_CLKEN_MASK;
 271              		.loc 1 203 0
 272 0014 2A4D     		ldr	r5, .L45+8
 273 0016 2D78     		ldrb	r5, [r5, #0]	@ zero_extendqisi2
 274              	.LVL8:
 205:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 275              		.loc 1 205 0
 276 0018 66B9     		cbnz	r6, .L26
 205:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 277              		.loc 1 205 0 is_stmt 0 discriminator 1
 278 001a 32B1     		cbz	r2, .L27
 279 001c 50B9     		cbnz	r0, .L26
 280              	.L28:
 220:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 ADC_SAR_2_theACLK_MOD_SRC |= CYCLK_SSS;
 281              		.loc 1 220 0 is_stmt 1
 282 001e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 283              	.LVL9:
 284 0020 41F04002 		orr	r2, r1, #64
 285 0024 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, clkDivider);
 286              		.loc 1 221 0
 287 0026 2080     		strh	r0, [r4, #0]	@ movhi
 288 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 289              	.LVL10:
 290              	.L27:
 213:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, clkDivider);
 291              		.loc 1 213 0
 292 002a 2080     		strh	r0, [r4, #0]	@ movhi
 214:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 ADC_SAR_2_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 293              		.loc 1 214 0
 294 002c 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 295              	.LVL11:
 296 002e 00F0BF02 		and	r2, r0, #191
 297 0032 3FE0     		b	.L44
 298              	.LVL12:
 299              	.L26:
 203:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         enabled = ADC_SAR_2_theACLK_CLKEN & ADC_SAR_2_theACLK_CLKEN_MASK;
 300              		.loc 1 203 0
 301 0034 05F00203 		and	r3, r5, #2
 227:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             if (enabled != 0u)
 302              		.loc 1 227 0
 303 0038 03F0FF05 		and	r5, r3, #255
 304              	.LVL13:
 305 003c 13B3     		cbz	r3, .L30
 233:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 306              		.loc 1 233 0
 307 003e 214E     		ldr	r6, .L45+12
 229:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 308              		.loc 1 229 0
 309 0040 214B     		ldr	r3, .L45+16
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 15


 310 0042 0024     		movs	r4, #0
 233:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 311              		.loc 1 233 0
 312 0044 0227     		movs	r7, #2
 229:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 313              		.loc 1 229 0
 314 0046 1C70     		strb	r4, [r3, #0]
 233:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_2_theACLK_CLKEN_MASK;
 315              		.loc 1 233 0
 316 0048 3770     		strb	r7, [r6, #0]
 234:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 317              		.loc 1 234 0
 318 004a 06F8044C 		strb	r4, [r6, #-4]
 240:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 319              		.loc 1 240 0
 320 004e 1F4C     		ldr	r4, .L45+20
 321 0050 2678     		ldrb	r6, [r4, #0]	@ zero_extendqisi2
 322 0052 06F07F06 		and	r6, r6, #127
 323 0056 2670     		strb	r6, [r4, #0]
 243:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 if (((ADC_SAR_2_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 324              		.loc 1 243 0
 325 0058 FE34     		adds	r4, r4, #254
 326 005a 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 327 005c 04F00804 		and	r4, r4, #8
 328 0060 E4B2     		uxtb	r4, r4
 329 0062 04B1     		cbz	r4, .L31
 243:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 if (((ADC_SAR_2_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 330              		.loc 1 243 0 is_stmt 0 discriminator 1
 331 0064 70B9     		cbnz	r0, .L30
 332              	.L31:
 246:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 333              		.loc 1 246 0 is_stmt 1
 334 0066 1A4E     		ldr	r6, .L45+24
 335 0068 3280     		strh	r2, [r6, #0]	@ movhi
 247:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 336              		.loc 1 247 0
 337 006a 0722     		movs	r2, #7
 338 006c 1A70     		strb	r2, [r3, #0]
 339              	.L33:
 250:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 340              		.loc 1 250 0 discriminator 1
 341 006e 164B     		ldr	r3, .L45+16
 342 0070 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 343 0072 14F00104 		ands	r4, r4, #1
 344 0076 FAD1     		bne	.L33
 253:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     ADC_SAR_2_theACLK_CLKEN &= (uint8)(~ADC_SAR_2_theACLK_CLKEN_MASK);
 345              		.loc 1 253 0
 346 0078 114A     		ldr	r2, .L45+8
 347 007a 1678     		ldrb	r6, [r2, #0]	@ zero_extendqisi2
 348 007c 06F0FD06 		and	r6, r6, #253
 349 0080 1670     		strb	r6, [r2, #0]
 257:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 350              		.loc 1 257 0
 351 0082 1C70     		strb	r4, [r3, #0]
 352              	.L30:
 263:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             if ((ADC_SAR_2_theACLK_CLKEN & ADC_SAR_2_theACLK_CLKEN_MASK) != 0u)
 353              		.loc 1 263 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 16


 354 0084 0E4B     		ldr	r3, .L45+8
 355 0086 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 356 0088 02F00202 		and	r2, r2, #2
 357 008c D2B2     		uxtb	r2, r2
 358 008e 62B1     		cbz	r2, .L34
 266:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 359              		.loc 1 266 0
 360 0090 0F4B     		ldr	r3, .L45+24
 268:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 361              		.loc 1 268 0
 362 0092 0029     		cmp	r1, #0
 363 0094 0CBF     		ite	eq
 364 0096 0121     		moveq	r1, #1
 365 0098 0321     		movne	r1, #3
 366              	.LVL14:
 266:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 367              		.loc 1 266 0
 368 009a 1880     		strh	r0, [r3, #0]	@ movhi
 268:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 369              		.loc 1 268 0
 370 009c 03F8011C 		strb	r1, [r3, #-1]
 371              	.LVL15:
 372              	.L36:
 269:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 373              		.loc 1 269 0 discriminator 1
 374 00a0 0948     		ldr	r0, .L45+16
 375 00a2 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 376 00a4 D307     		lsls	r3, r2, #31
 377 00a6 FBD4     		bmi	.L36
 378 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 379              	.LVL16:
 380              	.L34:
 274:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****                 CY_SET_REG16(ADC_SAR_2_theACLK_DIV_PTR, clkDivider);
 381              		.loc 1 274 0
 382 00aa 0449     		ldr	r1, .L45+4
 383              	.LVL17:
 384 00ac 0880     		strh	r0, [r1, #0]	@ movhi
 275:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 				ADC_SAR_2_theACLK_CLKEN |= enabled;
 385              		.loc 1 275 0
 386 00ae 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 387              	.LVL18:
 388 00b0 45EA0002 		orr	r2, r5, r0
 389              	.LVL19:
 390              	.L44:
 391 00b4 1A70     		strb	r2, [r3, #0]
 392              	.L23:
 393 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 394              	.L46:
 395              		.align	2
 396              	.L45:
 397 00b8 06410040 		.word	1073758470
 398 00bc 04410040 		.word	1073758468
 399 00c0 A1430040 		.word	1073759137
 400 00c4 14400040 		.word	1073758228
 401 00c8 01400040 		.word	1073758209
 402 00cc 08400040 		.word	1073758216
 403 00d0 02400040 		.word	1073758210
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 17


 404              		.cfi_endproc
 405              	.LFE4:
 406              		.size	ADC_SAR_2_theACLK_SetDividerRegister, .-ADC_SAR_2_theACLK_SetDividerRegister
 407              		.section	.text.ADC_SAR_2_theACLK_GetDividerRegister,"ax",%progbits
 408              		.align	1
 409              		.global	ADC_SAR_2_theACLK_GetDividerRegister
 410              		.thumb
 411              		.thumb_func
 412              		.type	ADC_SAR_2_theACLK_GetDividerRegister, %function
 413              	ADC_SAR_2_theACLK_GetDividerRegister:
 414              	.LFB5:
 298:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 415              		.loc 1 298 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 420              		.loc 1 299 0
 421 0000 014B     		ldr	r3, .L48
 422 0002 1888     		ldrh	r0, [r3, #0]
 300:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 423              		.loc 1 300 0
 424 0004 80B2     		uxth	r0, r0
 425 0006 7047     		bx	lr
 426              	.L49:
 427              		.align	2
 428              	.L48:
 429 0008 04410040 		.word	1073758468
 430              		.cfi_endproc
 431              	.LFE5:
 432              		.size	ADC_SAR_2_theACLK_GetDividerRegister, .-ADC_SAR_2_theACLK_GetDividerRegister
 433              		.section	.text.ADC_SAR_2_theACLK_SetModeRegister,"ax",%progbits
 434              		.align	1
 435              		.global	ADC_SAR_2_theACLK_SetModeRegister
 436              		.thumb
 437              		.thumb_func
 438              		.type	ADC_SAR_2_theACLK_SetModeRegister, %function
 439              	ADC_SAR_2_theACLK_SetModeRegister:
 440              	.LFB6:
 333:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 441              		.loc 1 333 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446              	.LVL20:
 334:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_2_theACLK_MODE_MASK;
 447              		.loc 1 334 0
 448 0000 034B     		ldr	r3, .L51
 449 0002 00F0F800 		and	r0, r0, #248
 450              	.LVL21:
 451 0006 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 452 0008 40EA0201 		orr	r1, r0, r2
 453 000c 1970     		strb	r1, [r3, #0]
 454 000e 7047     		bx	lr
 455              	.L52:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 18


 456              		.align	2
 457              	.L51:
 458 0010 06410040 		.word	1073758470
 459              		.cfi_endproc
 460              	.LFE6:
 461              		.size	ADC_SAR_2_theACLK_SetModeRegister, .-ADC_SAR_2_theACLK_SetModeRegister
 462              		.section	.text.ADC_SAR_2_theACLK_ClearModeRegister,"ax",%progbits
 463              		.align	1
 464              		.global	ADC_SAR_2_theACLK_ClearModeRegister
 465              		.thumb
 466              		.thumb_func
 467              		.type	ADC_SAR_2_theACLK_ClearModeRegister, %function
 468              	ADC_SAR_2_theACLK_ClearModeRegister:
 469              	.LFB7:
 368:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 470              		.loc 1 368 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL22:
 369:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_2_theACLK_MODE_MA
 476              		.loc 1 369 0
 477 0000 034B     		ldr	r3, .L54
 478 0002 C043     		mvns	r0, r0
 479              	.LVL23:
 480 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 481 0006 40F00701 		orr	r1, r0, #7
 482 000a 0A40     		ands	r2, r2, r1
 483 000c 1A70     		strb	r2, [r3, #0]
 484 000e 7047     		bx	lr
 485              	.L55:
 486              		.align	2
 487              	.L54:
 488 0010 06410040 		.word	1073758470
 489              		.cfi_endproc
 490              	.LFE7:
 491              		.size	ADC_SAR_2_theACLK_ClearModeRegister, .-ADC_SAR_2_theACLK_ClearModeRegister
 492              		.section	.text.ADC_SAR_2_theACLK_GetModeRegister,"ax",%progbits
 493              		.align	1
 494              		.global	ADC_SAR_2_theACLK_GetModeRegister
 495              		.thumb
 496              		.thumb_func
 497              		.type	ADC_SAR_2_theACLK_GetModeRegister, %function
 498              	ADC_SAR_2_theACLK_GetModeRegister:
 499              	.LFB8:
 389:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 500              		.loc 1 389 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return ADC_SAR_2_theACLK_MOD_SRC & (uint8)(ADC_SAR_2_theACLK_MODE_MASK);
 505              		.loc 1 390 0
 506 0000 024B     		ldr	r3, .L57
 507 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 19


 508              		.loc 1 391 0
 509 0004 00F0F800 		and	r0, r0, #248
 510 0008 7047     		bx	lr
 511              	.L58:
 512 000a 00BF     		.align	2
 513              	.L57:
 514 000c 06410040 		.word	1073758470
 515              		.cfi_endproc
 516              	.LFE8:
 517              		.size	ADC_SAR_2_theACLK_GetModeRegister, .-ADC_SAR_2_theACLK_GetModeRegister
 518              		.section	.text.ADC_SAR_2_theACLK_SetSourceRegister,"ax",%progbits
 519              		.align	1
 520              		.global	ADC_SAR_2_theACLK_SetSourceRegister
 521              		.thumb
 522              		.thumb_func
 523              		.type	ADC_SAR_2_theACLK_SetSourceRegister, %function
 524              	ADC_SAR_2_theACLK_SetSourceRegister:
 525              	.LFB9:
 420:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 526              		.loc 1 420 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531              	.LVL24:
 532              	.LBB23:
 533              	.LBB24:
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 534              		.loc 1 299 0
 535 0000 124B     		ldr	r3, .L67
 536 0002 1988     		ldrh	r1, [r3, #0]
 537              	.LBE24:
 538              	.LBE23:
 539              	.LBB26:
 540              	.LBB27:
 541              		.loc 1 466 0
 542 0004 0233     		adds	r3, r3, #2
 543 0006 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 544              	.LBE27:
 545              	.LBE26:
 546              	.LBB28:
 547              	.LBB25:
 299:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return CY_GET_REG16(ADC_SAR_2_theACLK_DIV_PTR);
 548              		.loc 1 299 0
 549 0008 89B2     		uxth	r1, r1
 550              	.LBE25:
 551              	.LBE28:
 424:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 552              		.loc 1 424 0
 553 000a 12F0070F 		tst	r2, #7
 554 000e 1A46     		mov	r2, r3
 555 0010 09D0     		beq	.L60
 424:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 556              		.loc 1 424 0 is_stmt 0 discriminator 1
 557 0012 A0B9     		cbnz	r0, .L61
 425:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 558              		.loc 1 425 0 is_stmt 1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 20


 559 0014 99B9     		cbnz	r1, .L61
 429:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC |= CYCLK_SSS;
 560              		.loc 1 429 0
 561 0016 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 562 0018 42F04000 		orr	r0, r2, #64
 563              	.LVL25:
 564 001c 1870     		strb	r0, [r3, #0]
 431:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (ADC_SAR_2_theACLK_MOD_SRC & (uint8)(~ADC_SAR_2_theACLK_SRC_SEL_MSK)) | clkSource;
 565              		.loc 1 431 0
 566 001e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC =
 567              		.loc 1 430 0
 568 0020 01F0F801 		and	r1, r1, #248
 569 0024 09E0     		b	.L66
 570              	.LVL26:
 571              	.L60:
 433:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 572              		.loc 1 433 0 discriminator 1
 573 0026 50B1     		cbz	r0, .L61
 434:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 574              		.loc 1 434 0
 575 0028 49B9     		cbnz	r1, .L61
 439:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (ADC_SAR_2_theACLK_MOD_SRC & (uint8)(~ADC_SAR_2_theACLK_SRC_SEL_MSK)) | clkSource;
 576              		.loc 1 439 0
 577 002a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC =
 578              		.loc 1 438 0
 579 002c 21F00702 		bic	r2, r1, #7
 580 0030 1043     		orrs	r0, r0, r2
 581              	.LVL27:
 582 0032 1870     		strb	r0, [r3, #0]
 440:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 583              		.loc 1 440 0
 584 0034 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 585 0036 00F0BF01 		and	r1, r0, #191
 586              	.L66:
 587 003a 1970     		strb	r1, [r3, #0]
 588 003c 7047     		bx	lr
 589              	.LVL28:
 590              	.L61:
 445:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****             (ADC_SAR_2_theACLK_MOD_SRC & (uint8)(~ADC_SAR_2_theACLK_SRC_SEL_MSK)) | clkSource;
 591              		.loc 1 445 0
 592 003e 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****         ADC_SAR_2_theACLK_MOD_SRC =
 593              		.loc 1 444 0
 594 0040 23F00701 		bic	r1, r3, #7
 595 0044 0843     		orrs	r0, r0, r1
 596              	.LVL29:
 597 0046 1070     		strb	r0, [r2, #0]
 598 0048 7047     		bx	lr
 599              	.L68:
 600 004a 00BF     		.align	2
 601              	.L67:
 602 004c 04410040 		.word	1073758468
 603              		.cfi_endproc
 604              	.LFE9:
 605              		.size	ADC_SAR_2_theACLK_SetSourceRegister, .-ADC_SAR_2_theACLK_SetSourceRegister
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 21


 606              		.section	.text.ADC_SAR_2_theACLK_GetSourceRegister,"ax",%progbits
 607              		.align	1
 608              		.global	ADC_SAR_2_theACLK_GetSourceRegister
 609              		.thumb
 610              		.thumb_func
 611              		.type	ADC_SAR_2_theACLK_GetSourceRegister, %function
 612              	ADC_SAR_2_theACLK_GetSourceRegister:
 613              	.LFB10:
 465:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 614              		.loc 1 465 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 619              		.loc 1 466 0
 620 0000 024B     		ldr	r3, .L70
 621 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 622              		.loc 1 467 0
 623 0004 00F00700 		and	r0, r0, #7
 624 0008 7047     		bx	lr
 625              	.L71:
 626 000a 00BF     		.align	2
 627              	.L70:
 628 000c 06410040 		.word	1073758470
 629              		.cfi_endproc
 630              	.LFE10:
 631              		.size	ADC_SAR_2_theACLK_GetSourceRegister, .-ADC_SAR_2_theACLK_GetSourceRegister
 632              		.section	.text.ADC_SAR_2_theACLK_SetPhaseRegister,"ax",%progbits
 633              		.align	1
 634              		.global	ADC_SAR_2_theACLK_SetPhaseRegister
 635              		.thumb
 636              		.thumb_func
 637              		.type	ADC_SAR_2_theACLK_SetPhaseRegister, %function
 638              	ADC_SAR_2_theACLK_SetPhaseRegister:
 639              	.LFB11:
 468:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 469:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 470:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** #if defined(ADC_SAR_2_theACLK__CFG3)
 471:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 472:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 473:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_SetPhaseRegister
 475:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 476:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 477:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 478:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  delay to avoid glitches.
 481:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 482:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 483:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *   produces a 10ns delay.
 487:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 488:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 22


 489:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 490:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 491:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 492:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** void ADC_SAR_2_theACLK_SetPhaseRegister(uint8 clkPhase) 
 493:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 640              		.loc 1 493 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL30:
 494:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     ADC_SAR_2_theACLK_PHASE = clkPhase & ADC_SAR_2_theACLK_PHASE_MASK;
 646              		.loc 1 494 0
 647 0000 024B     		ldr	r3, .L73
 648 0002 00F00F00 		and	r0, r0, #15
 649              	.LVL31:
 650 0006 1870     		strb	r0, [r3, #0]
 651 0008 7047     		bx	lr
 652              	.L74:
 653 000a 00BF     		.align	2
 654              	.L73:
 655 000c 07410040 		.word	1073758471
 656              		.cfi_endproc
 657              	.LFE11:
 658              		.size	ADC_SAR_2_theACLK_SetPhaseRegister, .-ADC_SAR_2_theACLK_SetPhaseRegister
 659              		.section	.text.ADC_SAR_2_theACLK_GetPhaseRegister,"ax",%progbits
 660              		.align	1
 661              		.global	ADC_SAR_2_theACLK_GetPhaseRegister
 662              		.thumb
 663              		.thumb_func
 664              		.type	ADC_SAR_2_theACLK_GetPhaseRegister, %function
 665              	ADC_SAR_2_theACLK_GetPhaseRegister:
 666              	.LFB12:
 495:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 496:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 497:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** 
 498:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** /*******************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Function Name: ADC_SAR_2_theACLK_GetPhase
 500:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** ********************************************************************************
 501:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 502:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Summary:
 503:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  for analog clocks.
 505:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  None
 508:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** * Returns:
 510:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** uint8 ADC_SAR_2_theACLK_GetPhaseRegister(void) 
 514:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** {
 667              		.loc 1 514 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 23


 671              		@ link register save eliminated.
 515:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c ****     return ADC_SAR_2_theACLK_PHASE & ADC_SAR_2_theACLK_PHASE_MASK;
 672              		.loc 1 515 0
 673 0000 024B     		ldr	r3, .L76
 674 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 516:.\Generated_Source\PSoC5/ADC_SAR_2_theACLK.c **** }
 675              		.loc 1 516 0
 676 0004 00F00F00 		and	r0, r0, #15
 677 0008 7047     		bx	lr
 678              	.L77:
 679 000a 00BF     		.align	2
 680              	.L76:
 681 000c 07410040 		.word	1073758471
 682              		.cfi_endproc
 683              	.LFE12:
 684              		.size	ADC_SAR_2_theACLK_GetPhaseRegister, .-ADC_SAR_2_theACLK_GetPhaseRegister
 685              		.text
 686              	.Letext0:
 687              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 688              		.section	.debug_info,"",%progbits
 689              	.Ldebug_info0:
 690 0000 18030000 		.4byte	0x318
 691 0004 0200     		.2byte	0x2
 692 0006 00000000 		.4byte	.Ldebug_abbrev0
 693 000a 04       		.byte	0x4
 694 000b 01       		.uleb128 0x1
 695 000c B5020000 		.4byte	.LASF39
 696 0010 01       		.byte	0x1
 697 0011 56000000 		.4byte	.LASF40
 698 0015 E5000000 		.4byte	.LASF41
 699 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 700 001d 00000000 		.4byte	0
 701 0021 00000000 		.4byte	0
 702 0025 00000000 		.4byte	.Ldebug_line0
 703 0029 02       		.uleb128 0x2
 704 002a 01       		.byte	0x1
 705 002b 06       		.byte	0x6
 706 002c 45030000 		.4byte	.LASF0
 707 0030 02       		.uleb128 0x2
 708 0031 01       		.byte	0x1
 709 0032 08       		.byte	0x8
 710 0033 89000000 		.4byte	.LASF1
 711 0037 02       		.uleb128 0x2
 712 0038 02       		.byte	0x2
 713 0039 05       		.byte	0x5
 714 003a 80020000 		.4byte	.LASF2
 715 003e 02       		.uleb128 0x2
 716 003f 02       		.byte	0x2
 717 0040 07       		.byte	0x7
 718 0041 D2000000 		.4byte	.LASF3
 719 0045 02       		.uleb128 0x2
 720 0046 04       		.byte	0x4
 721 0047 05       		.byte	0x5
 722 0048 29030000 		.4byte	.LASF4
 723 004c 02       		.uleb128 0x2
 724 004d 04       		.byte	0x4
 725 004e 07       		.byte	0x7
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 24


 726 004f C0000000 		.4byte	.LASF5
 727 0053 02       		.uleb128 0x2
 728 0054 08       		.byte	0x8
 729 0055 05       		.byte	0x5
 730 0056 65020000 		.4byte	.LASF6
 731 005a 02       		.uleb128 0x2
 732 005b 08       		.byte	0x8
 733 005c 07       		.byte	0x7
 734 005d 07020000 		.4byte	.LASF7
 735 0061 03       		.uleb128 0x3
 736 0062 04       		.byte	0x4
 737 0063 05       		.byte	0x5
 738 0064 696E7400 		.ascii	"int\000"
 739 0068 02       		.uleb128 0x2
 740 0069 04       		.byte	0x4
 741 006a 07       		.byte	0x7
 742 006b F2010000 		.4byte	.LASF8
 743 006f 04       		.uleb128 0x4
 744 0070 AF020000 		.4byte	.LASF9
 745 0074 02       		.byte	0x2
 746 0075 5B       		.byte	0x5b
 747 0076 30000000 		.4byte	0x30
 748 007a 04       		.uleb128 0x4
 749 007b C9010000 		.4byte	.LASF10
 750 007f 02       		.byte	0x2
 751 0080 5C       		.byte	0x5c
 752 0081 3E000000 		.4byte	0x3e
 753 0085 02       		.uleb128 0x2
 754 0086 04       		.byte	0x4
 755 0087 04       		.byte	0x4
 756 0088 83000000 		.4byte	.LASF11
 757 008c 02       		.uleb128 0x2
 758 008d 08       		.byte	0x8
 759 008e 04       		.byte	0x4
 760 008f 5B010000 		.4byte	.LASF12
 761 0093 02       		.uleb128 0x2
 762 0094 01       		.byte	0x1
 763 0095 08       		.byte	0x8
 764 0096 73020000 		.4byte	.LASF13
 765 009a 04       		.uleb128 0x4
 766 009b 97000000 		.4byte	.LASF14
 767 009f 02       		.byte	0x2
 768 00a0 F0       		.byte	0xf0
 769 00a1 A5000000 		.4byte	0xa5
 770 00a5 05       		.uleb128 0x5
 771 00a6 6F000000 		.4byte	0x6f
 772 00aa 04       		.uleb128 0x4
 773 00ab 00000000 		.4byte	.LASF15
 774 00af 02       		.byte	0x2
 775 00b0 F1       		.byte	0xf1
 776 00b1 B5000000 		.4byte	0xb5
 777 00b5 05       		.uleb128 0x5
 778 00b6 7A000000 		.4byte	0x7a
 779 00ba 06       		.uleb128 0x6
 780 00bb 01       		.byte	0x1
 781 00bc 62010000 		.4byte	.LASF16
 782 00c0 01       		.byte	0x1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 25


 783 00c1 2901     		.2byte	0x129
 784 00c3 01       		.byte	0x1
 785 00c4 7A000000 		.4byte	0x7a
 786 00c8 01       		.byte	0x1
 787 00c9 06       		.uleb128 0x6
 788 00ca 01       		.byte	0x1
 789 00cb 51030000 		.4byte	.LASF17
 790 00cf 01       		.byte	0x1
 791 00d0 D001     		.2byte	0x1d0
 792 00d2 01       		.byte	0x1
 793 00d3 6F000000 		.4byte	0x6f
 794 00d7 01       		.byte	0x1
 795 00d8 07       		.uleb128 0x7
 796 00d9 01       		.byte	0x1
 797 00da 8F010000 		.4byte	.LASF18
 798 00de 01       		.byte	0x1
 799 00df 2D       		.byte	0x2d
 800 00e0 01       		.byte	0x1
 801 00e1 00000000 		.4byte	.LFB0
 802 00e5 18000000 		.4byte	.LFE0
 803 00e9 02       		.byte	0x2
 804 00ea 7D       		.byte	0x7d
 805 00eb 00       		.sleb128 0
 806 00ec 01       		.byte	0x1
 807 00ed 07       		.uleb128 0x7
 808 00ee 01       		.byte	0x1
 809 00ef 1E020000 		.4byte	.LASF19
 810 00f3 01       		.byte	0x1
 811 00f4 47       		.byte	0x47
 812 00f5 01       		.byte	0x1
 813 00f6 00000000 		.4byte	.LFB1
 814 00fa 18000000 		.4byte	.LFE1
 815 00fe 02       		.byte	0x2
 816 00ff 7D       		.byte	0x7d
 817 0100 00       		.sleb128 0
 818 0101 01       		.byte	0x1
 819 0102 08       		.uleb128 0x8
 820 0103 01       		.byte	0x1
 821 0104 06000000 		.4byte	.LASF20
 822 0108 01       		.byte	0x1
 823 0109 64       		.byte	0x64
 824 010a 01       		.byte	0x1
 825 010b 00000000 		.4byte	.LFB2
 826 010f 74000000 		.4byte	.LFE2
 827 0113 00000000 		.4byte	.LLST0
 828 0117 01       		.byte	0x1
 829 0118 36010000 		.4byte	0x136
 830 011c 09       		.uleb128 0x9
 831 011d 0E000000 		.4byte	.LBB10
 832 0121 74000000 		.4byte	.LBE10
 833 0125 0A       		.uleb128 0xa
 834 0126 28000000 		.4byte	.LASF26
 835 012a 01       		.byte	0x1
 836 012b 69       		.byte	0x69
 837 012c 7A000000 		.4byte	0x7a
 838 0130 20000000 		.4byte	.LLST1
 839 0134 00       		.byte	0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 26


 840 0135 00       		.byte	0
 841 0136 0B       		.uleb128 0xb
 842 0137 01       		.byte	0x1
 843 0138 3C010000 		.4byte	.LASF21
 844 013c 01       		.byte	0x1
 845 013d 9D       		.byte	0x9d
 846 013e 01       		.byte	0x1
 847 013f 00000000 		.4byte	.LFB3
 848 0143 18000000 		.4byte	.LFE3
 849 0147 02       		.byte	0x2
 850 0148 7D       		.byte	0x7d
 851 0149 00       		.sleb128 0
 852 014a 01       		.byte	0x1
 853 014b 5F010000 		.4byte	0x15f
 854 014f 0C       		.uleb128 0xc
 855 0150 22000000 		.4byte	.LASF23
 856 0154 01       		.byte	0x1
 857 0155 9D       		.byte	0x9d
 858 0156 6F000000 		.4byte	0x6f
 859 015a 3E000000 		.4byte	.LLST2
 860 015e 00       		.byte	0
 861 015f 08       		.uleb128 0x8
 862 0160 01       		.byte	0x1
 863 0161 8A020000 		.4byte	.LASF22
 864 0165 01       		.byte	0x1
 865 0166 C1       		.byte	0xc1
 866 0167 01       		.byte	0x1
 867 0168 00000000 		.4byte	.LFB4
 868 016c D4000000 		.4byte	.LFE4
 869 0170 78000000 		.4byte	.LLST3
 870 0174 01       		.byte	0x1
 871 0175 DF010000 		.4byte	0x1df
 872 0179 0C       		.uleb128 0xc
 873 017a 31010000 		.4byte	.LASF24
 874 017e 01       		.byte	0x1
 875 017f C1       		.byte	0xc1
 876 0180 7A000000 		.4byte	0x7a
 877 0184 98000000 		.4byte	.LLST4
 878 0188 0C       		.uleb128 0xc
 879 0189 87010000 		.4byte	.LASF25
 880 018d 01       		.byte	0x1
 881 018e C1       		.byte	0xc1
 882 018f 6F000000 		.4byte	0x6f
 883 0193 F6000000 		.4byte	.LLST5
 884 0197 0A       		.uleb128 0xa
 885 0198 21030000 		.4byte	.LASF27
 886 019c 01       		.byte	0x1
 887 019d C4       		.byte	0xc4
 888 019e 6F000000 		.4byte	0x6f
 889 01a2 49010000 		.4byte	.LLST6
 890 01a6 0D       		.uleb128 0xd
 891 01a7 FF010000 		.4byte	.LASF28
 892 01ab 01       		.byte	0x1
 893 01ac C6       		.byte	0xc6
 894 01ad 6F000000 		.4byte	0x6f
 895 01b1 01       		.byte	0x1
 896 01b2 56       		.byte	0x56
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 27


 897 01b3 0D       		.uleb128 0xd
 898 01b4 28000000 		.4byte	.LASF26
 899 01b8 01       		.byte	0x1
 900 01b9 C7       		.byte	0xc7
 901 01ba 7A000000 		.4byte	0x7a
 902 01be 01       		.byte	0x1
 903 01bf 52       		.byte	0x52
 904 01c0 0E       		.uleb128 0xe
 905 01c1 C9000000 		.4byte	0xc9
 906 01c5 02000000 		.4byte	.LBB11
 907 01c9 00000000 		.4byte	.Ldebug_ranges0+0
 908 01cd 01       		.byte	0x1
 909 01ce C6       		.byte	0xc6
 910 01cf 0E       		.uleb128 0xe
 911 01d0 BA000000 		.4byte	0xba
 912 01d4 04000000 		.4byte	.LBB15
 913 01d8 20000000 		.4byte	.Ldebug_ranges0+0x20
 914 01dc 01       		.byte	0x1
 915 01dd C7       		.byte	0xc7
 916 01de 00       		.byte	0
 917 01df 0F       		.uleb128 0xf
 918 01e0 BA000000 		.4byte	0xba
 919 01e4 00000000 		.4byte	.LFB5
 920 01e8 0C000000 		.4byte	.LFE5
 921 01ec 02       		.byte	0x2
 922 01ed 7D       		.byte	0x7d
 923 01ee 00       		.sleb128 0
 924 01ef 01       		.byte	0x1
 925 01f0 10       		.uleb128 0x10
 926 01f1 01       		.byte	0x1
 927 01f2 D0010000 		.4byte	.LASF29
 928 01f6 01       		.byte	0x1
 929 01f7 4C01     		.2byte	0x14c
 930 01f9 01       		.byte	0x1
 931 01fa 00000000 		.4byte	.LFB6
 932 01fe 14000000 		.4byte	.LFE6
 933 0202 02       		.byte	0x2
 934 0203 7D       		.byte	0x7d
 935 0204 00       		.sleb128 0
 936 0205 01       		.byte	0x1
 937 0206 1B020000 		.4byte	0x21b
 938 020a 11       		.uleb128 0x11
 939 020b 59020000 		.4byte	.LASF30
 940 020f 01       		.byte	0x1
 941 0210 4C01     		.2byte	0x14c
 942 0212 6F000000 		.4byte	0x6f
 943 0216 60010000 		.4byte	.LLST7
 944 021a 00       		.byte	0
 945 021b 10       		.uleb128 0x10
 946 021c 01       		.byte	0x1
 947 021d 9C000000 		.4byte	.LASF31
 948 0221 01       		.byte	0x1
 949 0222 6F01     		.2byte	0x16f
 950 0224 01       		.byte	0x1
 951 0225 00000000 		.4byte	.LFB7
 952 0229 14000000 		.4byte	.LFE7
 953 022d 02       		.byte	0x2
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 28


 954 022e 7D       		.byte	0x7d
 955 022f 00       		.sleb128 0
 956 0230 01       		.byte	0x1
 957 0231 46020000 		.4byte	0x246
 958 0235 11       		.uleb128 0x11
 959 0236 59020000 		.4byte	.LASF30
 960 023a 01       		.byte	0x1
 961 023b 6F01     		.2byte	0x16f
 962 023d 6F000000 		.4byte	0x6f
 963 0241 81010000 		.4byte	.LLST8
 964 0245 00       		.byte	0
 965 0246 12       		.uleb128 0x12
 966 0247 01       		.byte	0x1
 967 0248 A7010000 		.4byte	.LASF37
 968 024c 01       		.byte	0x1
 969 024d 8401     		.2byte	0x184
 970 024f 01       		.byte	0x1
 971 0250 6F000000 		.4byte	0x6f
 972 0254 00000000 		.4byte	.LFB8
 973 0258 10000000 		.4byte	.LFE8
 974 025c 02       		.byte	0x2
 975 025d 7D       		.byte	0x7d
 976 025e 00       		.sleb128 0
 977 025f 01       		.byte	0x1
 978 0260 10       		.uleb128 0x10
 979 0261 01       		.byte	0x1
 980 0262 35020000 		.4byte	.LASF32
 981 0266 01       		.byte	0x1
 982 0267 A301     		.2byte	0x1a3
 983 0269 01       		.byte	0x1
 984 026a 00000000 		.4byte	.LFB9
 985 026e 50000000 		.4byte	.LFE9
 986 0272 02       		.byte	0x2
 987 0273 7D       		.byte	0x7d
 988 0274 00       		.sleb128 0
 989 0275 01       		.byte	0x1
 990 0276 C5020000 		.4byte	0x2c5
 991 027a 11       		.uleb128 0x11
 992 027b 32030000 		.4byte	.LASF33
 993 027f 01       		.byte	0x1
 994 0280 A301     		.2byte	0x1a3
 995 0282 6F000000 		.4byte	0x6f
 996 0286 A2010000 		.4byte	.LLST9
 997 028a 13       		.uleb128 0x13
 998 028b 78020000 		.4byte	.LASF34
 999 028f 01       		.byte	0x1
 1000 0290 A501     		.2byte	0x1a5
 1001 0292 7A000000 		.4byte	0x7a
 1002 0296 01       		.byte	0x1
 1003 0297 51       		.byte	0x51
 1004 0298 14       		.uleb128 0x14
 1005 0299 75030000 		.4byte	.LASF42
 1006 029d 01       		.byte	0x1
 1007 029e A601     		.2byte	0x1a6
 1008 02a0 6F000000 		.4byte	0x6f
 1009 02a4 15       		.uleb128 0x15
 1010 02a5 BA000000 		.4byte	0xba
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 29


 1011 02a9 00000000 		.4byte	.LBB23
 1012 02ad 40000000 		.4byte	.Ldebug_ranges0+0x40
 1013 02b1 01       		.byte	0x1
 1014 02b2 A501     		.2byte	0x1a5
 1015 02b4 16       		.uleb128 0x16
 1016 02b5 C9000000 		.4byte	0xc9
 1017 02b9 04000000 		.4byte	.LBB26
 1018 02bd 08000000 		.4byte	.LBE26
 1019 02c1 01       		.byte	0x1
 1020 02c2 A601     		.2byte	0x1a6
 1021 02c4 00       		.byte	0
 1022 02c5 0F       		.uleb128 0xf
 1023 02c6 C9000000 		.4byte	0xc9
 1024 02ca 00000000 		.4byte	.LFB10
 1025 02ce 10000000 		.4byte	.LFE10
 1026 02d2 02       		.byte	0x2
 1027 02d3 7D       		.byte	0x7d
 1028 02d4 00       		.sleb128 0
 1029 02d5 01       		.byte	0x1
 1030 02d6 10       		.uleb128 0x10
 1031 02d7 01       		.byte	0x1
 1032 02d8 FE020000 		.4byte	.LASF35
 1033 02dc 01       		.byte	0x1
 1034 02dd EC01     		.2byte	0x1ec
 1035 02df 01       		.byte	0x1
 1036 02e0 00000000 		.4byte	.LFB11
 1037 02e4 10000000 		.4byte	.LFE11
 1038 02e8 02       		.byte	0x2
 1039 02e9 7D       		.byte	0x7d
 1040 02ea 00       		.sleb128 0
 1041 02eb 01       		.byte	0x1
 1042 02ec 01030000 		.4byte	0x301
 1043 02f0 11       		.uleb128 0x11
 1044 02f1 3C030000 		.4byte	.LASF36
 1045 02f5 01       		.byte	0x1
 1046 02f6 EC01     		.2byte	0x1ec
 1047 02f8 6F000000 		.4byte	0x6f
 1048 02fc F5010000 		.4byte	.LLST10
 1049 0300 00       		.byte	0
 1050 0301 12       		.uleb128 0x12
 1051 0302 01       		.byte	0x1
 1052 0303 33000000 		.4byte	.LASF38
 1053 0307 01       		.byte	0x1
 1054 0308 0102     		.2byte	0x201
 1055 030a 01       		.byte	0x1
 1056 030b 6F000000 		.4byte	0x6f
 1057 030f 00000000 		.4byte	.LFB12
 1058 0313 10000000 		.4byte	.LFE12
 1059 0317 02       		.byte	0x2
 1060 0318 7D       		.byte	0x7d
 1061 0319 00       		.sleb128 0
 1062 031a 01       		.byte	0x1
 1063 031b 00       		.byte	0
 1064              		.section	.debug_abbrev,"",%progbits
 1065              	.Ldebug_abbrev0:
 1066 0000 01       		.uleb128 0x1
 1067 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 30


 1068 0002 01       		.byte	0x1
 1069 0003 25       		.uleb128 0x25
 1070 0004 0E       		.uleb128 0xe
 1071 0005 13       		.uleb128 0x13
 1072 0006 0B       		.uleb128 0xb
 1073 0007 03       		.uleb128 0x3
 1074 0008 0E       		.uleb128 0xe
 1075 0009 1B       		.uleb128 0x1b
 1076 000a 0E       		.uleb128 0xe
 1077 000b 55       		.uleb128 0x55
 1078 000c 06       		.uleb128 0x6
 1079 000d 11       		.uleb128 0x11
 1080 000e 01       		.uleb128 0x1
 1081 000f 52       		.uleb128 0x52
 1082 0010 01       		.uleb128 0x1
 1083 0011 10       		.uleb128 0x10
 1084 0012 06       		.uleb128 0x6
 1085 0013 00       		.byte	0
 1086 0014 00       		.byte	0
 1087 0015 02       		.uleb128 0x2
 1088 0016 24       		.uleb128 0x24
 1089 0017 00       		.byte	0
 1090 0018 0B       		.uleb128 0xb
 1091 0019 0B       		.uleb128 0xb
 1092 001a 3E       		.uleb128 0x3e
 1093 001b 0B       		.uleb128 0xb
 1094 001c 03       		.uleb128 0x3
 1095 001d 0E       		.uleb128 0xe
 1096 001e 00       		.byte	0
 1097 001f 00       		.byte	0
 1098 0020 03       		.uleb128 0x3
 1099 0021 24       		.uleb128 0x24
 1100 0022 00       		.byte	0
 1101 0023 0B       		.uleb128 0xb
 1102 0024 0B       		.uleb128 0xb
 1103 0025 3E       		.uleb128 0x3e
 1104 0026 0B       		.uleb128 0xb
 1105 0027 03       		.uleb128 0x3
 1106 0028 08       		.uleb128 0x8
 1107 0029 00       		.byte	0
 1108 002a 00       		.byte	0
 1109 002b 04       		.uleb128 0x4
 1110 002c 16       		.uleb128 0x16
 1111 002d 00       		.byte	0
 1112 002e 03       		.uleb128 0x3
 1113 002f 0E       		.uleb128 0xe
 1114 0030 3A       		.uleb128 0x3a
 1115 0031 0B       		.uleb128 0xb
 1116 0032 3B       		.uleb128 0x3b
 1117 0033 0B       		.uleb128 0xb
 1118 0034 49       		.uleb128 0x49
 1119 0035 13       		.uleb128 0x13
 1120 0036 00       		.byte	0
 1121 0037 00       		.byte	0
 1122 0038 05       		.uleb128 0x5
 1123 0039 35       		.uleb128 0x35
 1124 003a 00       		.byte	0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 31


 1125 003b 49       		.uleb128 0x49
 1126 003c 13       		.uleb128 0x13
 1127 003d 00       		.byte	0
 1128 003e 00       		.byte	0
 1129 003f 06       		.uleb128 0x6
 1130 0040 2E       		.uleb128 0x2e
 1131 0041 00       		.byte	0
 1132 0042 3F       		.uleb128 0x3f
 1133 0043 0C       		.uleb128 0xc
 1134 0044 03       		.uleb128 0x3
 1135 0045 0E       		.uleb128 0xe
 1136 0046 3A       		.uleb128 0x3a
 1137 0047 0B       		.uleb128 0xb
 1138 0048 3B       		.uleb128 0x3b
 1139 0049 05       		.uleb128 0x5
 1140 004a 27       		.uleb128 0x27
 1141 004b 0C       		.uleb128 0xc
 1142 004c 49       		.uleb128 0x49
 1143 004d 13       		.uleb128 0x13
 1144 004e 20       		.uleb128 0x20
 1145 004f 0B       		.uleb128 0xb
 1146 0050 00       		.byte	0
 1147 0051 00       		.byte	0
 1148 0052 07       		.uleb128 0x7
 1149 0053 2E       		.uleb128 0x2e
 1150 0054 00       		.byte	0
 1151 0055 3F       		.uleb128 0x3f
 1152 0056 0C       		.uleb128 0xc
 1153 0057 03       		.uleb128 0x3
 1154 0058 0E       		.uleb128 0xe
 1155 0059 3A       		.uleb128 0x3a
 1156 005a 0B       		.uleb128 0xb
 1157 005b 3B       		.uleb128 0x3b
 1158 005c 0B       		.uleb128 0xb
 1159 005d 27       		.uleb128 0x27
 1160 005e 0C       		.uleb128 0xc
 1161 005f 11       		.uleb128 0x11
 1162 0060 01       		.uleb128 0x1
 1163 0061 12       		.uleb128 0x12
 1164 0062 01       		.uleb128 0x1
 1165 0063 40       		.uleb128 0x40
 1166 0064 0A       		.uleb128 0xa
 1167 0065 9742     		.uleb128 0x2117
 1168 0067 0C       		.uleb128 0xc
 1169 0068 00       		.byte	0
 1170 0069 00       		.byte	0
 1171 006a 08       		.uleb128 0x8
 1172 006b 2E       		.uleb128 0x2e
 1173 006c 01       		.byte	0x1
 1174 006d 3F       		.uleb128 0x3f
 1175 006e 0C       		.uleb128 0xc
 1176 006f 03       		.uleb128 0x3
 1177 0070 0E       		.uleb128 0xe
 1178 0071 3A       		.uleb128 0x3a
 1179 0072 0B       		.uleb128 0xb
 1180 0073 3B       		.uleb128 0x3b
 1181 0074 0B       		.uleb128 0xb
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 32


 1182 0075 27       		.uleb128 0x27
 1183 0076 0C       		.uleb128 0xc
 1184 0077 11       		.uleb128 0x11
 1185 0078 01       		.uleb128 0x1
 1186 0079 12       		.uleb128 0x12
 1187 007a 01       		.uleb128 0x1
 1188 007b 40       		.uleb128 0x40
 1189 007c 06       		.uleb128 0x6
 1190 007d 9742     		.uleb128 0x2117
 1191 007f 0C       		.uleb128 0xc
 1192 0080 01       		.uleb128 0x1
 1193 0081 13       		.uleb128 0x13
 1194 0082 00       		.byte	0
 1195 0083 00       		.byte	0
 1196 0084 09       		.uleb128 0x9
 1197 0085 0B       		.uleb128 0xb
 1198 0086 01       		.byte	0x1
 1199 0087 11       		.uleb128 0x11
 1200 0088 01       		.uleb128 0x1
 1201 0089 12       		.uleb128 0x12
 1202 008a 01       		.uleb128 0x1
 1203 008b 00       		.byte	0
 1204 008c 00       		.byte	0
 1205 008d 0A       		.uleb128 0xa
 1206 008e 34       		.uleb128 0x34
 1207 008f 00       		.byte	0
 1208 0090 03       		.uleb128 0x3
 1209 0091 0E       		.uleb128 0xe
 1210 0092 3A       		.uleb128 0x3a
 1211 0093 0B       		.uleb128 0xb
 1212 0094 3B       		.uleb128 0x3b
 1213 0095 0B       		.uleb128 0xb
 1214 0096 49       		.uleb128 0x49
 1215 0097 13       		.uleb128 0x13
 1216 0098 02       		.uleb128 0x2
 1217 0099 06       		.uleb128 0x6
 1218 009a 00       		.byte	0
 1219 009b 00       		.byte	0
 1220 009c 0B       		.uleb128 0xb
 1221 009d 2E       		.uleb128 0x2e
 1222 009e 01       		.byte	0x1
 1223 009f 3F       		.uleb128 0x3f
 1224 00a0 0C       		.uleb128 0xc
 1225 00a1 03       		.uleb128 0x3
 1226 00a2 0E       		.uleb128 0xe
 1227 00a3 3A       		.uleb128 0x3a
 1228 00a4 0B       		.uleb128 0xb
 1229 00a5 3B       		.uleb128 0x3b
 1230 00a6 0B       		.uleb128 0xb
 1231 00a7 27       		.uleb128 0x27
 1232 00a8 0C       		.uleb128 0xc
 1233 00a9 11       		.uleb128 0x11
 1234 00aa 01       		.uleb128 0x1
 1235 00ab 12       		.uleb128 0x12
 1236 00ac 01       		.uleb128 0x1
 1237 00ad 40       		.uleb128 0x40
 1238 00ae 0A       		.uleb128 0xa
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 33


 1239 00af 9742     		.uleb128 0x2117
 1240 00b1 0C       		.uleb128 0xc
 1241 00b2 01       		.uleb128 0x1
 1242 00b3 13       		.uleb128 0x13
 1243 00b4 00       		.byte	0
 1244 00b5 00       		.byte	0
 1245 00b6 0C       		.uleb128 0xc
 1246 00b7 05       		.uleb128 0x5
 1247 00b8 00       		.byte	0
 1248 00b9 03       		.uleb128 0x3
 1249 00ba 0E       		.uleb128 0xe
 1250 00bb 3A       		.uleb128 0x3a
 1251 00bc 0B       		.uleb128 0xb
 1252 00bd 3B       		.uleb128 0x3b
 1253 00be 0B       		.uleb128 0xb
 1254 00bf 49       		.uleb128 0x49
 1255 00c0 13       		.uleb128 0x13
 1256 00c1 02       		.uleb128 0x2
 1257 00c2 06       		.uleb128 0x6
 1258 00c3 00       		.byte	0
 1259 00c4 00       		.byte	0
 1260 00c5 0D       		.uleb128 0xd
 1261 00c6 34       		.uleb128 0x34
 1262 00c7 00       		.byte	0
 1263 00c8 03       		.uleb128 0x3
 1264 00c9 0E       		.uleb128 0xe
 1265 00ca 3A       		.uleb128 0x3a
 1266 00cb 0B       		.uleb128 0xb
 1267 00cc 3B       		.uleb128 0x3b
 1268 00cd 0B       		.uleb128 0xb
 1269 00ce 49       		.uleb128 0x49
 1270 00cf 13       		.uleb128 0x13
 1271 00d0 02       		.uleb128 0x2
 1272 00d1 0A       		.uleb128 0xa
 1273 00d2 00       		.byte	0
 1274 00d3 00       		.byte	0
 1275 00d4 0E       		.uleb128 0xe
 1276 00d5 1D       		.uleb128 0x1d
 1277 00d6 00       		.byte	0
 1278 00d7 31       		.uleb128 0x31
 1279 00d8 13       		.uleb128 0x13
 1280 00d9 52       		.uleb128 0x52
 1281 00da 01       		.uleb128 0x1
 1282 00db 55       		.uleb128 0x55
 1283 00dc 06       		.uleb128 0x6
 1284 00dd 58       		.uleb128 0x58
 1285 00de 0B       		.uleb128 0xb
 1286 00df 59       		.uleb128 0x59
 1287 00e0 0B       		.uleb128 0xb
 1288 00e1 00       		.byte	0
 1289 00e2 00       		.byte	0
 1290 00e3 0F       		.uleb128 0xf
 1291 00e4 2E       		.uleb128 0x2e
 1292 00e5 00       		.byte	0
 1293 00e6 31       		.uleb128 0x31
 1294 00e7 13       		.uleb128 0x13
 1295 00e8 11       		.uleb128 0x11
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 34


 1296 00e9 01       		.uleb128 0x1
 1297 00ea 12       		.uleb128 0x12
 1298 00eb 01       		.uleb128 0x1
 1299 00ec 40       		.uleb128 0x40
 1300 00ed 0A       		.uleb128 0xa
 1301 00ee 9742     		.uleb128 0x2117
 1302 00f0 0C       		.uleb128 0xc
 1303 00f1 00       		.byte	0
 1304 00f2 00       		.byte	0
 1305 00f3 10       		.uleb128 0x10
 1306 00f4 2E       		.uleb128 0x2e
 1307 00f5 01       		.byte	0x1
 1308 00f6 3F       		.uleb128 0x3f
 1309 00f7 0C       		.uleb128 0xc
 1310 00f8 03       		.uleb128 0x3
 1311 00f9 0E       		.uleb128 0xe
 1312 00fa 3A       		.uleb128 0x3a
 1313 00fb 0B       		.uleb128 0xb
 1314 00fc 3B       		.uleb128 0x3b
 1315 00fd 05       		.uleb128 0x5
 1316 00fe 27       		.uleb128 0x27
 1317 00ff 0C       		.uleb128 0xc
 1318 0100 11       		.uleb128 0x11
 1319 0101 01       		.uleb128 0x1
 1320 0102 12       		.uleb128 0x12
 1321 0103 01       		.uleb128 0x1
 1322 0104 40       		.uleb128 0x40
 1323 0105 0A       		.uleb128 0xa
 1324 0106 9742     		.uleb128 0x2117
 1325 0108 0C       		.uleb128 0xc
 1326 0109 01       		.uleb128 0x1
 1327 010a 13       		.uleb128 0x13
 1328 010b 00       		.byte	0
 1329 010c 00       		.byte	0
 1330 010d 11       		.uleb128 0x11
 1331 010e 05       		.uleb128 0x5
 1332 010f 00       		.byte	0
 1333 0110 03       		.uleb128 0x3
 1334 0111 0E       		.uleb128 0xe
 1335 0112 3A       		.uleb128 0x3a
 1336 0113 0B       		.uleb128 0xb
 1337 0114 3B       		.uleb128 0x3b
 1338 0115 05       		.uleb128 0x5
 1339 0116 49       		.uleb128 0x49
 1340 0117 13       		.uleb128 0x13
 1341 0118 02       		.uleb128 0x2
 1342 0119 06       		.uleb128 0x6
 1343 011a 00       		.byte	0
 1344 011b 00       		.byte	0
 1345 011c 12       		.uleb128 0x12
 1346 011d 2E       		.uleb128 0x2e
 1347 011e 00       		.byte	0
 1348 011f 3F       		.uleb128 0x3f
 1349 0120 0C       		.uleb128 0xc
 1350 0121 03       		.uleb128 0x3
 1351 0122 0E       		.uleb128 0xe
 1352 0123 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 35


 1353 0124 0B       		.uleb128 0xb
 1354 0125 3B       		.uleb128 0x3b
 1355 0126 05       		.uleb128 0x5
 1356 0127 27       		.uleb128 0x27
 1357 0128 0C       		.uleb128 0xc
 1358 0129 49       		.uleb128 0x49
 1359 012a 13       		.uleb128 0x13
 1360 012b 11       		.uleb128 0x11
 1361 012c 01       		.uleb128 0x1
 1362 012d 12       		.uleb128 0x12
 1363 012e 01       		.uleb128 0x1
 1364 012f 40       		.uleb128 0x40
 1365 0130 0A       		.uleb128 0xa
 1366 0131 9742     		.uleb128 0x2117
 1367 0133 0C       		.uleb128 0xc
 1368 0134 00       		.byte	0
 1369 0135 00       		.byte	0
 1370 0136 13       		.uleb128 0x13
 1371 0137 34       		.uleb128 0x34
 1372 0138 00       		.byte	0
 1373 0139 03       		.uleb128 0x3
 1374 013a 0E       		.uleb128 0xe
 1375 013b 3A       		.uleb128 0x3a
 1376 013c 0B       		.uleb128 0xb
 1377 013d 3B       		.uleb128 0x3b
 1378 013e 05       		.uleb128 0x5
 1379 013f 49       		.uleb128 0x49
 1380 0140 13       		.uleb128 0x13
 1381 0141 02       		.uleb128 0x2
 1382 0142 0A       		.uleb128 0xa
 1383 0143 00       		.byte	0
 1384 0144 00       		.byte	0
 1385 0145 14       		.uleb128 0x14
 1386 0146 34       		.uleb128 0x34
 1387 0147 00       		.byte	0
 1388 0148 03       		.uleb128 0x3
 1389 0149 0E       		.uleb128 0xe
 1390 014a 3A       		.uleb128 0x3a
 1391 014b 0B       		.uleb128 0xb
 1392 014c 3B       		.uleb128 0x3b
 1393 014d 05       		.uleb128 0x5
 1394 014e 49       		.uleb128 0x49
 1395 014f 13       		.uleb128 0x13
 1396 0150 00       		.byte	0
 1397 0151 00       		.byte	0
 1398 0152 15       		.uleb128 0x15
 1399 0153 1D       		.uleb128 0x1d
 1400 0154 00       		.byte	0
 1401 0155 31       		.uleb128 0x31
 1402 0156 13       		.uleb128 0x13
 1403 0157 52       		.uleb128 0x52
 1404 0158 01       		.uleb128 0x1
 1405 0159 55       		.uleb128 0x55
 1406 015a 06       		.uleb128 0x6
 1407 015b 58       		.uleb128 0x58
 1408 015c 0B       		.uleb128 0xb
 1409 015d 59       		.uleb128 0x59
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 36


 1410 015e 05       		.uleb128 0x5
 1411 015f 00       		.byte	0
 1412 0160 00       		.byte	0
 1413 0161 16       		.uleb128 0x16
 1414 0162 1D       		.uleb128 0x1d
 1415 0163 00       		.byte	0
 1416 0164 31       		.uleb128 0x31
 1417 0165 13       		.uleb128 0x13
 1418 0166 11       		.uleb128 0x11
 1419 0167 01       		.uleb128 0x1
 1420 0168 12       		.uleb128 0x12
 1421 0169 01       		.uleb128 0x1
 1422 016a 58       		.uleb128 0x58
 1423 016b 0B       		.uleb128 0xb
 1424 016c 59       		.uleb128 0x59
 1425 016d 05       		.uleb128 0x5
 1426 016e 00       		.byte	0
 1427 016f 00       		.byte	0
 1428 0170 00       		.byte	0
 1429              		.section	.debug_loc,"",%progbits
 1430              	.Ldebug_loc0:
 1431              	.LLST0:
 1432 0000 00000000 		.4byte	.LFB2
 1433 0004 02000000 		.4byte	.LCFI0
 1434 0008 0200     		.2byte	0x2
 1435 000a 7D       		.byte	0x7d
 1436 000b 00       		.sleb128 0
 1437 000c 02000000 		.4byte	.LCFI0
 1438 0010 74000000 		.4byte	.LFE2
 1439 0014 0200     		.2byte	0x2
 1440 0016 7D       		.byte	0x7d
 1441 0017 08       		.sleb128 8
 1442 0018 00000000 		.4byte	0
 1443 001c 00000000 		.4byte	0
 1444              	.LLST1:
 1445 0020 30000000 		.4byte	.LVL0
 1446 0024 42000000 		.4byte	.LVL1
 1447 0028 0100     		.2byte	0x1
 1448 002a 51       		.byte	0x51
 1449 002b 42000000 		.4byte	.LVL1
 1450 002f 58000000 		.4byte	.LVL2
 1451 0033 0100     		.2byte	0x1
 1452 0035 53       		.byte	0x53
 1453 0036 00000000 		.4byte	0
 1454 003a 00000000 		.4byte	0
 1455              	.LLST2:
 1456 003e 00000000 		.4byte	.LVL3
 1457 0042 0A000000 		.4byte	.LVL4
 1458 0046 0100     		.2byte	0x1
 1459 0048 50       		.byte	0x50
 1460 0049 0A000000 		.4byte	.LVL4
 1461 004d 0C000000 		.4byte	.LVL5
 1462 0051 0400     		.2byte	0x4
 1463 0053 F3       		.byte	0xf3
 1464 0054 01       		.uleb128 0x1
 1465 0055 50       		.byte	0x50
 1466 0056 9F       		.byte	0x9f
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 37


 1467 0057 0C000000 		.4byte	.LVL5
 1468 005b 10000000 		.4byte	.LVL6
 1469 005f 0100     		.2byte	0x1
 1470 0061 50       		.byte	0x50
 1471 0062 10000000 		.4byte	.LVL6
 1472 0066 18000000 		.4byte	.LFE3
 1473 006a 0400     		.2byte	0x4
 1474 006c F3       		.byte	0xf3
 1475 006d 01       		.uleb128 0x1
 1476 006e 50       		.byte	0x50
 1477 006f 9F       		.byte	0x9f
 1478 0070 00000000 		.4byte	0
 1479 0074 00000000 		.4byte	0
 1480              	.LLST3:
 1481 0078 00000000 		.4byte	.LFB4
 1482 007c 02000000 		.4byte	.LCFI1
 1483 0080 0200     		.2byte	0x2
 1484 0082 7D       		.byte	0x7d
 1485 0083 00       		.sleb128 0
 1486 0084 02000000 		.4byte	.LCFI1
 1487 0088 D4000000 		.4byte	.LFE4
 1488 008c 0200     		.2byte	0x2
 1489 008e 7D       		.byte	0x7d
 1490 008f 14       		.sleb128 20
 1491 0090 00000000 		.4byte	0
 1492 0094 00000000 		.4byte	0
 1493              	.LLST4:
 1494 0098 00000000 		.4byte	.LVL7
 1495 009c 2E000000 		.4byte	.LVL11
 1496 00a0 0100     		.2byte	0x1
 1497 00a2 50       		.byte	0x50
 1498 00a3 2E000000 		.4byte	.LVL11
 1499 00a7 34000000 		.4byte	.LVL12
 1500 00ab 0200     		.2byte	0x2
 1501 00ad 74       		.byte	0x74
 1502 00ae 00       		.sleb128 0
 1503 00af 34000000 		.4byte	.LVL12
 1504 00b3 A0000000 		.4byte	.LVL15
 1505 00b7 0100     		.2byte	0x1
 1506 00b9 50       		.byte	0x50
 1507 00ba A0000000 		.4byte	.LVL15
 1508 00be AA000000 		.4byte	.LVL16
 1509 00c2 0500     		.2byte	0x5
 1510 00c4 0C       		.byte	0xc
 1511 00c5 02400040 		.4byte	0x40004002
 1512 00c9 AA000000 		.4byte	.LVL16
 1513 00cd B0000000 		.4byte	.LVL18
 1514 00d1 0100     		.2byte	0x1
 1515 00d3 50       		.byte	0x50
 1516 00d4 B0000000 		.4byte	.LVL18
 1517 00d8 B4000000 		.4byte	.LVL19
 1518 00dc 0200     		.2byte	0x2
 1519 00de 71       		.byte	0x71
 1520 00df 00       		.sleb128 0
 1521 00e0 B4000000 		.4byte	.LVL19
 1522 00e4 D4000000 		.4byte	.LFE4
 1523 00e8 0400     		.2byte	0x4
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 38


 1524 00ea F3       		.byte	0xf3
 1525 00eb 01       		.uleb128 0x1
 1526 00ec 50       		.byte	0x50
 1527 00ed 9F       		.byte	0x9f
 1528 00ee 00000000 		.4byte	0
 1529 00f2 00000000 		.4byte	0
 1530              	.LLST5:
 1531 00f6 00000000 		.4byte	.LVL7
 1532 00fa 20000000 		.4byte	.LVL9
 1533 00fe 0100     		.2byte	0x1
 1534 0100 51       		.byte	0x51
 1535 0101 20000000 		.4byte	.LVL9
 1536 0105 2A000000 		.4byte	.LVL10
 1537 0109 0400     		.2byte	0x4
 1538 010b F3       		.byte	0xf3
 1539 010c 01       		.uleb128 0x1
 1540 010d 51       		.byte	0x51
 1541 010e 9F       		.byte	0x9f
 1542 010f 2A000000 		.4byte	.LVL10
 1543 0113 9A000000 		.4byte	.LVL14
 1544 0117 0100     		.2byte	0x1
 1545 0119 51       		.byte	0x51
 1546 011a 9A000000 		.4byte	.LVL14
 1547 011e AA000000 		.4byte	.LVL16
 1548 0122 0400     		.2byte	0x4
 1549 0124 F3       		.byte	0xf3
 1550 0125 01       		.uleb128 0x1
 1551 0126 51       		.byte	0x51
 1552 0127 9F       		.byte	0x9f
 1553 0128 AA000000 		.4byte	.LVL16
 1554 012c AC000000 		.4byte	.LVL17
 1555 0130 0100     		.2byte	0x1
 1556 0132 51       		.byte	0x51
 1557 0133 AC000000 		.4byte	.LVL17
 1558 0137 D4000000 		.4byte	.LFE4
 1559 013b 0400     		.2byte	0x4
 1560 013d F3       		.byte	0xf3
 1561 013e 01       		.uleb128 0x1
 1562 013f 51       		.byte	0x51
 1563 0140 9F       		.byte	0x9f
 1564 0141 00000000 		.4byte	0
 1565 0145 00000000 		.4byte	0
 1566              	.LLST6:
 1567 0149 18000000 		.4byte	.LVL8
 1568 014d 3C000000 		.4byte	.LVL13
 1569 0151 0500     		.2byte	0x5
 1570 0153 75       		.byte	0x75
 1571 0154 00       		.sleb128 0
 1572 0155 32       		.byte	0x32
 1573 0156 1A       		.byte	0x1a
 1574 0157 9F       		.byte	0x9f
 1575 0158 00000000 		.4byte	0
 1576 015c 00000000 		.4byte	0
 1577              	.LLST7:
 1578 0160 00000000 		.4byte	.LVL20
 1579 0164 06000000 		.4byte	.LVL21
 1580 0168 0100     		.2byte	0x1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 39


 1581 016a 50       		.byte	0x50
 1582 016b 06000000 		.4byte	.LVL21
 1583 016f 14000000 		.4byte	.LFE6
 1584 0173 0400     		.2byte	0x4
 1585 0175 F3       		.byte	0xf3
 1586 0176 01       		.uleb128 0x1
 1587 0177 50       		.byte	0x50
 1588 0178 9F       		.byte	0x9f
 1589 0179 00000000 		.4byte	0
 1590 017d 00000000 		.4byte	0
 1591              	.LLST8:
 1592 0181 00000000 		.4byte	.LVL22
 1593 0185 04000000 		.4byte	.LVL23
 1594 0189 0100     		.2byte	0x1
 1595 018b 50       		.byte	0x50
 1596 018c 04000000 		.4byte	.LVL23
 1597 0190 14000000 		.4byte	.LFE7
 1598 0194 0400     		.2byte	0x4
 1599 0196 F3       		.byte	0xf3
 1600 0197 01       		.uleb128 0x1
 1601 0198 50       		.byte	0x50
 1602 0199 9F       		.byte	0x9f
 1603 019a 00000000 		.4byte	0
 1604 019e 00000000 		.4byte	0
 1605              	.LLST9:
 1606 01a2 00000000 		.4byte	.LVL24
 1607 01a6 1C000000 		.4byte	.LVL25
 1608 01aa 0100     		.2byte	0x1
 1609 01ac 50       		.byte	0x50
 1610 01ad 1C000000 		.4byte	.LVL25
 1611 01b1 26000000 		.4byte	.LVL26
 1612 01b5 0400     		.2byte	0x4
 1613 01b7 F3       		.byte	0xf3
 1614 01b8 01       		.uleb128 0x1
 1615 01b9 50       		.byte	0x50
 1616 01ba 9F       		.byte	0x9f
 1617 01bb 26000000 		.4byte	.LVL26
 1618 01bf 32000000 		.4byte	.LVL27
 1619 01c3 0100     		.2byte	0x1
 1620 01c5 50       		.byte	0x50
 1621 01c6 32000000 		.4byte	.LVL27
 1622 01ca 3E000000 		.4byte	.LVL28
 1623 01ce 0400     		.2byte	0x4
 1624 01d0 F3       		.byte	0xf3
 1625 01d1 01       		.uleb128 0x1
 1626 01d2 50       		.byte	0x50
 1627 01d3 9F       		.byte	0x9f
 1628 01d4 3E000000 		.4byte	.LVL28
 1629 01d8 46000000 		.4byte	.LVL29
 1630 01dc 0100     		.2byte	0x1
 1631 01de 50       		.byte	0x50
 1632 01df 46000000 		.4byte	.LVL29
 1633 01e3 50000000 		.4byte	.LFE9
 1634 01e7 0400     		.2byte	0x4
 1635 01e9 F3       		.byte	0xf3
 1636 01ea 01       		.uleb128 0x1
 1637 01eb 50       		.byte	0x50
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 40


 1638 01ec 9F       		.byte	0x9f
 1639 01ed 00000000 		.4byte	0
 1640 01f1 00000000 		.4byte	0
 1641              	.LLST10:
 1642 01f5 00000000 		.4byte	.LVL30
 1643 01f9 06000000 		.4byte	.LVL31
 1644 01fd 0100     		.2byte	0x1
 1645 01ff 50       		.byte	0x50
 1646 0200 06000000 		.4byte	.LVL31
 1647 0204 10000000 		.4byte	.LFE11
 1648 0208 0400     		.2byte	0x4
 1649 020a F3       		.byte	0xf3
 1650 020b 01       		.uleb128 0x1
 1651 020c 50       		.byte	0x50
 1652 020d 9F       		.byte	0x9f
 1653 020e 00000000 		.4byte	0
 1654 0212 00000000 		.4byte	0
 1655              		.section	.debug_aranges,"",%progbits
 1656 0000 7C000000 		.4byte	0x7c
 1657 0004 0200     		.2byte	0x2
 1658 0006 00000000 		.4byte	.Ldebug_info0
 1659 000a 04       		.byte	0x4
 1660 000b 00       		.byte	0
 1661 000c 0000     		.2byte	0
 1662 000e 0000     		.2byte	0
 1663 0010 00000000 		.4byte	.LFB0
 1664 0014 18000000 		.4byte	.LFE0-.LFB0
 1665 0018 00000000 		.4byte	.LFB1
 1666 001c 18000000 		.4byte	.LFE1-.LFB1
 1667 0020 00000000 		.4byte	.LFB2
 1668 0024 74000000 		.4byte	.LFE2-.LFB2
 1669 0028 00000000 		.4byte	.LFB3
 1670 002c 18000000 		.4byte	.LFE3-.LFB3
 1671 0030 00000000 		.4byte	.LFB4
 1672 0034 D4000000 		.4byte	.LFE4-.LFB4
 1673 0038 00000000 		.4byte	.LFB5
 1674 003c 0C000000 		.4byte	.LFE5-.LFB5
 1675 0040 00000000 		.4byte	.LFB6
 1676 0044 14000000 		.4byte	.LFE6-.LFB6
 1677 0048 00000000 		.4byte	.LFB7
 1678 004c 14000000 		.4byte	.LFE7-.LFB7
 1679 0050 00000000 		.4byte	.LFB8
 1680 0054 10000000 		.4byte	.LFE8-.LFB8
 1681 0058 00000000 		.4byte	.LFB9
 1682 005c 50000000 		.4byte	.LFE9-.LFB9
 1683 0060 00000000 		.4byte	.LFB10
 1684 0064 10000000 		.4byte	.LFE10-.LFB10
 1685 0068 00000000 		.4byte	.LFB11
 1686 006c 10000000 		.4byte	.LFE11-.LFB11
 1687 0070 00000000 		.4byte	.LFB12
 1688 0074 10000000 		.4byte	.LFE12-.LFB12
 1689 0078 00000000 		.4byte	0
 1690 007c 00000000 		.4byte	0
 1691              		.section	.debug_ranges,"",%progbits
 1692              	.Ldebug_ranges0:
 1693 0000 02000000 		.4byte	.LBB11
 1694 0004 04000000 		.4byte	.LBE11
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 41


 1695 0008 06000000 		.4byte	.LBB19
 1696 000c 08000000 		.4byte	.LBE19
 1697 0010 0A000000 		.4byte	.LBB21
 1698 0014 0E000000 		.4byte	.LBE21
 1699 0018 00000000 		.4byte	0
 1700 001c 00000000 		.4byte	0
 1701 0020 04000000 		.4byte	.LBB15
 1702 0024 06000000 		.4byte	.LBE15
 1703 0028 08000000 		.4byte	.LBB20
 1704 002c 0A000000 		.4byte	.LBE20
 1705 0030 0E000000 		.4byte	.LBB22
 1706 0034 10000000 		.4byte	.LBE22
 1707 0038 00000000 		.4byte	0
 1708 003c 00000000 		.4byte	0
 1709 0040 00000000 		.4byte	.LBB23
 1710 0044 04000000 		.4byte	.LBE23
 1711 0048 08000000 		.4byte	.LBB28
 1712 004c 0A000000 		.4byte	.LBE28
 1713 0050 00000000 		.4byte	0
 1714 0054 00000000 		.4byte	0
 1715 0058 00000000 		.4byte	.LFB0
 1716 005c 18000000 		.4byte	.LFE0
 1717 0060 00000000 		.4byte	.LFB1
 1718 0064 18000000 		.4byte	.LFE1
 1719 0068 00000000 		.4byte	.LFB2
 1720 006c 74000000 		.4byte	.LFE2
 1721 0070 00000000 		.4byte	.LFB3
 1722 0074 18000000 		.4byte	.LFE3
 1723 0078 00000000 		.4byte	.LFB4
 1724 007c D4000000 		.4byte	.LFE4
 1725 0080 00000000 		.4byte	.LFB5
 1726 0084 0C000000 		.4byte	.LFE5
 1727 0088 00000000 		.4byte	.LFB6
 1728 008c 14000000 		.4byte	.LFE6
 1729 0090 00000000 		.4byte	.LFB7
 1730 0094 14000000 		.4byte	.LFE7
 1731 0098 00000000 		.4byte	.LFB8
 1732 009c 10000000 		.4byte	.LFE8
 1733 00a0 00000000 		.4byte	.LFB9
 1734 00a4 50000000 		.4byte	.LFE9
 1735 00a8 00000000 		.4byte	.LFB10
 1736 00ac 10000000 		.4byte	.LFE10
 1737 00b0 00000000 		.4byte	.LFB11
 1738 00b4 10000000 		.4byte	.LFE11
 1739 00b8 00000000 		.4byte	.LFB12
 1740 00bc 10000000 		.4byte	.LFE12
 1741 00c0 00000000 		.4byte	0
 1742 00c4 00000000 		.4byte	0
 1743              		.section	.debug_line,"",%progbits
 1744              	.Ldebug_line0:
 1745 0000 D3010000 		.section	.debug_str,"MS",%progbits,1
 1745      02005000 
 1745      00000201 
 1745      FB0E0D00 
 1745      01010101 
 1746              	.LASF15:
 1747 0000 72656731 		.ascii	"reg16\000"
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 42


 1747      3600
 1748              	.LASF20:
 1749 0006 4144435F 		.ascii	"ADC_SAR_2_theACLK_StopBlock\000"
 1749      5341525F 
 1749      325F7468 
 1749      6541434C 
 1749      4B5F5374 
 1750              	.LASF23:
 1751 0022 73746174 		.ascii	"state\000"
 1751      6500
 1752              	.LASF26:
 1753 0028 6F6C6444 		.ascii	"oldDivider\000"
 1753      69766964 
 1753      657200
 1754              	.LASF38:
 1755 0033 4144435F 		.ascii	"ADC_SAR_2_theACLK_GetPhaseRegister\000"
 1755      5341525F 
 1755      325F7468 
 1755      6541434C 
 1755      4B5F4765 
 1756              	.LASF40:
 1757 0056 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_2_theACLK.c\000"
 1757      6E657261 
 1757      7465645F 
 1757      536F7572 
 1757      63655C50 
 1758              	.LASF11:
 1759 0083 666C6F61 		.ascii	"float\000"
 1759      7400
 1760              	.LASF1:
 1761 0089 756E7369 		.ascii	"unsigned char\000"
 1761      676E6564 
 1761      20636861 
 1761      7200
 1762              	.LASF14:
 1763 0097 72656738 		.ascii	"reg8\000"
 1763      00
 1764              	.LASF31:
 1765 009c 4144435F 		.ascii	"ADC_SAR_2_theACLK_ClearModeRegister\000"
 1765      5341525F 
 1765      325F7468 
 1765      6541434C 
 1765      4B5F436C 
 1766              	.LASF5:
 1767 00c0 6C6F6E67 		.ascii	"long unsigned int\000"
 1767      20756E73 
 1767      69676E65 
 1767      6420696E 
 1767      7400
 1768              	.LASF3:
 1769 00d2 73686F72 		.ascii	"short unsigned int\000"
 1769      7420756E 
 1769      7369676E 
 1769      65642069 
 1769      6E7400
 1770              	.LASF41:
 1771 00e5 433A5C55 		.ascii	"C:\\Users\\Luke\\Desktop\\Laserschutzschaltung.cyds"
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 43


 1771      73657273 
 1771      5C4C756B 
 1771      655C4465 
 1771      736B746F 
 1772 0114 6E5C4C61 		.ascii	"n\\Laserschutzschaltung.cydsn\000"
 1772      73657273 
 1772      63687574 
 1772      7A736368 
 1772      616C7475 
 1773              	.LASF24:
 1774 0131 636C6B44 		.ascii	"clkDivider\000"
 1774      69766964 
 1774      657200
 1775              	.LASF21:
 1776 013c 4144435F 		.ascii	"ADC_SAR_2_theACLK_StandbyPower\000"
 1776      5341525F 
 1776      325F7468 
 1776      6541434C 
 1776      4B5F5374 
 1777              	.LASF12:
 1778 015b 646F7562 		.ascii	"double\000"
 1778      6C6500
 1779              	.LASF16:
 1780 0162 4144435F 		.ascii	"ADC_SAR_2_theACLK_GetDividerRegister\000"
 1780      5341525F 
 1780      325F7468 
 1780      6541434C 
 1780      4B5F4765 
 1781              	.LASF25:
 1782 0187 72657374 		.ascii	"restart\000"
 1782      61727400 
 1783              	.LASF18:
 1784 018f 4144435F 		.ascii	"ADC_SAR_2_theACLK_Start\000"
 1784      5341525F 
 1784      325F7468 
 1784      6541434C 
 1784      4B5F5374 
 1785              	.LASF37:
 1786 01a7 4144435F 		.ascii	"ADC_SAR_2_theACLK_GetModeRegister\000"
 1786      5341525F 
 1786      325F7468 
 1786      6541434C 
 1786      4B5F4765 
 1787              	.LASF10:
 1788 01c9 75696E74 		.ascii	"uint16\000"
 1788      313600
 1789              	.LASF29:
 1790 01d0 4144435F 		.ascii	"ADC_SAR_2_theACLK_SetModeRegister\000"
 1790      5341525F 
 1790      325F7468 
 1790      6541434C 
 1790      4B5F5365 
 1791              	.LASF8:
 1792 01f2 756E7369 		.ascii	"unsigned int\000"
 1792      676E6564 
 1792      20696E74 
 1792      00
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 44


 1793              	.LASF28:
 1794 01ff 63757272 		.ascii	"currSrc\000"
 1794      53726300 
 1795              	.LASF7:
 1796 0207 6C6F6E67 		.ascii	"long long unsigned int\000"
 1796      206C6F6E 
 1796      6720756E 
 1796      7369676E 
 1796      65642069 
 1797              	.LASF19:
 1798 021e 4144435F 		.ascii	"ADC_SAR_2_theACLK_Stop\000"
 1798      5341525F 
 1798      325F7468 
 1798      6541434C 
 1798      4B5F5374 
 1799              	.LASF32:
 1800 0235 4144435F 		.ascii	"ADC_SAR_2_theACLK_SetSourceRegister\000"
 1800      5341525F 
 1800      325F7468 
 1800      6541434C 
 1800      4B5F5365 
 1801              	.LASF30:
 1802 0259 6D6F6465 		.ascii	"modeBitMask\000"
 1802      4269744D 
 1802      61736B00 
 1803              	.LASF6:
 1804 0265 6C6F6E67 		.ascii	"long long int\000"
 1804      206C6F6E 
 1804      6720696E 
 1804      7400
 1805              	.LASF13:
 1806 0273 63686172 		.ascii	"char\000"
 1806      00
 1807              	.LASF34:
 1808 0278 63757272 		.ascii	"currDiv\000"
 1808      44697600 
 1809              	.LASF2:
 1810 0280 73686F72 		.ascii	"short int\000"
 1810      7420696E 
 1810      7400
 1811              	.LASF22:
 1812 028a 4144435F 		.ascii	"ADC_SAR_2_theACLK_SetDividerRegister\000"
 1812      5341525F 
 1812      325F7468 
 1812      6541434C 
 1812      4B5F5365 
 1813              	.LASF9:
 1814 02af 75696E74 		.ascii	"uint8\000"
 1814      3800
 1815              	.LASF39:
 1816 02b5 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1816      4320342E 
 1816      372E3320 
 1816      32303133 
 1816      30333132 
 1817 02e8 616E6368 		.ascii	"anch revision 196615]\000"
 1817      20726576 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccK4dBlI.s 			page 45


 1817      6973696F 
 1817      6E203139 
 1817      36363135 
 1818              	.LASF35:
 1819 02fe 4144435F 		.ascii	"ADC_SAR_2_theACLK_SetPhaseRegister\000"
 1819      5341525F 
 1819      325F7468 
 1819      6541434C 
 1819      4B5F5365 
 1820              	.LASF27:
 1821 0321 656E6162 		.ascii	"enabled\000"
 1821      6C656400 
 1822              	.LASF4:
 1823 0329 6C6F6E67 		.ascii	"long int\000"
 1823      20696E74 
 1823      00
 1824              	.LASF33:
 1825 0332 636C6B53 		.ascii	"clkSource\000"
 1825      6F757263 
 1825      6500
 1826              	.LASF36:
 1827 033c 636C6B50 		.ascii	"clkPhase\000"
 1827      68617365 
 1827      00
 1828              	.LASF0:
 1829 0345 7369676E 		.ascii	"signed char\000"
 1829      65642063 
 1829      68617200 
 1830              	.LASF17:
 1831 0351 4144435F 		.ascii	"ADC_SAR_2_theACLK_GetSourceRegister\000"
 1831      5341525F 
 1831      325F7468 
 1831      6541434C 
 1831      4B5F4765 
 1832              	.LASF42:
 1833 0375 6F6C6453 		.ascii	"oldSrc\000"
 1833      726300
 1834              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
