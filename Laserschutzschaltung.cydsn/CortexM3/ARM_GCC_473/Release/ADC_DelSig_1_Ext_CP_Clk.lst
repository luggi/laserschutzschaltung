ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_DelSig_1_Ext_CP_Clk.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_Start,"ax",%progbits
  19              		.align	1
  20              		.global	ADC_DelSig_1_Ext_CP_Clk_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_DelSig_1_Ext_CP_Clk_Start, %function
  24              	ADC_DelSig_1_Ext_CP_Clk_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_DelSig_1_Ext_CP_Clk.c"
   1:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * File Name: ADC_DelSig_1_Ext_CP_Clk.c
   3:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Version 2.10
   4:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
   5:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Description:
   6:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
   8:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Note:
   9:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  10:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  17:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #include "ADC_DelSig_1_Ext_CP_Clk.h"
  19:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  20:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  27:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  29:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  30:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_Start
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 2


  32:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  34:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
  35:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  38:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
  39:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
  40:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  41:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
  42:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
  43:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  44:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_Start(void) 
  46:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     ADC_DelSig_1_Ext_CP_Clk_CLKEN |= ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  35 0004 42F00200 		orr	r0, r2, #2
  36 0008 1870     		strb	r0, [r3, #0]
  49:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 	ADC_DelSig_1_Ext_CP_Clk_CLKSTBY |= ADC_DelSig_1_Ext_CP_Clk_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  39 000c 41F00202 		orr	r2, r1, #2
  40 0010 1A74     		strb	r2, [r3, #16]
  41 0012 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0014 A2430040 		.word	1073759138
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	ADC_DelSig_1_Ext_CP_Clk_Start, .-ADC_DelSig_1_Ext_CP_Clk_Start
  49              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_Stop,"ax",%progbits
  50              		.align	1
  51              		.global	ADC_DelSig_1_Ext_CP_Clk_Stop
  52              		.thumb
  53              		.thumb_func
  54              		.type	ADC_DelSig_1_Ext_CP_Clk_Stop, %function
  55              	ADC_DelSig_1_Ext_CP_Clk_Stop:
  56              	.LFB1:
  50:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
  51:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  52:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  53:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_Stop
  55:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  57:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
  58:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Stops the clock and returns immediately. This API does not require the
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 3


  59:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  64:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
  65:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
  66:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  67:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
  68:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
  69:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  70:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_Stop(void) 
  72:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
  57              		.loc 1 72 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     ADC_DelSig_1_Ext_CP_Clk_CLKEN &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK);
  62              		.loc 1 74 0
  63 0000 044B     		ldr	r3, .L5
  64 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  65 0004 02F0FD00 		and	r0, r2, #253
  66 0008 1870     		strb	r0, [r3, #0]
  75:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 	ADC_DelSig_1_Ext_CP_Clk_CLKSTBY &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKSTBY_MASK);
  67              		.loc 1 75 0
  68 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  69 000c 01F0FD02 		and	r2, r1, #253
  70 0010 1A74     		strb	r2, [r3, #16]
  71 0012 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 0014 A2430040 		.word	1073759138
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	ADC_DelSig_1_Ext_CP_Clk_Stop, .-ADC_DelSig_1_Ext_CP_Clk_Stop
  79              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_StopBlock,"ax",%progbits
  80              		.align	1
  81              		.global	ADC_DelSig_1_Ext_CP_Clk_StopBlock
  82              		.thumb
  83              		.thumb_func
  84              		.type	ADC_DelSig_1_Ext_CP_Clk_StopBlock, %function
  85              	ADC_DelSig_1_Ext_CP_Clk_StopBlock:
  86              	.LFB2:
  76:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
  77:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  78:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  79:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  81:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
  82:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_StopBlock
  84:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 4


  86:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
  87:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  93:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
  94:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
  95:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  96:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
  97:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
  98:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
  99:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_StopBlock(void) 
 101:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
  87              		.loc 1 101 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 102:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if ((ADC_DelSig_1_Ext_CP_Clk_CLKEN & ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK) != 0u)
  96              		.loc 1 102 0
  97 0002 154B     		ldr	r3, .L15
  98 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
  99 0006 00F00201 		and	r1, r0, #2
 100 000a CAB2     		uxtb	r2, r1
 101 000c 1AB3     		cbz	r2, .L7
 102              	.LBB10:
 103:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 104:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 107:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 109:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if defined(ADC_DelSig_1_Ext_CP_Clk__CFG3)
 111:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_AMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 112:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #else
 114:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 103              		.loc 1 114 0
 104 000e 1349     		ldr	r1, .L15+4
 107:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_LD = 0u;
 105              		.loc 1 107 0
 106 0010 134C     		ldr	r4, .L15+8
 107 0012 0023     		movs	r3, #0
 115:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* ADC_DelSig_1_Ext_CP_Clk__CFG3 */
 117:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 118:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 108              		.loc 1 119 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 5


 109 0014 134A     		ldr	r2, .L15+12
 114:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 110              		.loc 1 114 0
 111 0016 0220     		movs	r0, #2
 107:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_LD = 0u;
 112              		.loc 1 107 0
 113 0018 2370     		strb	r3, [r4, #0]
 114:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 114              		.loc 1 114 0
 115 001a 0870     		strb	r0, [r1, #0]
 115:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_AMASK = 0x00u;
 116              		.loc 1 115 0
 117 001c 0B71     		strb	r3, [r1, #4]
 118              		.loc 1 119 0
 119 001e 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 120 0020 03F07F00 		and	r0, r3, #127
 121 0024 1070     		strb	r0, [r2, #0]
 120:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 121:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         oldDivider = CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 122              		.loc 1 121 0
 123 0026 7C32     		adds	r2, r2, #124
 124 0028 1188     		ldrh	r1, [r2, #0]
 122:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 125              		.loc 1 122 0
 126 002a 0F4A     		ldr	r2, .L15+16
 121:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         oldDivider = CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 127              		.loc 1 121 0
 128 002c 8BB2     		uxth	r3, r1
 129              	.LVL0:
 123:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 130              		.loc 1 123 0
 131 002e 0720     		movs	r0, #7
 122:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 132              		.loc 1 122 0
 133 0030 1380     		strh	r3, [r2, #0]	@ movhi
 134              		.loc 1 123 0
 135 0032 2070     		strb	r0, [r4, #0]
 136              	.L9:
 124:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 125:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 137              		.loc 1 126 0 discriminator 1
 138 0034 0A4A     		ldr	r2, .L15+8
 139 0036 1478     		ldrb	r4, [r2, #0]	@ zero_extendqisi2
 140 0038 14F00100 		ands	r0, r4, #1
 141 003c FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 129:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_CLKEN &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK);
 142              		.loc 1 130 0
 143 003e 0649     		ldr	r1, .L15
 144              	.LVL1:
 145 0040 0C78     		ldrb	r4, [r1, #0]	@ zero_extendqisi2
 146 0042 04F0FD04 		and	r4, r4, #253
 147 0046 0C70     		strb	r4, [r1, #0]
 131:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_CLKSTBY &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKSTBY_MASK);
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 6


 148              		.loc 1 131 0
 149 0048 0C7C     		ldrb	r4, [r1, #16]	@ zero_extendqisi2
 150 004a 04F0FD04 		and	r4, r4, #253
 151 004e 0C74     		strb	r4, [r1, #16]
 132:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 133:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CLK_DIST_LD = 0x00u;
 152              		.loc 1 135 0
 153 0050 1070     		strb	r0, [r2, #0]
 136:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, oldDivider);
 154              		.loc 1 136 0
 155 0052 A2F88330 		strh	r3, [r2, #131]	@ movhi
 156              	.LVL2:
 157              	.L7:
 158 0056 10BD     		pop	{r4, pc}
 159              	.L16:
 160              		.align	2
 161              	.L15:
 162 0058 A2430040 		.word	1073759138
 163 005c 10400040 		.word	1073758224
 164 0060 01400040 		.word	1073758209
 165 0064 08400040 		.word	1073758216
 166 0068 02400040 		.word	1073758210
 167              	.LBE10:
 168              		.cfi_endproc
 169              	.LFE2:
 170              		.size	ADC_DelSig_1_Ext_CP_Clk_StopBlock, .-ADC_DelSig_1_Ext_CP_Clk_StopBlock
 171              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_StandbyPower,"ax",%progbits
 172              		.align	1
 173              		.global	ADC_DelSig_1_Ext_CP_Clk_StandbyPower
 174              		.thumb
 175              		.thumb_func
 176              		.type	ADC_DelSig_1_Ext_CP_Clk_StandbyPower, %function
 177              	ADC_DelSig_1_Ext_CP_Clk_StandbyPower:
 178              	.LFB3:
 137:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 139:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 140:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 142:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 143:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_StandbyPower
 145:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 147:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 148:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 150:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 151:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 153:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 154:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 155:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 156:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_StandbyPower(uint8 state) 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 7


 158:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 179              		.loc 1 158 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL3:
 185 0000 044B     		ldr	r3, .L21
 159:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if(state == 0u)
 160:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 161:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_CLKSTBY &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKSTBY_MASK);
 186              		.loc 1 161 0
 187 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 159:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if(state == 0u)
 188              		.loc 1 159 0
 189 0004 10B9     		cbnz	r0, .L18
 190              		.loc 1 161 0
 191 0006 02F0FD00 		and	r0, r2, #253
 192              	.LVL4:
 193 000a 01E0     		b	.L20
 194              	.LVL5:
 195              	.L18:
 162:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 163:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     else
 164:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 165:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_CLKSTBY |= ADC_DelSig_1_Ext_CP_Clk_CLKSTBY_MASK;
 196              		.loc 1 165 0
 197 000c 42F00200 		orr	r0, r2, #2
 198              	.LVL6:
 199              	.L20:
 200 0010 1870     		strb	r0, [r3, #0]
 201 0012 7047     		bx	lr
 202              	.L22:
 203              		.align	2
 204              	.L21:
 205 0014 B2430040 		.word	1073759154
 206              		.cfi_endproc
 207              	.LFE3:
 208              		.size	ADC_DelSig_1_Ext_CP_Clk_StandbyPower, .-ADC_DelSig_1_Ext_CP_Clk_StandbyPower
 209              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister,"ax",%progbits
 210              		.align	1
 211              		.global	ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister
 212              		.thumb
 213              		.thumb_func
 214              		.type	ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister, %function
 215              	ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister:
 216              	.LFB4:
 166:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 167:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 168:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 169:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 170:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister
 172:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 174:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 175:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 8


 176:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 180:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 181:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   cycle.
 188:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 189:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 190:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 191:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 192:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                                 
 195:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 217              		.loc 1 195 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL7:
 222 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 20
 225              		.cfi_offset 4, -20
 226              		.cfi_offset 5, -16
 227              		.cfi_offset 6, -12
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230              	.LBB11:
 231              	.LBB12:
 196:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 198:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     uint8 currSrc = ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister();
 199:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     uint16 oldDivider = ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister();
 200:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 201:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 203:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         enabled = ADC_DelSig_1_Ext_CP_Clk_CLKEN & ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 205:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         {
 207:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             {
 210:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 ADC_DelSig_1_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             }
 216:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             else
 217:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             {
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 9


 218:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 ADC_DelSig_1_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             }
 223:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         }
 224:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         else
 225:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         {
 226:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 			
 227:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             {
 229:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 231:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if defined(ADC_DelSig_1_Ext_CP_Clk__CFG3)
 233:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #else
 236:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* ADC_DelSig_1_Ext_CP_Clk__CFG3 */
 239:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 242:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 if (((ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 {
 245:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 249:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 253:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     ADC_DelSig_1_Ext_CP_Clk_CLKEN &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 255:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 }
 260:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             }
 261:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 262:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             if ((ADC_DelSig_1_Ext_CP_Clk_CLKEN & ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             {
 265:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 268:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             }
 271:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             else
 272:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             {
 273:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, clkDivider);
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 10


 275:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 				ADC_DelSig_1_Ext_CP_Clk_CLKEN |= enabled;
 276:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             }
 277:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         }
 278:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 279:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 280:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 281:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 282:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister
 284:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 286:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 287:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 289:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 290:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 291:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 292:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 293:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 296:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** uint16 ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 300:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 301:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 302:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 303:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_SetModeRegister
 305:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 307:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 308:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 313:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 314:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 value.
 319:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 328:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 329:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 330:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 331:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 11


 332:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_SetModeRegister(uint8 modeBitMask) 
 333:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 334:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     ADC_DelSig_1_Ext_CP_Clk_MOD_SRC |= modeBitMask & (uint8)ADC_DelSig_1_Ext_CP_Clk_MODE_MASK;
 335:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 336:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 337:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 338:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister
 340:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 342:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 343:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 348:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 349:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 value.
 354:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 363:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 364:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 365:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 366:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 369:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     ADC_DelSig_1_Ext_CP_Clk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_DelSig_1_Ext_CP
 370:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 371:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 372:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 373:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_GetModeRegister
 375:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 377:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 378:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 380:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 381:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 382:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 383:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 384:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 387:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** uint8 ADC_DelSig_1_Ext_CP_Clk_GetModeRegister(void) 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 12


 389:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 390:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(ADC_DelSig_1_Ext_CP_Clk_MODE_MASK);
 391:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 392:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 393:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 394:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister
 396:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 398:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 399:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 402:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 403:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 415:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 416:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 417:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 418:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** void ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 421:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     uint16 currDiv = ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister();
 422:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     uint8 oldSrc = ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister();
 423:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 424:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 427:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC =
 431:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(~ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK)) | clk
 432:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 433:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 436:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC =
 439:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(~ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK)) | clk
 440:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 442:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     else
 443:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     {
 444:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC =
 445:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(~ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK)) | clk
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 13


 446:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     }
 447:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 448:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 449:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 
 450:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Function Name: ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister
 452:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 454:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 457:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Parameters:
 458:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  None
 459:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 460:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** * Returns:
 461:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *
 463:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** uint8 ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 466:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK;
 232              		.loc 1 466 0
 233 0002 2D4B     		ldr	r3, .L45
 234              	.LBE12:
 235              	.LBE11:
 236              	.LBB15:
 237              	.LBB16:
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 238              		.loc 1 299 0
 239 0004 2D4C     		ldr	r4, .L45+4
 240              	.LBE16:
 241              	.LBE15:
 242              	.LBB19:
 243              	.LBB13:
 244              		.loc 1 466 0
 245 0006 1E78     		ldrb	r6, [r3, #0]	@ zero_extendqisi2
 246              	.LBE13:
 247              	.LBE19:
 248              	.LBB20:
 249              	.LBB17:
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 250              		.loc 1 299 0
 251 0008 2288     		ldrh	r2, [r4, #0]
 252              	.LBE17:
 253              	.LBE20:
 254              	.LBB21:
 255              	.LBB14:
 256              		.loc 1 466 0
 257 000a 06F00706 		and	r6, r6, #7
 258              	.LBE14:
 259              	.LBE21:
 260              	.LBB22:
 261              	.LBB18:
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 262              		.loc 1 299 0
 263 000e 92B2     		uxth	r2, r2
 264              	.LBE18:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 14


 265              	.LBE22:
 201:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if (clkDivider != oldDivider)
 266              		.loc 1 201 0
 267 0010 9042     		cmp	r0, r2
 268 0012 50D0     		beq	.L23
 203:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         enabled = ADC_DelSig_1_Ext_CP_Clk_CLKEN & ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 269              		.loc 1 203 0
 270 0014 2A4D     		ldr	r5, .L45+8
 271 0016 2D78     		ldrb	r5, [r5, #0]	@ zero_extendqisi2
 272              	.LVL8:
 205:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 273              		.loc 1 205 0
 274 0018 66B9     		cbnz	r6, .L26
 205:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 275              		.loc 1 205 0 is_stmt 0 discriminator 1
 276 001a 32B1     		cbz	r2, .L27
 277 001c 50B9     		cbnz	r0, .L26
 278              	.L28:
 220:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 ADC_DelSig_1_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 279              		.loc 1 220 0 is_stmt 1
 280 001e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 281              	.LVL9:
 282 0020 41F04002 		orr	r2, r1, #64
 283 0024 1A70     		strb	r2, [r3, #0]
 221:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, clkDivider);
 284              		.loc 1 221 0
 285 0026 2080     		strh	r0, [r4, #0]	@ movhi
 286 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 287              	.LVL10:
 288              	.L27:
 213:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, clkDivider);
 289              		.loc 1 213 0
 290 002a 2080     		strh	r0, [r4, #0]	@ movhi
 214:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 ADC_DelSig_1_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 291              		.loc 1 214 0
 292 002c 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 293              	.LVL11:
 294 002e 00F0BF02 		and	r2, r0, #191
 295 0032 3FE0     		b	.L44
 296              	.LVL12:
 297              	.L26:
 203:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         enabled = ADC_DelSig_1_Ext_CP_Clk_CLKEN & ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 298              		.loc 1 203 0
 299 0034 05F00203 		and	r3, r5, #2
 227:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             if (enabled != 0u)
 300              		.loc 1 227 0
 301 0038 03F0FF05 		and	r5, r3, #255
 302              	.LVL13:
 303 003c 0BB3     		cbz	r3, .L30
 236:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 304              		.loc 1 236 0
 305 003e 214E     		ldr	r6, .L45+12
 229:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 306              		.loc 1 229 0
 307 0040 214B     		ldr	r3, .L45+16
 308 0042 0024     		movs	r4, #0
 236:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 15


 309              		.loc 1 236 0
 310 0044 0227     		movs	r7, #2
 229:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 311              		.loc 1 229 0
 312 0046 1C70     		strb	r4, [r3, #0]
 236:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK;
 313              		.loc 1 236 0
 314 0048 3770     		strb	r7, [r6, #0]
 237:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 315              		.loc 1 237 0
 316 004a 3471     		strb	r4, [r6, #4]
 240:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 317              		.loc 1 240 0
 318 004c 1F4C     		ldr	r4, .L45+20
 319 004e 2678     		ldrb	r6, [r4, #0]	@ zero_extendqisi2
 320 0050 06F07F06 		and	r6, r6, #127
 321 0054 2670     		strb	r6, [r4, #0]
 243:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 if (((ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 322              		.loc 1 243 0
 323 0056 7E34     		adds	r4, r4, #126
 324 0058 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 325 005a 04F00804 		and	r4, r4, #8
 326 005e E4B2     		uxtb	r4, r4
 327 0060 04B1     		cbz	r4, .L31
 243:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 if (((ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 328              		.loc 1 243 0 is_stmt 0 discriminator 1
 329 0062 70B9     		cbnz	r0, .L30
 330              	.L31:
 246:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 331              		.loc 1 246 0 is_stmt 1
 332 0064 1A4E     		ldr	r6, .L45+24
 333 0066 3280     		strh	r2, [r6, #0]	@ movhi
 247:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 334              		.loc 1 247 0
 335 0068 0722     		movs	r2, #7
 336 006a 1A70     		strb	r2, [r3, #0]
 337              	.L33:
 250:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 338              		.loc 1 250 0 discriminator 1
 339 006c 164B     		ldr	r3, .L45+16
 340 006e 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 341 0070 14F00104 		ands	r4, r4, #1
 342 0074 FAD1     		bne	.L33
 253:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     ADC_DelSig_1_Ext_CP_Clk_CLKEN &= (uint8)(~ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK);
 343              		.loc 1 253 0
 344 0076 124A     		ldr	r2, .L45+8
 345 0078 1678     		ldrb	r6, [r2, #0]	@ zero_extendqisi2
 346 007a 06F0FD06 		and	r6, r6, #253
 347 007e 1670     		strb	r6, [r2, #0]
 257:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                     CLK_DIST_LD = 0x00u;
 348              		.loc 1 257 0
 349 0080 1C70     		strb	r4, [r3, #0]
 350              	.L30:
 263:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             if ((ADC_DelSig_1_Ext_CP_Clk_CLKEN & ADC_DelSig_1_Ext_CP_Clk_CLKEN_MASK) != 0u)
 351              		.loc 1 263 0
 352 0082 0F4B     		ldr	r3, .L45+8
 353 0084 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 16


 354 0086 02F00202 		and	r2, r2, #2
 355 008a D2B2     		uxtb	r2, r2
 356 008c 6AB1     		cbz	r2, .L34
 266:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 357              		.loc 1 266 0
 358 008e A3F56873 		sub	r3, r3, #928
 268:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 359              		.loc 1 268 0
 360 0092 0029     		cmp	r1, #0
 361 0094 0CBF     		ite	eq
 362 0096 0121     		moveq	r1, #1
 363 0098 0321     		movne	r1, #3
 364              	.LVL14:
 266:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 365              		.loc 1 266 0
 366 009a 1880     		strh	r0, [r3, #0]	@ movhi
 268:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 367              		.loc 1 268 0
 368 009c 03F8011C 		strb	r1, [r3, #-1]
 369              	.LVL15:
 370              	.L36:
 269:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 371              		.loc 1 269 0 discriminator 1
 372 00a0 0948     		ldr	r0, .L45+16
 373 00a2 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 374 00a4 D307     		lsls	r3, r2, #31
 375 00a6 FBD4     		bmi	.L36
 376 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 377              	.LVL16:
 378              	.L34:
 274:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR, clkDivider);
 379              		.loc 1 274 0
 380 00aa 0449     		ldr	r1, .L45+4
 381              	.LVL17:
 382 00ac 0880     		strh	r0, [r1, #0]	@ movhi
 275:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** 				ADC_DelSig_1_Ext_CP_Clk_CLKEN |= enabled;
 383              		.loc 1 275 0
 384 00ae 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 385              	.LVL18:
 386 00b0 45EA0002 		orr	r2, r5, r0
 387              	.LVL19:
 388              	.L44:
 389 00b4 1A70     		strb	r2, [r3, #0]
 390              	.L23:
 391 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 392              	.L46:
 393              		.align	2
 394              	.L45:
 395 00b8 86400040 		.word	1073758342
 396 00bc 84400040 		.word	1073758340
 397 00c0 A2430040 		.word	1073759138
 398 00c4 10400040 		.word	1073758224
 399 00c8 01400040 		.word	1073758209
 400 00cc 08400040 		.word	1073758216
 401 00d0 02400040 		.word	1073758210
 402              		.cfi_endproc
 403              	.LFE4:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 17


 404              		.size	ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister, .-ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister
 405              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister,"ax",%progbits
 406              		.align	1
 407              		.global	ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister
 408              		.thumb
 409              		.thumb_func
 410              		.type	ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister, %function
 411              	ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister:
 412              	.LFB5:
 298:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 413              		.loc 1 298 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 418              		.loc 1 299 0
 419 0000 014B     		ldr	r3, .L48
 420 0002 1888     		ldrh	r0, [r3, #0]
 300:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 421              		.loc 1 300 0
 422 0004 80B2     		uxth	r0, r0
 423 0006 7047     		bx	lr
 424              	.L49:
 425              		.align	2
 426              	.L48:
 427 0008 84400040 		.word	1073758340
 428              		.cfi_endproc
 429              	.LFE5:
 430              		.size	ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister, .-ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister
 431              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_SetModeRegister,"ax",%progbits
 432              		.align	1
 433              		.global	ADC_DelSig_1_Ext_CP_Clk_SetModeRegister
 434              		.thumb
 435              		.thumb_func
 436              		.type	ADC_DelSig_1_Ext_CP_Clk_SetModeRegister, %function
 437              	ADC_DelSig_1_Ext_CP_Clk_SetModeRegister:
 438              	.LFB6:
 333:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 439              		.loc 1 333 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444              	.LVL20:
 334:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     ADC_DelSig_1_Ext_CP_Clk_MOD_SRC |= modeBitMask & (uint8)ADC_DelSig_1_Ext_CP_Clk_MODE_MASK;
 445              		.loc 1 334 0
 446 0000 034B     		ldr	r3, .L51
 447 0002 00F0F800 		and	r0, r0, #248
 448              	.LVL21:
 449 0006 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 450 0008 40EA0201 		orr	r1, r0, r2
 451 000c 1970     		strb	r1, [r3, #0]
 452 000e 7047     		bx	lr
 453              	.L52:
 454              		.align	2
 455              	.L51:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 18


 456 0010 86400040 		.word	1073758342
 457              		.cfi_endproc
 458              	.LFE6:
 459              		.size	ADC_DelSig_1_Ext_CP_Clk_SetModeRegister, .-ADC_DelSig_1_Ext_CP_Clk_SetModeRegister
 460              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister,"ax",%progbits
 461              		.align	1
 462              		.global	ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister
 463              		.thumb
 464              		.thumb_func
 465              		.type	ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister, %function
 466              	ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister:
 467              	.LFB7:
 368:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 468              		.loc 1 368 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472              		@ link register save eliminated.
 473              	.LVL22:
 369:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     ADC_DelSig_1_Ext_CP_Clk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_DelSig_1_Ext_CP
 474              		.loc 1 369 0
 475 0000 034B     		ldr	r3, .L54
 476 0002 C043     		mvns	r0, r0
 477              	.LVL23:
 478 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 479 0006 40F00701 		orr	r1, r0, #7
 480 000a 0A40     		ands	r2, r2, r1
 481 000c 1A70     		strb	r2, [r3, #0]
 482 000e 7047     		bx	lr
 483              	.L55:
 484              		.align	2
 485              	.L54:
 486 0010 86400040 		.word	1073758342
 487              		.cfi_endproc
 488              	.LFE7:
 489              		.size	ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister, .-ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister
 490              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_GetModeRegister,"ax",%progbits
 491              		.align	1
 492              		.global	ADC_DelSig_1_Ext_CP_Clk_GetModeRegister
 493              		.thumb
 494              		.thumb_func
 495              		.type	ADC_DelSig_1_Ext_CP_Clk_GetModeRegister, %function
 496              	ADC_DelSig_1_Ext_CP_Clk_GetModeRegister:
 497              	.LFB8:
 389:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 498              		.loc 1 389 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(ADC_DelSig_1_Ext_CP_Clk_MODE_MASK);
 503              		.loc 1 390 0
 504 0000 024B     		ldr	r3, .L57
 505 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 506              		.loc 1 391 0
 507 0004 00F0F800 		and	r0, r0, #248
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 19


 508 0008 7047     		bx	lr
 509              	.L58:
 510 000a 00BF     		.align	2
 511              	.L57:
 512 000c 86400040 		.word	1073758342
 513              		.cfi_endproc
 514              	.LFE8:
 515              		.size	ADC_DelSig_1_Ext_CP_Clk_GetModeRegister, .-ADC_DelSig_1_Ext_CP_Clk_GetModeRegister
 516              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister,"ax",%progbits
 517              		.align	1
 518              		.global	ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister
 519              		.thumb
 520              		.thumb_func
 521              		.type	ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister, %function
 522              	ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister:
 523              	.LFB9:
 420:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 524              		.loc 1 420 0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529              	.LVL24:
 530              	.LBB23:
 531              	.LBB24:
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 532              		.loc 1 299 0
 533 0000 124B     		ldr	r3, .L67
 534 0002 1988     		ldrh	r1, [r3, #0]
 535              	.LBE24:
 536              	.LBE23:
 537              	.LBB26:
 538              	.LBB27:
 539              		.loc 1 466 0
 540 0004 0233     		adds	r3, r3, #2
 541 0006 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 542              	.LBE27:
 543              	.LBE26:
 544              	.LBB28:
 545              	.LBB25:
 299:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_DelSig_1_Ext_CP_Clk_DIV_PTR);
 546              		.loc 1 299 0
 547 0008 89B2     		uxth	r1, r1
 548              	.LBE25:
 549              	.LBE28:
 424:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 550              		.loc 1 424 0
 551 000a 12F0070F 		tst	r2, #7
 552 000e 1A46     		mov	r2, r3
 553 0010 09D0     		beq	.L60
 424:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 554              		.loc 1 424 0 is_stmt 0 discriminator 1
 555 0012 A0B9     		cbnz	r0, .L61
 425:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 556              		.loc 1 425 0 is_stmt 1
 557 0014 99B9     		cbnz	r1, .L61
 429:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 20


 558              		.loc 1 429 0
 559 0016 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 560 0018 42F04000 		orr	r0, r2, #64
 561              	.LVL25:
 562 001c 1870     		strb	r0, [r3, #0]
 431:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(~ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK)) | clk
 563              		.loc 1 431 0
 564 001e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC =
 565              		.loc 1 430 0
 566 0020 01F0F801 		and	r1, r1, #248
 567 0024 09E0     		b	.L66
 568              	.LVL26:
 569              	.L60:
 433:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 570              		.loc 1 433 0 discriminator 1
 571 0026 50B1     		cbz	r0, .L61
 434:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 572              		.loc 1 434 0
 573 0028 49B9     		cbnz	r1, .L61
 439:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(~ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK)) | clk
 574              		.loc 1 439 0
 575 002a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC =
 576              		.loc 1 438 0
 577 002c 21F00702 		bic	r2, r1, #7
 578 0030 1043     		orrs	r0, r0, r2
 579              	.LVL27:
 580 0032 1870     		strb	r0, [r3, #0]
 440:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 581              		.loc 1 440 0
 582 0034 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 583 0036 00F0BF01 		and	r1, r0, #191
 584              	.L66:
 585 003a 1970     		strb	r1, [r3, #0]
 586 003c 7047     		bx	lr
 587              	.LVL28:
 588              	.L61:
 445:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****             (ADC_DelSig_1_Ext_CP_Clk_MOD_SRC & (uint8)(~ADC_DelSig_1_Ext_CP_Clk_SRC_SEL_MSK)) | clk
 589              		.loc 1 445 0
 590 003e 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c ****         ADC_DelSig_1_Ext_CP_Clk_MOD_SRC =
 591              		.loc 1 444 0
 592 0040 23F00701 		bic	r1, r3, #7
 593 0044 0843     		orrs	r0, r0, r1
 594              	.LVL29:
 595 0046 1070     		strb	r0, [r2, #0]
 596 0048 7047     		bx	lr
 597              	.L68:
 598 004a 00BF     		.align	2
 599              	.L67:
 600 004c 84400040 		.word	1073758340
 601              		.cfi_endproc
 602              	.LFE9:
 603              		.size	ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister, .-ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister
 604              		.section	.text.ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister,"ax",%progbits
 605              		.align	1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 21


 606              		.global	ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister
 607              		.thumb
 608              		.thumb_func
 609              		.type	ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister, %function
 610              	ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister:
 611              	.LFB10:
 465:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** {
 612              		.loc 1 465 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617              		.loc 1 466 0
 618 0000 024B     		ldr	r3, .L70
 619 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/ADC_DelSig_1_Ext_CP_Clk.c **** }
 620              		.loc 1 467 0
 621 0004 00F00700 		and	r0, r0, #7
 622 0008 7047     		bx	lr
 623              	.L71:
 624 000a 00BF     		.align	2
 625              	.L70:
 626 000c 86400040 		.word	1073758342
 627              		.cfi_endproc
 628              	.LFE10:
 629              		.size	ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister, .-ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister
 630              		.text
 631              	.Letext0:
 632              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 633              		.section	.debug_info,"",%progbits
 634              	.Ldebug_info0:
 635 0000 D3020000 		.4byte	0x2d3
 636 0004 0200     		.2byte	0x2
 637 0006 00000000 		.4byte	.Ldebug_abbrev0
 638 000a 04       		.byte	0x4
 639 000b 01       		.uleb128 0x1
 640 000c 8E020000 		.4byte	.LASF35
 641 0010 01       		.byte	0x1
 642 0011 1E000000 		.4byte	.LASF36
 643 0015 E1000000 		.4byte	.LASF37
 644 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 645 001d 00000000 		.4byte	0
 646 0021 00000000 		.4byte	0
 647 0025 00000000 		.4byte	.Ldebug_line0
 648 0029 02       		.uleb128 0x2
 649 002a 01       		.byte	0x1
 650 002b 06       		.byte	0x6
 651 002c 3F030000 		.4byte	.LASF0
 652 0030 02       		.uleb128 0x2
 653 0031 01       		.byte	0x1
 654 0032 08       		.byte	0x8
 655 0033 A9000000 		.4byte	.LASF1
 656 0037 02       		.uleb128 0x2
 657 0038 02       		.byte	0x2
 658 0039 05       		.byte	0x5
 659 003a 7E020000 		.4byte	.LASF2
 660 003e 02       		.uleb128 0x2
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 22


 661 003f 02       		.byte	0x2
 662 0040 07       		.byte	0x7
 663 0041 CE000000 		.4byte	.LASF3
 664 0045 02       		.uleb128 0x2
 665 0046 04       		.byte	0x4
 666 0047 05       		.byte	0x5
 667 0048 DF020000 		.4byte	.LASF4
 668 004c 02       		.uleb128 0x2
 669 004d 04       		.byte	0x4
 670 004e 07       		.byte	0x7
 671 004f BC000000 		.4byte	.LASF5
 672 0053 02       		.uleb128 0x2
 673 0054 08       		.byte	0x8
 674 0055 05       		.byte	0x5
 675 0056 1D020000 		.4byte	.LASF6
 676 005a 02       		.uleb128 0x2
 677 005b 08       		.byte	0x8
 678 005c 07       		.byte	0x7
 679 005d AB010000 		.4byte	.LASF7
 680 0061 03       		.uleb128 0x3
 681 0062 04       		.byte	0x4
 682 0063 05       		.byte	0x5
 683 0064 696E7400 		.ascii	"int\000"
 684 0068 02       		.uleb128 0x2
 685 0069 04       		.byte	0x4
 686 006a 07       		.byte	0x7
 687 006b 96010000 		.4byte	.LASF8
 688 006f 04       		.uleb128 0x4
 689 0070 88020000 		.4byte	.LASF9
 690 0074 02       		.byte	0x2
 691 0075 5B       		.byte	0x5b
 692 0076 30000000 		.4byte	0x30
 693 007a 04       		.uleb128 0x4
 694 007b 64010000 		.4byte	.LASF10
 695 007f 02       		.byte	0x2
 696 0080 5C       		.byte	0x5c
 697 0081 3E000000 		.4byte	0x3e
 698 0085 02       		.uleb128 0x2
 699 0086 04       		.byte	0x4
 700 0087 04       		.byte	0x4
 701 0088 A3000000 		.4byte	.LASF11
 702 008c 02       		.uleb128 0x2
 703 008d 08       		.byte	0x8
 704 008e 04       		.byte	0x4
 705 008f 55010000 		.4byte	.LASF12
 706 0093 02       		.uleb128 0x2
 707 0094 01       		.byte	0x1
 708 0095 08       		.byte	0x8
 709 0096 33020000 		.4byte	.LASF13
 710 009a 04       		.uleb128 0x4
 711 009b B7000000 		.4byte	.LASF14
 712 009f 02       		.byte	0x2
 713 00a0 F0       		.byte	0xf0
 714 00a1 A5000000 		.4byte	0xa5
 715 00a5 05       		.uleb128 0x5
 716 00a6 6F000000 		.4byte	0x6f
 717 00aa 04       		.uleb128 0x4
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 23


 718 00ab 00000000 		.4byte	.LASF15
 719 00af 02       		.byte	0x2
 720 00b0 F1       		.byte	0xf1
 721 00b1 B5000000 		.4byte	0xb5
 722 00b5 05       		.uleb128 0x5
 723 00b6 7A000000 		.4byte	0x7a
 724 00ba 06       		.uleb128 0x6
 725 00bb 01       		.byte	0x1
 726 00bc 6B010000 		.4byte	.LASF16
 727 00c0 01       		.byte	0x1
 728 00c1 2901     		.2byte	0x129
 729 00c3 01       		.byte	0x1
 730 00c4 7A000000 		.4byte	0x7a
 731 00c8 01       		.byte	0x1
 732 00c9 06       		.uleb128 0x6
 733 00ca 01       		.byte	0x1
 734 00cb 4B030000 		.4byte	.LASF17
 735 00cf 01       		.byte	0x1
 736 00d0 D001     		.2byte	0x1d0
 737 00d2 01       		.byte	0x1
 738 00d3 6F000000 		.4byte	0x6f
 739 00d7 01       		.byte	0x1
 740 00d8 07       		.uleb128 0x7
 741 00d9 01       		.byte	0x1
 742 00da 60020000 		.4byte	.LASF18
 743 00de 01       		.byte	0x1
 744 00df 2D       		.byte	0x2d
 745 00e0 01       		.byte	0x1
 746 00e1 00000000 		.4byte	.LFB0
 747 00e5 18000000 		.4byte	.LFE0
 748 00e9 02       		.byte	0x2
 749 00ea 7D       		.byte	0x7d
 750 00eb 00       		.sleb128 0
 751 00ec 01       		.byte	0x1
 752 00ed 07       		.uleb128 0x7
 753 00ee 01       		.byte	0x1
 754 00ef 2D010000 		.4byte	.LASF19
 755 00f3 01       		.byte	0x1
 756 00f4 47       		.byte	0x47
 757 00f5 01       		.byte	0x1
 758 00f6 00000000 		.4byte	.LFB1
 759 00fa 18000000 		.4byte	.LFE1
 760 00fe 02       		.byte	0x2
 761 00ff 7D       		.byte	0x7d
 762 0100 00       		.sleb128 0
 763 0101 01       		.byte	0x1
 764 0102 08       		.uleb128 0x8
 765 0103 01       		.byte	0x1
 766 0104 F2020000 		.4byte	.LASF20
 767 0108 01       		.byte	0x1
 768 0109 64       		.byte	0x64
 769 010a 01       		.byte	0x1
 770 010b 00000000 		.4byte	.LFB2
 771 010f 6C000000 		.4byte	.LFE2
 772 0113 00000000 		.4byte	.LLST0
 773 0117 01       		.byte	0x1
 774 0118 36010000 		.4byte	0x136
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 24


 775 011c 09       		.uleb128 0x9
 776 011d 0E000000 		.4byte	.LBB10
 777 0121 6C000000 		.4byte	.LBE10
 778 0125 0A       		.uleb128 0xa
 779 0126 13000000 		.4byte	.LASF26
 780 012a 01       		.byte	0x1
 781 012b 69       		.byte	0x69
 782 012c 7A000000 		.4byte	0x7a
 783 0130 20000000 		.4byte	.LLST1
 784 0134 00       		.byte	0
 785 0135 00       		.byte	0
 786 0136 0B       		.uleb128 0xb
 787 0137 01       		.byte	0x1
 788 0138 EC010000 		.4byte	.LASF21
 789 013c 01       		.byte	0x1
 790 013d 9D       		.byte	0x9d
 791 013e 01       		.byte	0x1
 792 013f 00000000 		.4byte	.LFB3
 793 0143 18000000 		.4byte	.LFE3
 794 0147 02       		.byte	0x2
 795 0148 7D       		.byte	0x7d
 796 0149 00       		.sleb128 0
 797 014a 01       		.byte	0x1
 798 014b 5F010000 		.4byte	0x15f
 799 014f 0C       		.uleb128 0xc
 800 0150 0D000000 		.4byte	.LASF23
 801 0154 01       		.byte	0x1
 802 0155 9D       		.byte	0x9d
 803 0156 6F000000 		.4byte	0x6f
 804 015a 3E000000 		.4byte	.LLST2
 805 015e 00       		.byte	0
 806 015f 08       		.uleb128 0x8
 807 0160 01       		.byte	0x1
 808 0161 14030000 		.4byte	.LASF22
 809 0165 01       		.byte	0x1
 810 0166 C1       		.byte	0xc1
 811 0167 01       		.byte	0x1
 812 0168 00000000 		.4byte	.LFB4
 813 016c D4000000 		.4byte	.LFE4
 814 0170 78000000 		.4byte	.LLST3
 815 0174 01       		.byte	0x1
 816 0175 DF010000 		.4byte	0x1df
 817 0179 0C       		.uleb128 0xc
 818 017a 4A010000 		.4byte	.LASF24
 819 017e 01       		.byte	0x1
 820 017f C1       		.byte	0xc1
 821 0180 7A000000 		.4byte	0x7a
 822 0184 98000000 		.4byte	.LLST4
 823 0188 0C       		.uleb128 0xc
 824 0189 5C010000 		.4byte	.LASF25
 825 018d 01       		.byte	0x1
 826 018e C1       		.byte	0xc1
 827 018f 6F000000 		.4byte	0x6f
 828 0193 F6000000 		.4byte	.LLST5
 829 0197 0A       		.uleb128 0xa
 830 0198 D7020000 		.4byte	.LASF27
 831 019c 01       		.byte	0x1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 25


 832 019d C4       		.byte	0xc4
 833 019e 6F000000 		.4byte	0x6f
 834 01a2 49010000 		.4byte	.LLST6
 835 01a6 0D       		.uleb128 0xd
 836 01a7 A3010000 		.4byte	.LASF28
 837 01ab 01       		.byte	0x1
 838 01ac C6       		.byte	0xc6
 839 01ad 6F000000 		.4byte	0x6f
 840 01b1 01       		.byte	0x1
 841 01b2 56       		.byte	0x56
 842 01b3 0D       		.uleb128 0xd
 843 01b4 13000000 		.4byte	.LASF26
 844 01b8 01       		.byte	0x1
 845 01b9 C7       		.byte	0xc7
 846 01ba 7A000000 		.4byte	0x7a
 847 01be 01       		.byte	0x1
 848 01bf 52       		.byte	0x52
 849 01c0 0E       		.uleb128 0xe
 850 01c1 C9000000 		.4byte	0xc9
 851 01c5 02000000 		.4byte	.LBB11
 852 01c9 00000000 		.4byte	.Ldebug_ranges0+0
 853 01cd 01       		.byte	0x1
 854 01ce C6       		.byte	0xc6
 855 01cf 0E       		.uleb128 0xe
 856 01d0 BA000000 		.4byte	0xba
 857 01d4 04000000 		.4byte	.LBB15
 858 01d8 20000000 		.4byte	.Ldebug_ranges0+0x20
 859 01dc 01       		.byte	0x1
 860 01dd C7       		.byte	0xc7
 861 01de 00       		.byte	0
 862 01df 0F       		.uleb128 0xf
 863 01e0 BA000000 		.4byte	0xba
 864 01e4 00000000 		.4byte	.LFB5
 865 01e8 0C000000 		.4byte	.LFE5
 866 01ec 02       		.byte	0x2
 867 01ed 7D       		.byte	0x7d
 868 01ee 00       		.sleb128 0
 869 01ef 01       		.byte	0x1
 870 01f0 10       		.uleb128 0x10
 871 01f1 01       		.byte	0x1
 872 01f2 38020000 		.4byte	.LASF29
 873 01f6 01       		.byte	0x1
 874 01f7 4C01     		.2byte	0x14c
 875 01f9 01       		.byte	0x1
 876 01fa 00000000 		.4byte	.LFB6
 877 01fe 14000000 		.4byte	.LFE6
 878 0202 02       		.byte	0x2
 879 0203 7D       		.byte	0x7d
 880 0204 00       		.sleb128 0
 881 0205 01       		.byte	0x1
 882 0206 1B020000 		.4byte	0x21b
 883 020a 11       		.uleb128 0x11
 884 020b 11020000 		.4byte	.LASF30
 885 020f 01       		.byte	0x1
 886 0210 4C01     		.2byte	0x14c
 887 0212 6F000000 		.4byte	0x6f
 888 0216 60010000 		.4byte	.LLST7
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 26


 889 021a 00       		.byte	0
 890 021b 10       		.uleb128 0x10
 891 021c 01       		.byte	0x1
 892 021d C2010000 		.4byte	.LASF31
 893 0221 01       		.byte	0x1
 894 0222 6F01     		.2byte	0x16f
 895 0224 01       		.byte	0x1
 896 0225 00000000 		.4byte	.LFB7
 897 0229 14000000 		.4byte	.LFE7
 898 022d 02       		.byte	0x2
 899 022e 7D       		.byte	0x7d
 900 022f 00       		.sleb128 0
 901 0230 01       		.byte	0x1
 902 0231 46020000 		.4byte	0x246
 903 0235 11       		.uleb128 0x11
 904 0236 11020000 		.4byte	.LASF30
 905 023a 01       		.byte	0x1
 906 023b 6F01     		.2byte	0x16f
 907 023d 6F000000 		.4byte	0x6f
 908 0241 81010000 		.4byte	.LLST8
 909 0245 00       		.byte	0
 910 0246 12       		.uleb128 0x12
 911 0247 01       		.byte	0x1
 912 0248 7B000000 		.4byte	.LASF38
 913 024c 01       		.byte	0x1
 914 024d 8401     		.2byte	0x184
 915 024f 01       		.byte	0x1
 916 0250 6F000000 		.4byte	0x6f
 917 0254 00000000 		.4byte	.LFB8
 918 0258 10000000 		.4byte	.LFE8
 919 025c 02       		.byte	0x2
 920 025d 7D       		.byte	0x7d
 921 025e 00       		.sleb128 0
 922 025f 01       		.byte	0x1
 923 0260 10       		.uleb128 0x10
 924 0261 01       		.byte	0x1
 925 0262 51000000 		.4byte	.LASF32
 926 0266 01       		.byte	0x1
 927 0267 A301     		.2byte	0x1a3
 928 0269 01       		.byte	0x1
 929 026a 00000000 		.4byte	.LFB9
 930 026e 50000000 		.4byte	.LFE9
 931 0272 02       		.byte	0x2
 932 0273 7D       		.byte	0x7d
 933 0274 00       		.sleb128 0
 934 0275 01       		.byte	0x1
 935 0276 C5020000 		.4byte	0x2c5
 936 027a 11       		.uleb128 0x11
 937 027b E8020000 		.4byte	.LASF33
 938 027f 01       		.byte	0x1
 939 0280 A301     		.2byte	0x1a3
 940 0282 6F000000 		.4byte	0x6f
 941 0286 A2010000 		.4byte	.LLST9
 942 028a 13       		.uleb128 0x13
 943 028b 2B020000 		.4byte	.LASF34
 944 028f 01       		.byte	0x1
 945 0290 A501     		.2byte	0x1a5
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 27


 946 0292 7A000000 		.4byte	0x7a
 947 0296 01       		.byte	0x1
 948 0297 51       		.byte	0x51
 949 0298 14       		.uleb128 0x14
 950 0299 06000000 		.4byte	.LASF39
 951 029d 01       		.byte	0x1
 952 029e A601     		.2byte	0x1a6
 953 02a0 6F000000 		.4byte	0x6f
 954 02a4 15       		.uleb128 0x15
 955 02a5 BA000000 		.4byte	0xba
 956 02a9 00000000 		.4byte	.LBB23
 957 02ad 40000000 		.4byte	.Ldebug_ranges0+0x40
 958 02b1 01       		.byte	0x1
 959 02b2 A501     		.2byte	0x1a5
 960 02b4 16       		.uleb128 0x16
 961 02b5 C9000000 		.4byte	0xc9
 962 02b9 04000000 		.4byte	.LBB26
 963 02bd 08000000 		.4byte	.LBE26
 964 02c1 01       		.byte	0x1
 965 02c2 A601     		.2byte	0x1a6
 966 02c4 00       		.byte	0
 967 02c5 0F       		.uleb128 0xf
 968 02c6 C9000000 		.4byte	0xc9
 969 02ca 00000000 		.4byte	.LFB10
 970 02ce 10000000 		.4byte	.LFE10
 971 02d2 02       		.byte	0x2
 972 02d3 7D       		.byte	0x7d
 973 02d4 00       		.sleb128 0
 974 02d5 01       		.byte	0x1
 975 02d6 00       		.byte	0
 976              		.section	.debug_abbrev,"",%progbits
 977              	.Ldebug_abbrev0:
 978 0000 01       		.uleb128 0x1
 979 0001 11       		.uleb128 0x11
 980 0002 01       		.byte	0x1
 981 0003 25       		.uleb128 0x25
 982 0004 0E       		.uleb128 0xe
 983 0005 13       		.uleb128 0x13
 984 0006 0B       		.uleb128 0xb
 985 0007 03       		.uleb128 0x3
 986 0008 0E       		.uleb128 0xe
 987 0009 1B       		.uleb128 0x1b
 988 000a 0E       		.uleb128 0xe
 989 000b 55       		.uleb128 0x55
 990 000c 06       		.uleb128 0x6
 991 000d 11       		.uleb128 0x11
 992 000e 01       		.uleb128 0x1
 993 000f 52       		.uleb128 0x52
 994 0010 01       		.uleb128 0x1
 995 0011 10       		.uleb128 0x10
 996 0012 06       		.uleb128 0x6
 997 0013 00       		.byte	0
 998 0014 00       		.byte	0
 999 0015 02       		.uleb128 0x2
 1000 0016 24       		.uleb128 0x24
 1001 0017 00       		.byte	0
 1002 0018 0B       		.uleb128 0xb
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 28


 1003 0019 0B       		.uleb128 0xb
 1004 001a 3E       		.uleb128 0x3e
 1005 001b 0B       		.uleb128 0xb
 1006 001c 03       		.uleb128 0x3
 1007 001d 0E       		.uleb128 0xe
 1008 001e 00       		.byte	0
 1009 001f 00       		.byte	0
 1010 0020 03       		.uleb128 0x3
 1011 0021 24       		.uleb128 0x24
 1012 0022 00       		.byte	0
 1013 0023 0B       		.uleb128 0xb
 1014 0024 0B       		.uleb128 0xb
 1015 0025 3E       		.uleb128 0x3e
 1016 0026 0B       		.uleb128 0xb
 1017 0027 03       		.uleb128 0x3
 1018 0028 08       		.uleb128 0x8
 1019 0029 00       		.byte	0
 1020 002a 00       		.byte	0
 1021 002b 04       		.uleb128 0x4
 1022 002c 16       		.uleb128 0x16
 1023 002d 00       		.byte	0
 1024 002e 03       		.uleb128 0x3
 1025 002f 0E       		.uleb128 0xe
 1026 0030 3A       		.uleb128 0x3a
 1027 0031 0B       		.uleb128 0xb
 1028 0032 3B       		.uleb128 0x3b
 1029 0033 0B       		.uleb128 0xb
 1030 0034 49       		.uleb128 0x49
 1031 0035 13       		.uleb128 0x13
 1032 0036 00       		.byte	0
 1033 0037 00       		.byte	0
 1034 0038 05       		.uleb128 0x5
 1035 0039 35       		.uleb128 0x35
 1036 003a 00       		.byte	0
 1037 003b 49       		.uleb128 0x49
 1038 003c 13       		.uleb128 0x13
 1039 003d 00       		.byte	0
 1040 003e 00       		.byte	0
 1041 003f 06       		.uleb128 0x6
 1042 0040 2E       		.uleb128 0x2e
 1043 0041 00       		.byte	0
 1044 0042 3F       		.uleb128 0x3f
 1045 0043 0C       		.uleb128 0xc
 1046 0044 03       		.uleb128 0x3
 1047 0045 0E       		.uleb128 0xe
 1048 0046 3A       		.uleb128 0x3a
 1049 0047 0B       		.uleb128 0xb
 1050 0048 3B       		.uleb128 0x3b
 1051 0049 05       		.uleb128 0x5
 1052 004a 27       		.uleb128 0x27
 1053 004b 0C       		.uleb128 0xc
 1054 004c 49       		.uleb128 0x49
 1055 004d 13       		.uleb128 0x13
 1056 004e 20       		.uleb128 0x20
 1057 004f 0B       		.uleb128 0xb
 1058 0050 00       		.byte	0
 1059 0051 00       		.byte	0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 29


 1060 0052 07       		.uleb128 0x7
 1061 0053 2E       		.uleb128 0x2e
 1062 0054 00       		.byte	0
 1063 0055 3F       		.uleb128 0x3f
 1064 0056 0C       		.uleb128 0xc
 1065 0057 03       		.uleb128 0x3
 1066 0058 0E       		.uleb128 0xe
 1067 0059 3A       		.uleb128 0x3a
 1068 005a 0B       		.uleb128 0xb
 1069 005b 3B       		.uleb128 0x3b
 1070 005c 0B       		.uleb128 0xb
 1071 005d 27       		.uleb128 0x27
 1072 005e 0C       		.uleb128 0xc
 1073 005f 11       		.uleb128 0x11
 1074 0060 01       		.uleb128 0x1
 1075 0061 12       		.uleb128 0x12
 1076 0062 01       		.uleb128 0x1
 1077 0063 40       		.uleb128 0x40
 1078 0064 0A       		.uleb128 0xa
 1079 0065 9742     		.uleb128 0x2117
 1080 0067 0C       		.uleb128 0xc
 1081 0068 00       		.byte	0
 1082 0069 00       		.byte	0
 1083 006a 08       		.uleb128 0x8
 1084 006b 2E       		.uleb128 0x2e
 1085 006c 01       		.byte	0x1
 1086 006d 3F       		.uleb128 0x3f
 1087 006e 0C       		.uleb128 0xc
 1088 006f 03       		.uleb128 0x3
 1089 0070 0E       		.uleb128 0xe
 1090 0071 3A       		.uleb128 0x3a
 1091 0072 0B       		.uleb128 0xb
 1092 0073 3B       		.uleb128 0x3b
 1093 0074 0B       		.uleb128 0xb
 1094 0075 27       		.uleb128 0x27
 1095 0076 0C       		.uleb128 0xc
 1096 0077 11       		.uleb128 0x11
 1097 0078 01       		.uleb128 0x1
 1098 0079 12       		.uleb128 0x12
 1099 007a 01       		.uleb128 0x1
 1100 007b 40       		.uleb128 0x40
 1101 007c 06       		.uleb128 0x6
 1102 007d 9742     		.uleb128 0x2117
 1103 007f 0C       		.uleb128 0xc
 1104 0080 01       		.uleb128 0x1
 1105 0081 13       		.uleb128 0x13
 1106 0082 00       		.byte	0
 1107 0083 00       		.byte	0
 1108 0084 09       		.uleb128 0x9
 1109 0085 0B       		.uleb128 0xb
 1110 0086 01       		.byte	0x1
 1111 0087 11       		.uleb128 0x11
 1112 0088 01       		.uleb128 0x1
 1113 0089 12       		.uleb128 0x12
 1114 008a 01       		.uleb128 0x1
 1115 008b 00       		.byte	0
 1116 008c 00       		.byte	0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 30


 1117 008d 0A       		.uleb128 0xa
 1118 008e 34       		.uleb128 0x34
 1119 008f 00       		.byte	0
 1120 0090 03       		.uleb128 0x3
 1121 0091 0E       		.uleb128 0xe
 1122 0092 3A       		.uleb128 0x3a
 1123 0093 0B       		.uleb128 0xb
 1124 0094 3B       		.uleb128 0x3b
 1125 0095 0B       		.uleb128 0xb
 1126 0096 49       		.uleb128 0x49
 1127 0097 13       		.uleb128 0x13
 1128 0098 02       		.uleb128 0x2
 1129 0099 06       		.uleb128 0x6
 1130 009a 00       		.byte	0
 1131 009b 00       		.byte	0
 1132 009c 0B       		.uleb128 0xb
 1133 009d 2E       		.uleb128 0x2e
 1134 009e 01       		.byte	0x1
 1135 009f 3F       		.uleb128 0x3f
 1136 00a0 0C       		.uleb128 0xc
 1137 00a1 03       		.uleb128 0x3
 1138 00a2 0E       		.uleb128 0xe
 1139 00a3 3A       		.uleb128 0x3a
 1140 00a4 0B       		.uleb128 0xb
 1141 00a5 3B       		.uleb128 0x3b
 1142 00a6 0B       		.uleb128 0xb
 1143 00a7 27       		.uleb128 0x27
 1144 00a8 0C       		.uleb128 0xc
 1145 00a9 11       		.uleb128 0x11
 1146 00aa 01       		.uleb128 0x1
 1147 00ab 12       		.uleb128 0x12
 1148 00ac 01       		.uleb128 0x1
 1149 00ad 40       		.uleb128 0x40
 1150 00ae 0A       		.uleb128 0xa
 1151 00af 9742     		.uleb128 0x2117
 1152 00b1 0C       		.uleb128 0xc
 1153 00b2 01       		.uleb128 0x1
 1154 00b3 13       		.uleb128 0x13
 1155 00b4 00       		.byte	0
 1156 00b5 00       		.byte	0
 1157 00b6 0C       		.uleb128 0xc
 1158 00b7 05       		.uleb128 0x5
 1159 00b8 00       		.byte	0
 1160 00b9 03       		.uleb128 0x3
 1161 00ba 0E       		.uleb128 0xe
 1162 00bb 3A       		.uleb128 0x3a
 1163 00bc 0B       		.uleb128 0xb
 1164 00bd 3B       		.uleb128 0x3b
 1165 00be 0B       		.uleb128 0xb
 1166 00bf 49       		.uleb128 0x49
 1167 00c0 13       		.uleb128 0x13
 1168 00c1 02       		.uleb128 0x2
 1169 00c2 06       		.uleb128 0x6
 1170 00c3 00       		.byte	0
 1171 00c4 00       		.byte	0
 1172 00c5 0D       		.uleb128 0xd
 1173 00c6 34       		.uleb128 0x34
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 31


 1174 00c7 00       		.byte	0
 1175 00c8 03       		.uleb128 0x3
 1176 00c9 0E       		.uleb128 0xe
 1177 00ca 3A       		.uleb128 0x3a
 1178 00cb 0B       		.uleb128 0xb
 1179 00cc 3B       		.uleb128 0x3b
 1180 00cd 0B       		.uleb128 0xb
 1181 00ce 49       		.uleb128 0x49
 1182 00cf 13       		.uleb128 0x13
 1183 00d0 02       		.uleb128 0x2
 1184 00d1 0A       		.uleb128 0xa
 1185 00d2 00       		.byte	0
 1186 00d3 00       		.byte	0
 1187 00d4 0E       		.uleb128 0xe
 1188 00d5 1D       		.uleb128 0x1d
 1189 00d6 00       		.byte	0
 1190 00d7 31       		.uleb128 0x31
 1191 00d8 13       		.uleb128 0x13
 1192 00d9 52       		.uleb128 0x52
 1193 00da 01       		.uleb128 0x1
 1194 00db 55       		.uleb128 0x55
 1195 00dc 06       		.uleb128 0x6
 1196 00dd 58       		.uleb128 0x58
 1197 00de 0B       		.uleb128 0xb
 1198 00df 59       		.uleb128 0x59
 1199 00e0 0B       		.uleb128 0xb
 1200 00e1 00       		.byte	0
 1201 00e2 00       		.byte	0
 1202 00e3 0F       		.uleb128 0xf
 1203 00e4 2E       		.uleb128 0x2e
 1204 00e5 00       		.byte	0
 1205 00e6 31       		.uleb128 0x31
 1206 00e7 13       		.uleb128 0x13
 1207 00e8 11       		.uleb128 0x11
 1208 00e9 01       		.uleb128 0x1
 1209 00ea 12       		.uleb128 0x12
 1210 00eb 01       		.uleb128 0x1
 1211 00ec 40       		.uleb128 0x40
 1212 00ed 0A       		.uleb128 0xa
 1213 00ee 9742     		.uleb128 0x2117
 1214 00f0 0C       		.uleb128 0xc
 1215 00f1 00       		.byte	0
 1216 00f2 00       		.byte	0
 1217 00f3 10       		.uleb128 0x10
 1218 00f4 2E       		.uleb128 0x2e
 1219 00f5 01       		.byte	0x1
 1220 00f6 3F       		.uleb128 0x3f
 1221 00f7 0C       		.uleb128 0xc
 1222 00f8 03       		.uleb128 0x3
 1223 00f9 0E       		.uleb128 0xe
 1224 00fa 3A       		.uleb128 0x3a
 1225 00fb 0B       		.uleb128 0xb
 1226 00fc 3B       		.uleb128 0x3b
 1227 00fd 05       		.uleb128 0x5
 1228 00fe 27       		.uleb128 0x27
 1229 00ff 0C       		.uleb128 0xc
 1230 0100 11       		.uleb128 0x11
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 32


 1231 0101 01       		.uleb128 0x1
 1232 0102 12       		.uleb128 0x12
 1233 0103 01       		.uleb128 0x1
 1234 0104 40       		.uleb128 0x40
 1235 0105 0A       		.uleb128 0xa
 1236 0106 9742     		.uleb128 0x2117
 1237 0108 0C       		.uleb128 0xc
 1238 0109 01       		.uleb128 0x1
 1239 010a 13       		.uleb128 0x13
 1240 010b 00       		.byte	0
 1241 010c 00       		.byte	0
 1242 010d 11       		.uleb128 0x11
 1243 010e 05       		.uleb128 0x5
 1244 010f 00       		.byte	0
 1245 0110 03       		.uleb128 0x3
 1246 0111 0E       		.uleb128 0xe
 1247 0112 3A       		.uleb128 0x3a
 1248 0113 0B       		.uleb128 0xb
 1249 0114 3B       		.uleb128 0x3b
 1250 0115 05       		.uleb128 0x5
 1251 0116 49       		.uleb128 0x49
 1252 0117 13       		.uleb128 0x13
 1253 0118 02       		.uleb128 0x2
 1254 0119 06       		.uleb128 0x6
 1255 011a 00       		.byte	0
 1256 011b 00       		.byte	0
 1257 011c 12       		.uleb128 0x12
 1258 011d 2E       		.uleb128 0x2e
 1259 011e 00       		.byte	0
 1260 011f 3F       		.uleb128 0x3f
 1261 0120 0C       		.uleb128 0xc
 1262 0121 03       		.uleb128 0x3
 1263 0122 0E       		.uleb128 0xe
 1264 0123 3A       		.uleb128 0x3a
 1265 0124 0B       		.uleb128 0xb
 1266 0125 3B       		.uleb128 0x3b
 1267 0126 05       		.uleb128 0x5
 1268 0127 27       		.uleb128 0x27
 1269 0128 0C       		.uleb128 0xc
 1270 0129 49       		.uleb128 0x49
 1271 012a 13       		.uleb128 0x13
 1272 012b 11       		.uleb128 0x11
 1273 012c 01       		.uleb128 0x1
 1274 012d 12       		.uleb128 0x12
 1275 012e 01       		.uleb128 0x1
 1276 012f 40       		.uleb128 0x40
 1277 0130 0A       		.uleb128 0xa
 1278 0131 9742     		.uleb128 0x2117
 1279 0133 0C       		.uleb128 0xc
 1280 0134 00       		.byte	0
 1281 0135 00       		.byte	0
 1282 0136 13       		.uleb128 0x13
 1283 0137 34       		.uleb128 0x34
 1284 0138 00       		.byte	0
 1285 0139 03       		.uleb128 0x3
 1286 013a 0E       		.uleb128 0xe
 1287 013b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 33


 1288 013c 0B       		.uleb128 0xb
 1289 013d 3B       		.uleb128 0x3b
 1290 013e 05       		.uleb128 0x5
 1291 013f 49       		.uleb128 0x49
 1292 0140 13       		.uleb128 0x13
 1293 0141 02       		.uleb128 0x2
 1294 0142 0A       		.uleb128 0xa
 1295 0143 00       		.byte	0
 1296 0144 00       		.byte	0
 1297 0145 14       		.uleb128 0x14
 1298 0146 34       		.uleb128 0x34
 1299 0147 00       		.byte	0
 1300 0148 03       		.uleb128 0x3
 1301 0149 0E       		.uleb128 0xe
 1302 014a 3A       		.uleb128 0x3a
 1303 014b 0B       		.uleb128 0xb
 1304 014c 3B       		.uleb128 0x3b
 1305 014d 05       		.uleb128 0x5
 1306 014e 49       		.uleb128 0x49
 1307 014f 13       		.uleb128 0x13
 1308 0150 00       		.byte	0
 1309 0151 00       		.byte	0
 1310 0152 15       		.uleb128 0x15
 1311 0153 1D       		.uleb128 0x1d
 1312 0154 00       		.byte	0
 1313 0155 31       		.uleb128 0x31
 1314 0156 13       		.uleb128 0x13
 1315 0157 52       		.uleb128 0x52
 1316 0158 01       		.uleb128 0x1
 1317 0159 55       		.uleb128 0x55
 1318 015a 06       		.uleb128 0x6
 1319 015b 58       		.uleb128 0x58
 1320 015c 0B       		.uleb128 0xb
 1321 015d 59       		.uleb128 0x59
 1322 015e 05       		.uleb128 0x5
 1323 015f 00       		.byte	0
 1324 0160 00       		.byte	0
 1325 0161 16       		.uleb128 0x16
 1326 0162 1D       		.uleb128 0x1d
 1327 0163 00       		.byte	0
 1328 0164 31       		.uleb128 0x31
 1329 0165 13       		.uleb128 0x13
 1330 0166 11       		.uleb128 0x11
 1331 0167 01       		.uleb128 0x1
 1332 0168 12       		.uleb128 0x12
 1333 0169 01       		.uleb128 0x1
 1334 016a 58       		.uleb128 0x58
 1335 016b 0B       		.uleb128 0xb
 1336 016c 59       		.uleb128 0x59
 1337 016d 05       		.uleb128 0x5
 1338 016e 00       		.byte	0
 1339 016f 00       		.byte	0
 1340 0170 00       		.byte	0
 1341              		.section	.debug_loc,"",%progbits
 1342              	.Ldebug_loc0:
 1343              	.LLST0:
 1344 0000 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 34


 1345 0004 02000000 		.4byte	.LCFI0
 1346 0008 0200     		.2byte	0x2
 1347 000a 7D       		.byte	0x7d
 1348 000b 00       		.sleb128 0
 1349 000c 02000000 		.4byte	.LCFI0
 1350 0010 6C000000 		.4byte	.LFE2
 1351 0014 0200     		.2byte	0x2
 1352 0016 7D       		.byte	0x7d
 1353 0017 08       		.sleb128 8
 1354 0018 00000000 		.4byte	0
 1355 001c 00000000 		.4byte	0
 1356              	.LLST1:
 1357 0020 2E000000 		.4byte	.LVL0
 1358 0024 40000000 		.4byte	.LVL1
 1359 0028 0100     		.2byte	0x1
 1360 002a 51       		.byte	0x51
 1361 002b 40000000 		.4byte	.LVL1
 1362 002f 56000000 		.4byte	.LVL2
 1363 0033 0100     		.2byte	0x1
 1364 0035 53       		.byte	0x53
 1365 0036 00000000 		.4byte	0
 1366 003a 00000000 		.4byte	0
 1367              	.LLST2:
 1368 003e 00000000 		.4byte	.LVL3
 1369 0042 0A000000 		.4byte	.LVL4
 1370 0046 0100     		.2byte	0x1
 1371 0048 50       		.byte	0x50
 1372 0049 0A000000 		.4byte	.LVL4
 1373 004d 0C000000 		.4byte	.LVL5
 1374 0051 0400     		.2byte	0x4
 1375 0053 F3       		.byte	0xf3
 1376 0054 01       		.uleb128 0x1
 1377 0055 50       		.byte	0x50
 1378 0056 9F       		.byte	0x9f
 1379 0057 0C000000 		.4byte	.LVL5
 1380 005b 10000000 		.4byte	.LVL6
 1381 005f 0100     		.2byte	0x1
 1382 0061 50       		.byte	0x50
 1383 0062 10000000 		.4byte	.LVL6
 1384 0066 18000000 		.4byte	.LFE3
 1385 006a 0400     		.2byte	0x4
 1386 006c F3       		.byte	0xf3
 1387 006d 01       		.uleb128 0x1
 1388 006e 50       		.byte	0x50
 1389 006f 9F       		.byte	0x9f
 1390 0070 00000000 		.4byte	0
 1391 0074 00000000 		.4byte	0
 1392              	.LLST3:
 1393 0078 00000000 		.4byte	.LFB4
 1394 007c 02000000 		.4byte	.LCFI1
 1395 0080 0200     		.2byte	0x2
 1396 0082 7D       		.byte	0x7d
 1397 0083 00       		.sleb128 0
 1398 0084 02000000 		.4byte	.LCFI1
 1399 0088 D4000000 		.4byte	.LFE4
 1400 008c 0200     		.2byte	0x2
 1401 008e 7D       		.byte	0x7d
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 35


 1402 008f 14       		.sleb128 20
 1403 0090 00000000 		.4byte	0
 1404 0094 00000000 		.4byte	0
 1405              	.LLST4:
 1406 0098 00000000 		.4byte	.LVL7
 1407 009c 2E000000 		.4byte	.LVL11
 1408 00a0 0100     		.2byte	0x1
 1409 00a2 50       		.byte	0x50
 1410 00a3 2E000000 		.4byte	.LVL11
 1411 00a7 34000000 		.4byte	.LVL12
 1412 00ab 0200     		.2byte	0x2
 1413 00ad 74       		.byte	0x74
 1414 00ae 00       		.sleb128 0
 1415 00af 34000000 		.4byte	.LVL12
 1416 00b3 A0000000 		.4byte	.LVL15
 1417 00b7 0100     		.2byte	0x1
 1418 00b9 50       		.byte	0x50
 1419 00ba A0000000 		.4byte	.LVL15
 1420 00be AA000000 		.4byte	.LVL16
 1421 00c2 0500     		.2byte	0x5
 1422 00c4 0C       		.byte	0xc
 1423 00c5 02400040 		.4byte	0x40004002
 1424 00c9 AA000000 		.4byte	.LVL16
 1425 00cd B0000000 		.4byte	.LVL18
 1426 00d1 0100     		.2byte	0x1
 1427 00d3 50       		.byte	0x50
 1428 00d4 B0000000 		.4byte	.LVL18
 1429 00d8 B4000000 		.4byte	.LVL19
 1430 00dc 0200     		.2byte	0x2
 1431 00de 71       		.byte	0x71
 1432 00df 00       		.sleb128 0
 1433 00e0 B4000000 		.4byte	.LVL19
 1434 00e4 D4000000 		.4byte	.LFE4
 1435 00e8 0400     		.2byte	0x4
 1436 00ea F3       		.byte	0xf3
 1437 00eb 01       		.uleb128 0x1
 1438 00ec 50       		.byte	0x50
 1439 00ed 9F       		.byte	0x9f
 1440 00ee 00000000 		.4byte	0
 1441 00f2 00000000 		.4byte	0
 1442              	.LLST5:
 1443 00f6 00000000 		.4byte	.LVL7
 1444 00fa 20000000 		.4byte	.LVL9
 1445 00fe 0100     		.2byte	0x1
 1446 0100 51       		.byte	0x51
 1447 0101 20000000 		.4byte	.LVL9
 1448 0105 2A000000 		.4byte	.LVL10
 1449 0109 0400     		.2byte	0x4
 1450 010b F3       		.byte	0xf3
 1451 010c 01       		.uleb128 0x1
 1452 010d 51       		.byte	0x51
 1453 010e 9F       		.byte	0x9f
 1454 010f 2A000000 		.4byte	.LVL10
 1455 0113 9A000000 		.4byte	.LVL14
 1456 0117 0100     		.2byte	0x1
 1457 0119 51       		.byte	0x51
 1458 011a 9A000000 		.4byte	.LVL14
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 36


 1459 011e AA000000 		.4byte	.LVL16
 1460 0122 0400     		.2byte	0x4
 1461 0124 F3       		.byte	0xf3
 1462 0125 01       		.uleb128 0x1
 1463 0126 51       		.byte	0x51
 1464 0127 9F       		.byte	0x9f
 1465 0128 AA000000 		.4byte	.LVL16
 1466 012c AC000000 		.4byte	.LVL17
 1467 0130 0100     		.2byte	0x1
 1468 0132 51       		.byte	0x51
 1469 0133 AC000000 		.4byte	.LVL17
 1470 0137 D4000000 		.4byte	.LFE4
 1471 013b 0400     		.2byte	0x4
 1472 013d F3       		.byte	0xf3
 1473 013e 01       		.uleb128 0x1
 1474 013f 51       		.byte	0x51
 1475 0140 9F       		.byte	0x9f
 1476 0141 00000000 		.4byte	0
 1477 0145 00000000 		.4byte	0
 1478              	.LLST6:
 1479 0149 18000000 		.4byte	.LVL8
 1480 014d 3C000000 		.4byte	.LVL13
 1481 0151 0500     		.2byte	0x5
 1482 0153 75       		.byte	0x75
 1483 0154 00       		.sleb128 0
 1484 0155 32       		.byte	0x32
 1485 0156 1A       		.byte	0x1a
 1486 0157 9F       		.byte	0x9f
 1487 0158 00000000 		.4byte	0
 1488 015c 00000000 		.4byte	0
 1489              	.LLST7:
 1490 0160 00000000 		.4byte	.LVL20
 1491 0164 06000000 		.4byte	.LVL21
 1492 0168 0100     		.2byte	0x1
 1493 016a 50       		.byte	0x50
 1494 016b 06000000 		.4byte	.LVL21
 1495 016f 14000000 		.4byte	.LFE6
 1496 0173 0400     		.2byte	0x4
 1497 0175 F3       		.byte	0xf3
 1498 0176 01       		.uleb128 0x1
 1499 0177 50       		.byte	0x50
 1500 0178 9F       		.byte	0x9f
 1501 0179 00000000 		.4byte	0
 1502 017d 00000000 		.4byte	0
 1503              	.LLST8:
 1504 0181 00000000 		.4byte	.LVL22
 1505 0185 04000000 		.4byte	.LVL23
 1506 0189 0100     		.2byte	0x1
 1507 018b 50       		.byte	0x50
 1508 018c 04000000 		.4byte	.LVL23
 1509 0190 14000000 		.4byte	.LFE7
 1510 0194 0400     		.2byte	0x4
 1511 0196 F3       		.byte	0xf3
 1512 0197 01       		.uleb128 0x1
 1513 0198 50       		.byte	0x50
 1514 0199 9F       		.byte	0x9f
 1515 019a 00000000 		.4byte	0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 37


 1516 019e 00000000 		.4byte	0
 1517              	.LLST9:
 1518 01a2 00000000 		.4byte	.LVL24
 1519 01a6 1C000000 		.4byte	.LVL25
 1520 01aa 0100     		.2byte	0x1
 1521 01ac 50       		.byte	0x50
 1522 01ad 1C000000 		.4byte	.LVL25
 1523 01b1 26000000 		.4byte	.LVL26
 1524 01b5 0400     		.2byte	0x4
 1525 01b7 F3       		.byte	0xf3
 1526 01b8 01       		.uleb128 0x1
 1527 01b9 50       		.byte	0x50
 1528 01ba 9F       		.byte	0x9f
 1529 01bb 26000000 		.4byte	.LVL26
 1530 01bf 32000000 		.4byte	.LVL27
 1531 01c3 0100     		.2byte	0x1
 1532 01c5 50       		.byte	0x50
 1533 01c6 32000000 		.4byte	.LVL27
 1534 01ca 3E000000 		.4byte	.LVL28
 1535 01ce 0400     		.2byte	0x4
 1536 01d0 F3       		.byte	0xf3
 1537 01d1 01       		.uleb128 0x1
 1538 01d2 50       		.byte	0x50
 1539 01d3 9F       		.byte	0x9f
 1540 01d4 3E000000 		.4byte	.LVL28
 1541 01d8 46000000 		.4byte	.LVL29
 1542 01dc 0100     		.2byte	0x1
 1543 01de 50       		.byte	0x50
 1544 01df 46000000 		.4byte	.LVL29
 1545 01e3 50000000 		.4byte	.LFE9
 1546 01e7 0400     		.2byte	0x4
 1547 01e9 F3       		.byte	0xf3
 1548 01ea 01       		.uleb128 0x1
 1549 01eb 50       		.byte	0x50
 1550 01ec 9F       		.byte	0x9f
 1551 01ed 00000000 		.4byte	0
 1552 01f1 00000000 		.4byte	0
 1553              		.section	.debug_aranges,"",%progbits
 1554 0000 6C000000 		.4byte	0x6c
 1555 0004 0200     		.2byte	0x2
 1556 0006 00000000 		.4byte	.Ldebug_info0
 1557 000a 04       		.byte	0x4
 1558 000b 00       		.byte	0
 1559 000c 0000     		.2byte	0
 1560 000e 0000     		.2byte	0
 1561 0010 00000000 		.4byte	.LFB0
 1562 0014 18000000 		.4byte	.LFE0-.LFB0
 1563 0018 00000000 		.4byte	.LFB1
 1564 001c 18000000 		.4byte	.LFE1-.LFB1
 1565 0020 00000000 		.4byte	.LFB2
 1566 0024 6C000000 		.4byte	.LFE2-.LFB2
 1567 0028 00000000 		.4byte	.LFB3
 1568 002c 18000000 		.4byte	.LFE3-.LFB3
 1569 0030 00000000 		.4byte	.LFB4
 1570 0034 D4000000 		.4byte	.LFE4-.LFB4
 1571 0038 00000000 		.4byte	.LFB5
 1572 003c 0C000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 38


 1573 0040 00000000 		.4byte	.LFB6
 1574 0044 14000000 		.4byte	.LFE6-.LFB6
 1575 0048 00000000 		.4byte	.LFB7
 1576 004c 14000000 		.4byte	.LFE7-.LFB7
 1577 0050 00000000 		.4byte	.LFB8
 1578 0054 10000000 		.4byte	.LFE8-.LFB8
 1579 0058 00000000 		.4byte	.LFB9
 1580 005c 50000000 		.4byte	.LFE9-.LFB9
 1581 0060 00000000 		.4byte	.LFB10
 1582 0064 10000000 		.4byte	.LFE10-.LFB10
 1583 0068 00000000 		.4byte	0
 1584 006c 00000000 		.4byte	0
 1585              		.section	.debug_ranges,"",%progbits
 1586              	.Ldebug_ranges0:
 1587 0000 02000000 		.4byte	.LBB11
 1588 0004 04000000 		.4byte	.LBE11
 1589 0008 06000000 		.4byte	.LBB19
 1590 000c 08000000 		.4byte	.LBE19
 1591 0010 0A000000 		.4byte	.LBB21
 1592 0014 0E000000 		.4byte	.LBE21
 1593 0018 00000000 		.4byte	0
 1594 001c 00000000 		.4byte	0
 1595 0020 04000000 		.4byte	.LBB15
 1596 0024 06000000 		.4byte	.LBE15
 1597 0028 08000000 		.4byte	.LBB20
 1598 002c 0A000000 		.4byte	.LBE20
 1599 0030 0E000000 		.4byte	.LBB22
 1600 0034 10000000 		.4byte	.LBE22
 1601 0038 00000000 		.4byte	0
 1602 003c 00000000 		.4byte	0
 1603 0040 00000000 		.4byte	.LBB23
 1604 0044 04000000 		.4byte	.LBE23
 1605 0048 08000000 		.4byte	.LBB28
 1606 004c 0A000000 		.4byte	.LBE28
 1607 0050 00000000 		.4byte	0
 1608 0054 00000000 		.4byte	0
 1609 0058 00000000 		.4byte	.LFB0
 1610 005c 18000000 		.4byte	.LFE0
 1611 0060 00000000 		.4byte	.LFB1
 1612 0064 18000000 		.4byte	.LFE1
 1613 0068 00000000 		.4byte	.LFB2
 1614 006c 6C000000 		.4byte	.LFE2
 1615 0070 00000000 		.4byte	.LFB3
 1616 0074 18000000 		.4byte	.LFE3
 1617 0078 00000000 		.4byte	.LFB4
 1618 007c D4000000 		.4byte	.LFE4
 1619 0080 00000000 		.4byte	.LFB5
 1620 0084 0C000000 		.4byte	.LFE5
 1621 0088 00000000 		.4byte	.LFB6
 1622 008c 14000000 		.4byte	.LFE6
 1623 0090 00000000 		.4byte	.LFB7
 1624 0094 14000000 		.4byte	.LFE7
 1625 0098 00000000 		.4byte	.LFB8
 1626 009c 10000000 		.4byte	.LFE8
 1627 00a0 00000000 		.4byte	.LFB9
 1628 00a4 50000000 		.4byte	.LFE9
 1629 00a8 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 39


 1630 00ac 10000000 		.4byte	.LFE10
 1631 00b0 00000000 		.4byte	0
 1632 00b4 00000000 		.4byte	0
 1633              		.section	.debug_line,"",%progbits
 1634              	.Ldebug_line0:
 1635 0000 BE010000 		.section	.debug_str,"MS",%progbits,1
 1635      02005600 
 1635      00000201 
 1635      FB0E0D00 
 1635      01010101 
 1636              	.LASF15:
 1637 0000 72656731 		.ascii	"reg16\000"
 1637      3600
 1638              	.LASF39:
 1639 0006 6F6C6453 		.ascii	"oldSrc\000"
 1639      726300
 1640              	.LASF23:
 1641 000d 73746174 		.ascii	"state\000"
 1641      6500
 1642              	.LASF26:
 1643 0013 6F6C6444 		.ascii	"oldDivider\000"
 1643      69766964 
 1643      657200
 1644              	.LASF36:
 1645 001e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_DelSig_1_Ext_CP_Clk"
 1645      6E657261 
 1645      7465645F 
 1645      536F7572 
 1645      63655C50 
 1646 004e 2E6300   		.ascii	".c\000"
 1647              	.LASF32:
 1648 0051 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_SetSourceRegister\000"
 1648      44656C53 
 1648      69675F31 
 1648      5F457874 
 1648      5F43505F 
 1649              	.LASF38:
 1650 007b 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_GetModeRegister\000"
 1650      44656C53 
 1650      69675F31 
 1650      5F457874 
 1650      5F43505F 
 1651              	.LASF11:
 1652 00a3 666C6F61 		.ascii	"float\000"
 1652      7400
 1653              	.LASF1:
 1654 00a9 756E7369 		.ascii	"unsigned char\000"
 1654      676E6564 
 1654      20636861 
 1654      7200
 1655              	.LASF14:
 1656 00b7 72656738 		.ascii	"reg8\000"
 1656      00
 1657              	.LASF5:
 1658 00bc 6C6F6E67 		.ascii	"long unsigned int\000"
 1658      20756E73 
 1658      69676E65 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 40


 1658      6420696E 
 1658      7400
 1659              	.LASF3:
 1660 00ce 73686F72 		.ascii	"short unsigned int\000"
 1660      7420756E 
 1660      7369676E 
 1660      65642069 
 1660      6E7400
 1661              	.LASF37:
 1662 00e1 433A5C55 		.ascii	"C:\\Users\\Luke\\Desktop\\Laserschutzschaltung.cyds"
 1662      73657273 
 1662      5C4C756B 
 1662      655C4465 
 1662      736B746F 
 1663 0110 6E5C4C61 		.ascii	"n\\Laserschutzschaltung.cydsn\000"
 1663      73657273 
 1663      63687574 
 1663      7A736368 
 1663      616C7475 
 1664              	.LASF19:
 1665 012d 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_Stop\000"
 1665      44656C53 
 1665      69675F31 
 1665      5F457874 
 1665      5F43505F 
 1666              	.LASF24:
 1667 014a 636C6B44 		.ascii	"clkDivider\000"
 1667      69766964 
 1667      657200
 1668              	.LASF12:
 1669 0155 646F7562 		.ascii	"double\000"
 1669      6C6500
 1670              	.LASF25:
 1671 015c 72657374 		.ascii	"restart\000"
 1671      61727400 
 1672              	.LASF10:
 1673 0164 75696E74 		.ascii	"uint16\000"
 1673      313600
 1674              	.LASF16:
 1675 016b 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_GetDividerRegister\000"
 1675      44656C53 
 1675      69675F31 
 1675      5F457874 
 1675      5F43505F 
 1676              	.LASF8:
 1677 0196 756E7369 		.ascii	"unsigned int\000"
 1677      676E6564 
 1677      20696E74 
 1677      00
 1678              	.LASF28:
 1679 01a3 63757272 		.ascii	"currSrc\000"
 1679      53726300 
 1680              	.LASF7:
 1681 01ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 1681      206C6F6E 
 1681      6720756E 
 1681      7369676E 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 41


 1681      65642069 
 1682              	.LASF31:
 1683 01c2 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_ClearModeRegister\000"
 1683      44656C53 
 1683      69675F31 
 1683      5F457874 
 1683      5F43505F 
 1684              	.LASF21:
 1685 01ec 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_StandbyPower\000"
 1685      44656C53 
 1685      69675F31 
 1685      5F457874 
 1685      5F43505F 
 1686              	.LASF30:
 1687 0211 6D6F6465 		.ascii	"modeBitMask\000"
 1687      4269744D 
 1687      61736B00 
 1688              	.LASF6:
 1689 021d 6C6F6E67 		.ascii	"long long int\000"
 1689      206C6F6E 
 1689      6720696E 
 1689      7400
 1690              	.LASF34:
 1691 022b 63757272 		.ascii	"currDiv\000"
 1691      44697600 
 1692              	.LASF13:
 1693 0233 63686172 		.ascii	"char\000"
 1693      00
 1694              	.LASF29:
 1695 0238 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_SetModeRegister\000"
 1695      44656C53 
 1695      69675F31 
 1695      5F457874 
 1695      5F43505F 
 1696              	.LASF18:
 1697 0260 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_Start\000"
 1697      44656C53 
 1697      69675F31 
 1697      5F457874 
 1697      5F43505F 
 1698              	.LASF2:
 1699 027e 73686F72 		.ascii	"short int\000"
 1699      7420696E 
 1699      7400
 1700              	.LASF9:
 1701 0288 75696E74 		.ascii	"uint8\000"
 1701      3800
 1702              	.LASF35:
 1703 028e 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1703      4320342E 
 1703      372E3320 
 1703      32303133 
 1703      30333132 
 1704 02c1 616E6368 		.ascii	"anch revision 196615]\000"
 1704      20726576 
 1704      6973696F 
 1704      6E203139 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\cchDVmOn.s 			page 42


 1704      36363135 
 1705              	.LASF27:
 1706 02d7 656E6162 		.ascii	"enabled\000"
 1706      6C656400 
 1707              	.LASF4:
 1708 02df 6C6F6E67 		.ascii	"long int\000"
 1708      20696E74 
 1708      00
 1709              	.LASF33:
 1710 02e8 636C6B53 		.ascii	"clkSource\000"
 1710      6F757263 
 1710      6500
 1711              	.LASF20:
 1712 02f2 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_StopBlock\000"
 1712      44656C53 
 1712      69675F31 
 1712      5F457874 
 1712      5F43505F 
 1713              	.LASF22:
 1714 0314 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_SetDividerRegister\000"
 1714      44656C53 
 1714      69675F31 
 1714      5F457874 
 1714      5F43505F 
 1715              	.LASF0:
 1716 033f 7369676E 		.ascii	"signed char\000"
 1716      65642063 
 1716      68617200 
 1717              	.LASF17:
 1718 034b 4144435F 		.ascii	"ADC_DelSig_1_Ext_CP_Clk_GetSourceRegister\000"
 1718      44656C53 
 1718      69675F31 
 1718      5F457874 
 1718      5F43505F 
 1719              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
