ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_1_theACLK.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.ADC_SAR_1_theACLK_Start,"ax",%progbits
  19              		.align	1
  20              		.global	ADC_SAR_1_theACLK_Start
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_SAR_1_theACLK_Start, %function
  24              	ADC_SAR_1_theACLK_Start:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_1_theACLK.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * File Name: ADC_SAR_1_theACLK.c
   3:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Version 2.10
   4:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
   8:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Note:
   9:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  10:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  17:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #include "ADC_SAR_1_theACLK.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  20:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  27:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  29:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  30:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_Start
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 2


  32:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  34:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
  35:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  "Start on Reset" option is enabled in the DWR.
  37:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  38:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
  39:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
  40:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  41:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
  42:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
  43:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  44:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
  45:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_Start(void) 
  46:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
  27              		.loc 1 46 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  47:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     /* Set the bit to enable the clock. */
  48:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_CLKEN |= ADC_SAR_1_theACLK_CLKEN_MASK;
  32              		.loc 1 48 0
  33 0000 044B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  35 0004 42F00100 		orr	r0, r2, #1
  36 0008 1870     		strb	r0, [r3, #0]
  49:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 	ADC_SAR_1_theACLK_CLKSTBY |= ADC_SAR_1_theACLK_CLKSTBY_MASK;
  37              		.loc 1 49 0
  38 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  39 000c 41F00102 		orr	r2, r1, #1
  40 0010 1A74     		strb	r2, [r3, #16]
  41 0012 7047     		bx	lr
  42              	.L3:
  43              		.align	2
  44              	.L2:
  45 0014 A1430040 		.word	1073759137
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	ADC_SAR_1_theACLK_Start, .-ADC_SAR_1_theACLK_Start
  49              		.section	.text.ADC_SAR_1_theACLK_Stop,"ax",%progbits
  50              		.align	1
  51              		.global	ADC_SAR_1_theACLK_Stop
  52              		.thumb
  53              		.thumb_func
  54              		.type	ADC_SAR_1_theACLK_Stop, %function
  55              	ADC_SAR_1_theACLK_Stop:
  56              	.LFB1:
  50:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
  51:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  52:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  53:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
  54:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_Stop
  55:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
  56:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  57:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
  58:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Stops the clock and returns immediately. This API does not require the
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 3


  59:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  source clock to be running but may return before the hardware is actually
  60:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  disabled. If the settings of the clock are changed after calling this
  61:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  glitch, use the StopBlock function.
  63:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  64:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
  65:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
  66:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  67:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
  68:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
  69:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  70:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
  71:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_Stop(void) 
  72:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
  57              		.loc 1 72 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
  73:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     /* Clear the bit to disable the clock. */
  74:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_CLKEN &= (uint8)(~ADC_SAR_1_theACLK_CLKEN_MASK);
  62              		.loc 1 74 0
  63 0000 044B     		ldr	r3, .L5
  64 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  65 0004 02F0FE00 		and	r0, r2, #254
  66 0008 1870     		strb	r0, [r3, #0]
  75:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 	ADC_SAR_1_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_1_theACLK_CLKSTBY_MASK);
  67              		.loc 1 75 0
  68 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  69 000c 01F0FE02 		and	r2, r1, #254
  70 0010 1A74     		strb	r2, [r3, #16]
  71 0012 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 0014 A1430040 		.word	1073759137
  76              		.cfi_endproc
  77              	.LFE1:
  78              		.size	ADC_SAR_1_theACLK_Stop, .-ADC_SAR_1_theACLK_Stop
  79              		.section	.text.ADC_SAR_1_theACLK_StopBlock,"ax",%progbits
  80              		.align	1
  81              		.global	ADC_SAR_1_theACLK_StopBlock
  82              		.thumb
  83              		.thumb_func
  84              		.type	ADC_SAR_1_theACLK_StopBlock, %function
  85              	ADC_SAR_1_theACLK_StopBlock:
  86              	.LFB2:
  76:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
  77:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  78:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  79:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  81:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
  82:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_StopBlock
  84:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
  85:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 4


  86:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
  87:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Note that the source clock must be running or this API will never return as
  91:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  a stopped clock cannot be disabled.
  92:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  93:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
  94:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
  95:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
  97:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
  98:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 100:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_StopBlock(void) 
 101:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
  87              		.loc 1 101 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91 0000 10B5     		push	{r4, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
 102:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if ((ADC_SAR_1_theACLK_CLKEN & ADC_SAR_1_theACLK_CLKEN_MASK) != 0u)
  96              		.loc 1 102 0
  97 0002 154B     		ldr	r3, .L15
  98 0004 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
  99 0006 C307     		lsls	r3, r0, #31
 100 0008 24D5     		bpl	.L7
 101              	.LBB10:
 103:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 104:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 105:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         uint16 oldDivider;
 106:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 107:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_LD = 0u;
 108:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Clear all the mask bits except ours. */
 110:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if defined(ADC_SAR_1_theACLK__CFG3)
 111:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 102              		.loc 1 111 0
 103 000a 1449     		ldr	r1, .L15+4
 107:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_LD = 0u;
 104              		.loc 1 107 0
 105 000c 144A     		ldr	r2, .L15+8
 106 000e 0024     		movs	r4, #0
 112:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 113:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #else
 114:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_DMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 115:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_AMASK = 0x00u;
 116:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* ADC_SAR_1_theACLK__CFG3 */
 117:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 118:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Clear mask of bus clock. */
 119:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 107              		.loc 1 119 0
 108 0010 1448     		ldr	r0, .L15+12
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 5


 111:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 109              		.loc 1 111 0
 110 0012 0123     		movs	r3, #1
 107:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_LD = 0u;
 111              		.loc 1 107 0
 112 0014 1470     		strb	r4, [r2, #0]
 111:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 113              		.loc 1 111 0
 114 0016 0B70     		strb	r3, [r1, #0]
 112:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_DMASK = 0x00u;
 115              		.loc 1 112 0
 116 0018 01F8044C 		strb	r4, [r1, #-4]
 117              		.loc 1 119 0
 118 001c 0478     		ldrb	r4, [r0, #0]	@ zero_extendqisi2
 119 001e 04F07F03 		and	r3, r4, #127
 120 0022 0370     		strb	r3, [r0, #0]
 120:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 121:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 121              		.loc 1 121 0
 122 0024 F830     		adds	r0, r0, #248
 123 0026 0188     		ldrh	r1, [r0, #0]
 122:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 124              		.loc 1 122 0
 125 0028 0F48     		ldr	r0, .L15+16
 121:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         oldDivider = CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 126              		.loc 1 121 0
 127 002a 8BB2     		uxth	r3, r1
 128              	.LVL0:
 123:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 129              		.loc 1 123 0
 130 002c 0724     		movs	r4, #7
 122:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 131              		.loc 1 122 0
 132 002e 0380     		strh	r3, [r0, #0]	@ movhi
 133              		.loc 1 123 0
 134 0030 1470     		strb	r4, [r2, #0]
 135              	.LVL1:
 136              	.L9:
 124:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 125:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Wait for clock to be disabled */
 126:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 137              		.loc 1 126 0 discriminator 1
 138 0032 0B4A     		ldr	r2, .L15+8
 139 0034 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 140 0036 11F00100 		ands	r0, r1, #1
 141 003a FAD1     		bne	.L9
 127:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Clear the bit to disable the clock. */
 130:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_CLKEN &= (uint8)(~ADC_SAR_1_theACLK_CLKEN_MASK);
 142              		.loc 1 130 0
 143 003c 0649     		ldr	r1, .L15
 144 003e 0C78     		ldrb	r4, [r1, #0]	@ zero_extendqisi2
 145 0040 04F0FE04 		and	r4, r4, #254
 146 0044 0C70     		strb	r4, [r1, #0]
 131:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_1_theACLK_CLKSTBY_MASK);
 147              		.loc 1 131 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 6


 148 0046 0C7C     		ldrb	r4, [r1, #16]	@ zero_extendqisi2
 149 0048 04F0FE04 		and	r4, r4, #254
 150 004c 0C74     		strb	r4, [r1, #16]
 132:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 133:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 134:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Clear the disable bit */
 135:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CLK_DIST_LD = 0x00u;
 151              		.loc 1 135 0
 152 004e 1070     		strb	r0, [r2, #0]
 136:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, oldDivider);
 153              		.loc 1 136 0
 154 0050 A2F8FF30 		strh	r3, [r2, #255]	@ movhi
 155              	.LVL2:
 156              	.L7:
 157 0054 10BD     		pop	{r4, pc}
 158              	.L16:
 159 0056 00BF     		.align	2
 160              	.L15:
 161 0058 A1430040 		.word	1073759137
 162 005c 14400040 		.word	1073758228
 163 0060 01400040 		.word	1073758209
 164 0064 08400040 		.word	1073758216
 165 0068 02400040 		.word	1073758210
 166              	.LBE10:
 167              		.cfi_endproc
 168              	.LFE2:
 169              		.size	ADC_SAR_1_theACLK_StopBlock, .-ADC_SAR_1_theACLK_StopBlock
 170              		.section	.text.ADC_SAR_1_theACLK_StandbyPower,"ax",%progbits
 171              		.align	1
 172              		.global	ADC_SAR_1_theACLK_StandbyPower
 173              		.thumb
 174              		.thumb_func
 175              		.type	ADC_SAR_1_theACLK_StandbyPower, %function
 176              	ADC_SAR_1_theACLK_StandbyPower:
 177              	.LFB3:
 137:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
 139:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 140:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 142:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 143:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 144:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_StandbyPower
 145:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 146:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 147:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 148:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Sets whether the clock is active in standby mode.
 149:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 150:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 151:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 153:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 154:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 155:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 156:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 157:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_StandbyPower(uint8 state) 
 158:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 7


 178              		.loc 1 158 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL3:
 184 0000 044B     		ldr	r3, .L21
 159:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if(state == 0u)
 160:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 161:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_CLKSTBY &= (uint8)(~ADC_SAR_1_theACLK_CLKSTBY_MASK);
 185              		.loc 1 161 0
 186 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 159:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if(state == 0u)
 187              		.loc 1 159 0
 188 0004 10B9     		cbnz	r0, .L18
 189              		.loc 1 161 0
 190 0006 02F0FE00 		and	r0, r2, #254
 191              	.LVL4:
 192 000a 01E0     		b	.L20
 193              	.LVL5:
 194              	.L18:
 162:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
 163:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     else
 164:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 165:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_CLKSTBY |= ADC_SAR_1_theACLK_CLKSTBY_MASK;
 195              		.loc 1 165 0
 196 000c 42F00100 		orr	r0, r2, #1
 197              	.LVL6:
 198              	.L20:
 199 0010 1870     		strb	r0, [r3, #0]
 200 0012 7047     		bx	lr
 201              	.L22:
 202              		.align	2
 203              	.L21:
 204 0014 B1430040 		.word	1073759153
 205              		.cfi_endproc
 206              	.LFE3:
 207              		.size	ADC_SAR_1_theACLK_StandbyPower, .-ADC_SAR_1_theACLK_StandbyPower
 208              		.section	.text.ADC_SAR_1_theACLK_SetDividerRegister,"ax",%progbits
 209              		.align	1
 210              		.global	ADC_SAR_1_theACLK_SetDividerRegister
 211              		.thumb
 212              		.thumb_func
 213              		.type	ADC_SAR_1_theACLK_SetDividerRegister, %function
 214              	ADC_SAR_1_theACLK_SetDividerRegister:
 215              	.LFB4:
 166:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
 167:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 168:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 169:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 170:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 171:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_SetDividerRegister
 172:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 173:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 174:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 175:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  register is set to zero or changed from zero, the clock will be temporarily
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 8


 177:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 180:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 181:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   cycle.
 188:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 189:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 190:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 191:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 192:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                                 
 195:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 216              		.loc 1 195 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              	.LVL7:
 221 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 222              	.LCFI1:
 223              		.cfi_def_cfa_offset 20
 224              		.cfi_offset 4, -20
 225              		.cfi_offset 5, -16
 226              		.cfi_offset 6, -12
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 229              	.LBB11:
 230              	.LBB12:
 196:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     uint8 enabled;
 197:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 198:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     uint8 currSrc = ADC_SAR_1_theACLK_GetSourceRegister();
 199:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     uint16 oldDivider = ADC_SAR_1_theACLK_GetDividerRegister();
 200:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 201:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if (clkDivider != oldDivider)
 202:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 203:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         enabled = ADC_SAR_1_theACLK_CLKEN & ADC_SAR_1_theACLK_CLKEN_MASK;
 204:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 206:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         {
 207:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             if (oldDivider == 0u)
 209:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             {
 210:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* divider is ignored while SSS is set.                                     */
 213:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, clkDivider);
 214:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 ADC_SAR_1_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 215:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             }
 216:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             else
 217:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             {
 218:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 9


 219:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* it without bothering with the shadow load.                               */
 220:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 ADC_SAR_1_theACLK_MOD_SRC |= CYCLK_SSS;
 221:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, clkDivider);
 222:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             }
 223:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         }
 224:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         else
 225:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         {
 226:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 			
 227:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             if (enabled != 0u)
 228:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             {
 229:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 230:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 231:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* Clear all the mask bits except ours. */
 232:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if defined(ADC_SAR_1_theACLK__CFG3)
 233:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 234:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 235:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #else
 236:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_DMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 237:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_AMASK = 0x00u;
 238:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* ADC_SAR_1_theACLK__CFG3 */
 239:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* Clear mask of bus clock. */
 240:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 241:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 242:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 if (((ADC_SAR_1_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 244:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 {
 245:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 246:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 247:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 248:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 249:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     /* Wait for clock to be disabled */
 250:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 251:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     ADC_SAR_1_theACLK_CLKEN &= (uint8)(~ADC_SAR_1_theACLK_CLKEN_MASK);
 254:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 255:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if HAS_CLKDIST_LD_DISABLE
 256:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     /* Clear the disable bit */
 257:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 258:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 }
 260:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             }
 261:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 262:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             /* Load divide value. */
 263:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             if ((ADC_SAR_1_theACLK_CLKEN & ADC_SAR_1_theACLK_CLKEN_MASK) != 0u)
 264:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             {
 265:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 267:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 269:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 270:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             }
 271:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             else
 272:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             {
 273:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 /* If the clock is disabled, set the divider directly */
 274:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, clkDivider);
 275:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 				ADC_SAR_1_theACLK_CLKEN |= enabled;
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 10


 276:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             }
 277:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         }
 278:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
 279:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 280:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 281:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 282:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 283:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_GetDividerRegister
 284:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 285:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 287:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Gets the clock divider register value.
 288:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 290:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 291:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 292:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 293:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  divide by 2, the return value will be 1.
 295:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 296:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 297:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** uint16 ADC_SAR_1_theACLK_GetDividerRegister(void) 
 298:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 300:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 301:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 302:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 304:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_SetModeRegister
 305:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 306:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 307:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 308:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  disabled before changing the mode.
 312:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 313:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 314:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 occur when the divider count reaches half of the divide
 318:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 value.
 319:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 is asserted for approximately half of its period. When
 321:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 322:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 source clock.
 323:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 be enabled for all synchronous clocks.
 325:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 328:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 329:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 330:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 331:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 332:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_SetModeRegister(uint8 modeBitMask) 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 11


 333:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 334:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_1_theACLK_MODE_MASK;
 335:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 336:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 337:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 338:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 339:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_ClearModeRegister
 340:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 341:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 342:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 343:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Clears flags that control the operating mode of the clock. This function
 344:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  disabled before changing the mode.
 347:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 348:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 349:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 occur when the divider count reaches half of the divide
 353:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 value.
 354:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 is asserted for approximately half of its period. When
 356:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 disabled, the output clock is asserted for one period of the
 357:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 source clock.
 358:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *                 be enabled for all synchronous clocks.
 360:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 363:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 364:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 365:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 366:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_ClearModeRegister(uint8 modeBitMask) 
 368:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 369:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_1_theACLK_MODE_MA
 370:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 371:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 373:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 374:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_GetModeRegister
 375:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 376:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 377:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 378:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Gets the clock mode register value.
 379:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 380:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 381:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 382:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 383:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 384:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 387:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 388:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** uint8 ADC_SAR_1_theACLK_GetModeRegister(void) 
 389:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 12


 390:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return ADC_SAR_1_theACLK_MOD_SRC & (uint8)(ADC_SAR_1_theACLK_MODE_MASK);
 391:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 392:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 393:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 394:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 395:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_SetSourceRegister
 396:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 397:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 398:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 399:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  changing the source. The old and new clock sources must be running.
 401:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 402:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 403:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 404:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   following input sources:
 405:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_IMO
 407:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_XTALM
 408:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_ILO
 409:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_PLL
 410:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_XTALK
 411:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   See the Technical Reference Manual for details on clock sources.
 414:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 415:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 416:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 417:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 418:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 419:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_SetSourceRegister(uint8 clkSource) 
 420:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 421:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     uint16 currDiv = ADC_SAR_1_theACLK_GetDividerRegister();
 422:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     uint8 oldSrc = ADC_SAR_1_theACLK_GetSourceRegister();
 423:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 424:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 425:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 426:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 427:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* then set the source so we are consistent.                                */
 429:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC |= CYCLK_SSS;
 430:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC =
 431:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (ADC_SAR_1_theACLK_MOD_SRC & (uint8)(~ADC_SAR_1_theACLK_SRC_SEL_MSK)) | clkSource;
 432:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
 433:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 434:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 435:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 436:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         /* lock when we clear SSS.                                                  */
 438:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC =
 439:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (ADC_SAR_1_theACLK_MOD_SRC & (uint8)(~ADC_SAR_1_theACLK_SRC_SEL_MSK)) | clkSource;
 440:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 441:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
 442:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     else
 443:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     {
 444:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC =
 445:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (ADC_SAR_1_theACLK_MOD_SRC & (uint8)(~ADC_SAR_1_theACLK_SRC_SEL_MSK)) | clkSource;
 446:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     }
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 13


 447:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 448:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_GetSourceRegister
 452:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Gets the input source of the clock.
 456:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 457:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 458:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 459:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 460:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 461:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 463:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 464:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** uint8 ADC_SAR_1_theACLK_GetSourceRegister(void) 
 465:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 466:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return ADC_SAR_1_theACLK_MOD_SRC & ADC_SAR_1_theACLK_SRC_SEL_MSK;
 231              		.loc 1 466 0
 232 0002 2B4B     		ldr	r3, .L44
 233              	.LBE12:
 234              	.LBE11:
 235              	.LBB15:
 236              	.LBB16:
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 237              		.loc 1 299 0
 238 0004 2B4C     		ldr	r4, .L44+4
 239              	.LBE16:
 240              	.LBE15:
 241              	.LBB19:
 242              	.LBB13:
 243              		.loc 1 466 0
 244 0006 1E78     		ldrb	r6, [r3, #0]	@ zero_extendqisi2
 245              	.LBE13:
 246              	.LBE19:
 247              	.LBB20:
 248              	.LBB17:
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 249              		.loc 1 299 0
 250 0008 2288     		ldrh	r2, [r4, #0]
 251              	.LBE17:
 252              	.LBE20:
 253              	.LBB21:
 254              	.LBB14:
 255              		.loc 1 466 0
 256 000a 06F00706 		and	r6, r6, #7
 257              	.LBE14:
 258              	.LBE21:
 259              	.LBB22:
 260              	.LBB18:
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 261              		.loc 1 299 0
 262 000e 92B2     		uxth	r2, r2
 263              	.LBE18:
 264              	.LBE22:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 14


 201:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if (clkDivider != oldDivider)
 265              		.loc 1 201 0
 266 0010 9042     		cmp	r0, r2
 267 0012 4CD0     		beq	.L23
 203:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         enabled = ADC_SAR_1_theACLK_CLKEN & ADC_SAR_1_theACLK_CLKEN_MASK;
 268              		.loc 1 203 0
 269 0014 284D     		ldr	r5, .L44+8
 270 0016 2D78     		ldrb	r5, [r5, #0]	@ zero_extendqisi2
 271              	.LVL8:
 205:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 272              		.loc 1 205 0
 273 0018 6EB9     		cbnz	r6, .L26
 205:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 274              		.loc 1 205 0 is_stmt 0 discriminator 1
 275 001a 32B1     		cbz	r2, .L27
 276 001c 58B9     		cbnz	r0, .L26
 277              	.L28:
 220:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 ADC_SAR_1_theACLK_MOD_SRC |= CYCLK_SSS;
 278              		.loc 1 220 0 is_stmt 1
 279 001e 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 280 0020 42F04001 		orr	r1, r2, #64
 281              	.LVL9:
 282 0024 1970     		strb	r1, [r3, #0]
 221:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, clkDivider);
 283              		.loc 1 221 0
 284 0026 2080     		strh	r0, [r4, #0]	@ movhi
 285 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 286              	.LVL10:
 287              	.L27:
 213:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, clkDivider);
 288              		.loc 1 213 0
 289 002a 2080     		strh	r0, [r4, #0]	@ movhi
 214:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 ADC_SAR_1_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 290              		.loc 1 214 0
 291 002c 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 292              	.LVL11:
 293 002e 00F0BF02 		and	r2, r0, #191
 294 0032 1A70     		strb	r2, [r3, #0]
 295 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 296              	.LVL12:
 297              	.L26:
 227:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             if (enabled != 0u)
 298              		.loc 1 227 0
 299 0036 15F00105 		ands	r5, r5, #1
 300              	.LVL13:
 301 003a 22D0     		beq	.L30
 233:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 302              		.loc 1 233 0
 303 003c 1F4E     		ldr	r6, .L44+12
 229:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_LD = 0x00u;
 304              		.loc 1 229 0
 305 003e 204B     		ldr	r3, .L44+16
 306 0040 0024     		movs	r4, #0
 233:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 307              		.loc 1 233 0
 308 0042 0127     		movs	r7, #1
 229:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_LD = 0x00u;
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 15


 309              		.loc 1 229 0
 310 0044 1C70     		strb	r4, [r3, #0]
 233:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_AMASK = ADC_SAR_1_theACLK_CLKEN_MASK;
 311              		.loc 1 233 0
 312 0046 3770     		strb	r7, [r6, #0]
 234:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_DMASK = 0x00u;
 313              		.loc 1 234 0
 314 0048 06F8044C 		strb	r4, [r6, #-4]
 240:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 315              		.loc 1 240 0
 316 004c 1D4C     		ldr	r4, .L44+20
 317 004e 2678     		ldrb	r6, [r4, #0]	@ zero_extendqisi2
 318 0050 06F07F06 		and	r6, r6, #127
 319 0054 2670     		strb	r6, [r4, #0]
 243:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 if (((ADC_SAR_1_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 320              		.loc 1 243 0
 321 0056 FA34     		adds	r4, r4, #250
 322 0058 2478     		ldrb	r4, [r4, #0]	@ zero_extendqisi2
 323 005a 04F00804 		and	r4, r4, #8
 324 005e E4B2     		uxtb	r4, r4
 325 0060 04B1     		cbz	r4, .L31
 243:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 if (((ADC_SAR_1_theACLK_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 326              		.loc 1 243 0 is_stmt 0 discriminator 1
 327 0062 70B9     		cbnz	r0, .L30
 328              	.L31:
 246:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 329              		.loc 1 246 0 is_stmt 1
 330 0064 184E     		ldr	r6, .L44+24
 331 0066 3280     		strh	r2, [r6, #0]	@ movhi
 247:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 332              		.loc 1 247 0
 333 0068 0722     		movs	r2, #7
 334 006a 1A70     		strb	r2, [r3, #0]
 335              	.L33:
 250:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 336              		.loc 1 250 0 discriminator 1
 337 006c 144B     		ldr	r3, .L44+16
 338 006e 1C78     		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 339 0070 14F00104 		ands	r4, r4, #1
 340 0074 FAD1     		bne	.L33
 253:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     ADC_SAR_1_theACLK_CLKEN &= (uint8)(~ADC_SAR_1_theACLK_CLKEN_MASK);
 341              		.loc 1 253 0
 342 0076 104A     		ldr	r2, .L44+8
 343 0078 1678     		ldrb	r6, [r2, #0]	@ zero_extendqisi2
 344 007a 06F0FE06 		and	r6, r6, #254
 345 007e 1670     		strb	r6, [r2, #0]
 257:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                     CLK_DIST_LD = 0x00u;
 346              		.loc 1 257 0
 347 0080 1C70     		strb	r4, [r3, #0]
 348              	.L30:
 263:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             if ((ADC_SAR_1_theACLK_CLKEN & ADC_SAR_1_theACLK_CLKEN_MASK) != 0u)
 349              		.loc 1 263 0
 350 0082 0D4B     		ldr	r3, .L44+8
 351 0084 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 352 0086 D207     		lsls	r2, r2, #31
 353 0088 0CD5     		bpl	.L34
 266:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 16


 354              		.loc 1 266 0
 355 008a 0F4B     		ldr	r3, .L44+24
 268:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 356              		.loc 1 268 0
 357 008c 0029     		cmp	r1, #0
 358 008e 0CBF     		ite	eq
 359 0090 0122     		moveq	r2, #1
 360 0092 0322     		movne	r2, #3
 266:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 361              		.loc 1 266 0
 362 0094 1880     		strh	r0, [r3, #0]	@ movhi
 268:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 363              		.loc 1 268 0
 364 0096 03F8012C 		strb	r2, [r3, #-1]
 365              	.LVL14:
 366              	.L36:
 269:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 367              		.loc 1 269 0 discriminator 1
 368 009a 0949     		ldr	r1, .L44+16
 369 009c 0878     		ldrb	r0, [r1, #0]	@ zero_extendqisi2
 370 009e C207     		lsls	r2, r0, #31
 371 00a0 FBD4     		bmi	.L36
 372 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 373              	.LVL15:
 374              	.L34:
 274:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****                 CY_SET_REG16(ADC_SAR_1_theACLK_DIV_PTR, clkDivider);
 375              		.loc 1 274 0
 376 00a4 0349     		ldr	r1, .L44+4
 377              	.LVL16:
 378 00a6 0880     		strh	r0, [r1, #0]	@ movhi
 275:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 				ADC_SAR_1_theACLK_CLKEN |= enabled;
 379              		.loc 1 275 0
 380 00a8 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 381              	.LVL17:
 382 00aa 0543     		orrs	r5, r5, r0
 383 00ac 1D70     		strb	r5, [r3, #0]
 384              	.LVL18:
 385              	.L23:
 386 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 387              	.L45:
 388              		.align	2
 389              	.L44:
 390 00b0 02410040 		.word	1073758466
 391 00b4 00410040 		.word	1073758464
 392 00b8 A1430040 		.word	1073759137
 393 00bc 14400040 		.word	1073758228
 394 00c0 01400040 		.word	1073758209
 395 00c4 08400040 		.word	1073758216
 396 00c8 02400040 		.word	1073758210
 397              		.cfi_endproc
 398              	.LFE4:
 399              		.size	ADC_SAR_1_theACLK_SetDividerRegister, .-ADC_SAR_1_theACLK_SetDividerRegister
 400              		.section	.text.ADC_SAR_1_theACLK_GetDividerRegister,"ax",%progbits
 401              		.align	1
 402              		.global	ADC_SAR_1_theACLK_GetDividerRegister
 403              		.thumb
 404              		.thumb_func
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 17


 405              		.type	ADC_SAR_1_theACLK_GetDividerRegister, %function
 406              	ADC_SAR_1_theACLK_GetDividerRegister:
 407              	.LFB5:
 298:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 408              		.loc 1 298 0
 409              		.cfi_startproc
 410              		@ args = 0, pretend = 0, frame = 0
 411              		@ frame_needed = 0, uses_anonymous_args = 0
 412              		@ link register save eliminated.
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 413              		.loc 1 299 0
 414 0000 014B     		ldr	r3, .L47
 415 0002 1888     		ldrh	r0, [r3, #0]
 300:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 416              		.loc 1 300 0
 417 0004 80B2     		uxth	r0, r0
 418 0006 7047     		bx	lr
 419              	.L48:
 420              		.align	2
 421              	.L47:
 422 0008 00410040 		.word	1073758464
 423              		.cfi_endproc
 424              	.LFE5:
 425              		.size	ADC_SAR_1_theACLK_GetDividerRegister, .-ADC_SAR_1_theACLK_GetDividerRegister
 426              		.section	.text.ADC_SAR_1_theACLK_SetModeRegister,"ax",%progbits
 427              		.align	1
 428              		.global	ADC_SAR_1_theACLK_SetModeRegister
 429              		.thumb
 430              		.thumb_func
 431              		.type	ADC_SAR_1_theACLK_SetModeRegister, %function
 432              	ADC_SAR_1_theACLK_SetModeRegister:
 433              	.LFB6:
 333:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 434              		.loc 1 333 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL19:
 334:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_MOD_SRC |= modeBitMask & (uint8)ADC_SAR_1_theACLK_MODE_MASK;
 440              		.loc 1 334 0
 441 0000 034B     		ldr	r3, .L50
 442 0002 00F0F800 		and	r0, r0, #248
 443              	.LVL20:
 444 0006 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 445 0008 40EA0201 		orr	r1, r0, r2
 446 000c 1970     		strb	r1, [r3, #0]
 447 000e 7047     		bx	lr
 448              	.L51:
 449              		.align	2
 450              	.L50:
 451 0010 02410040 		.word	1073758466
 452              		.cfi_endproc
 453              	.LFE6:
 454              		.size	ADC_SAR_1_theACLK_SetModeRegister, .-ADC_SAR_1_theACLK_SetModeRegister
 455              		.section	.text.ADC_SAR_1_theACLK_ClearModeRegister,"ax",%progbits
 456              		.align	1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 18


 457              		.global	ADC_SAR_1_theACLK_ClearModeRegister
 458              		.thumb
 459              		.thumb_func
 460              		.type	ADC_SAR_1_theACLK_ClearModeRegister, %function
 461              	ADC_SAR_1_theACLK_ClearModeRegister:
 462              	.LFB7:
 368:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 463              		.loc 1 368 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL21:
 369:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(ADC_SAR_1_theACLK_MODE_MA
 469              		.loc 1 369 0
 470 0000 034B     		ldr	r3, .L53
 471 0002 C043     		mvns	r0, r0
 472              	.LVL22:
 473 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 474 0006 40F00701 		orr	r1, r0, #7
 475 000a 0A40     		ands	r2, r2, r1
 476 000c 1A70     		strb	r2, [r3, #0]
 477 000e 7047     		bx	lr
 478              	.L54:
 479              		.align	2
 480              	.L53:
 481 0010 02410040 		.word	1073758466
 482              		.cfi_endproc
 483              	.LFE7:
 484              		.size	ADC_SAR_1_theACLK_ClearModeRegister, .-ADC_SAR_1_theACLK_ClearModeRegister
 485              		.section	.text.ADC_SAR_1_theACLK_GetModeRegister,"ax",%progbits
 486              		.align	1
 487              		.global	ADC_SAR_1_theACLK_GetModeRegister
 488              		.thumb
 489              		.thumb_func
 490              		.type	ADC_SAR_1_theACLK_GetModeRegister, %function
 491              	ADC_SAR_1_theACLK_GetModeRegister:
 492              	.LFB8:
 389:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 493              		.loc 1 389 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 390:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return ADC_SAR_1_theACLK_MOD_SRC & (uint8)(ADC_SAR_1_theACLK_MODE_MASK);
 498              		.loc 1 390 0
 499 0000 024B     		ldr	r3, .L56
 500 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 391:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 501              		.loc 1 391 0
 502 0004 00F0F800 		and	r0, r0, #248
 503 0008 7047     		bx	lr
 504              	.L57:
 505 000a 00BF     		.align	2
 506              	.L56:
 507 000c 02410040 		.word	1073758466
 508              		.cfi_endproc
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 19


 509              	.LFE8:
 510              		.size	ADC_SAR_1_theACLK_GetModeRegister, .-ADC_SAR_1_theACLK_GetModeRegister
 511              		.section	.text.ADC_SAR_1_theACLK_SetSourceRegister,"ax",%progbits
 512              		.align	1
 513              		.global	ADC_SAR_1_theACLK_SetSourceRegister
 514              		.thumb
 515              		.thumb_func
 516              		.type	ADC_SAR_1_theACLK_SetSourceRegister, %function
 517              	ADC_SAR_1_theACLK_SetSourceRegister:
 518              	.LFB9:
 420:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 519              		.loc 1 420 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524              	.LVL23:
 525              	.LBB23:
 526              	.LBB24:
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 527              		.loc 1 299 0
 528 0000 124B     		ldr	r3, .L66
 529 0002 1988     		ldrh	r1, [r3, #0]
 530              	.LBE24:
 531              	.LBE23:
 532              	.LBB26:
 533              	.LBB27:
 534              		.loc 1 466 0
 535 0004 0233     		adds	r3, r3, #2
 536 0006 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 537              	.LBE27:
 538              	.LBE26:
 539              	.LBB28:
 540              	.LBB25:
 299:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return CY_GET_REG16(ADC_SAR_1_theACLK_DIV_PTR);
 541              		.loc 1 299 0
 542 0008 89B2     		uxth	r1, r1
 543              	.LBE25:
 544              	.LBE28:
 424:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 545              		.loc 1 424 0
 546 000a 12F0070F 		tst	r2, #7
 547 000e 1A46     		mov	r2, r3
 548 0010 09D0     		beq	.L59
 424:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 549              		.loc 1 424 0 is_stmt 0 discriminator 1
 550 0012 A0B9     		cbnz	r0, .L60
 425:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 551              		.loc 1 425 0 is_stmt 1
 552 0014 99B9     		cbnz	r1, .L60
 429:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC |= CYCLK_SSS;
 553              		.loc 1 429 0
 554 0016 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 555 0018 42F04000 		orr	r0, r2, #64
 556              	.LVL24:
 557 001c 1870     		strb	r0, [r3, #0]
 431:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (ADC_SAR_1_theACLK_MOD_SRC & (uint8)(~ADC_SAR_1_theACLK_SRC_SEL_MSK)) | clkSource;
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 20


 558              		.loc 1 431 0
 559 001e 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 430:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC =
 560              		.loc 1 430 0
 561 0020 01F0F801 		and	r1, r1, #248
 562 0024 09E0     		b	.L65
 563              	.LVL25:
 564              	.L59:
 433:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 565              		.loc 1 433 0 discriminator 1
 566 0026 50B1     		cbz	r0, .L60
 434:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 567              		.loc 1 434 0
 568 0028 49B9     		cbnz	r1, .L60
 439:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (ADC_SAR_1_theACLK_MOD_SRC & (uint8)(~ADC_SAR_1_theACLK_SRC_SEL_MSK)) | clkSource;
 569              		.loc 1 439 0
 570 002a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 438:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC =
 571              		.loc 1 438 0
 572 002c 21F00702 		bic	r2, r1, #7
 573 0030 1043     		orrs	r0, r0, r2
 574              	.LVL26:
 575 0032 1870     		strb	r0, [r3, #0]
 440:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC &= (uint8)(~CYCLK_SSS);
 576              		.loc 1 440 0
 577 0034 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 578 0036 00F0BF01 		and	r1, r0, #191
 579              	.L65:
 580 003a 1970     		strb	r1, [r3, #0]
 581 003c 7047     		bx	lr
 582              	.LVL27:
 583              	.L60:
 445:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****             (ADC_SAR_1_theACLK_MOD_SRC & (uint8)(~ADC_SAR_1_theACLK_SRC_SEL_MSK)) | clkSource;
 584              		.loc 1 445 0
 585 003e 1378     		ldrb	r3, [r2, #0]	@ zero_extendqisi2
 444:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****         ADC_SAR_1_theACLK_MOD_SRC =
 586              		.loc 1 444 0
 587 0040 23F00701 		bic	r1, r3, #7
 588 0044 0843     		orrs	r0, r0, r1
 589              	.LVL28:
 590 0046 1070     		strb	r0, [r2, #0]
 591 0048 7047     		bx	lr
 592              	.L67:
 593 004a 00BF     		.align	2
 594              	.L66:
 595 004c 00410040 		.word	1073758464
 596              		.cfi_endproc
 597              	.LFE9:
 598              		.size	ADC_SAR_1_theACLK_SetSourceRegister, .-ADC_SAR_1_theACLK_SetSourceRegister
 599              		.section	.text.ADC_SAR_1_theACLK_GetSourceRegister,"ax",%progbits
 600              		.align	1
 601              		.global	ADC_SAR_1_theACLK_GetSourceRegister
 602              		.thumb
 603              		.thumb_func
 604              		.type	ADC_SAR_1_theACLK_GetSourceRegister, %function
 605              	ADC_SAR_1_theACLK_GetSourceRegister:
 606              	.LFB10:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 21


 465:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 607              		.loc 1 465 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              		.loc 1 466 0
 613 0000 024B     		ldr	r3, .L69
 614 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 467:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 615              		.loc 1 467 0
 616 0004 00F00700 		and	r0, r0, #7
 617 0008 7047     		bx	lr
 618              	.L70:
 619 000a 00BF     		.align	2
 620              	.L69:
 621 000c 02410040 		.word	1073758466
 622              		.cfi_endproc
 623              	.LFE10:
 624              		.size	ADC_SAR_1_theACLK_GetSourceRegister, .-ADC_SAR_1_theACLK_GetSourceRegister
 625              		.section	.text.ADC_SAR_1_theACLK_SetPhaseRegister,"ax",%progbits
 626              		.align	1
 627              		.global	ADC_SAR_1_theACLK_SetPhaseRegister
 628              		.thumb
 629              		.thumb_func
 630              		.type	ADC_SAR_1_theACLK_SetPhaseRegister, %function
 631              	ADC_SAR_1_theACLK_SetPhaseRegister:
 632              	.LFB11:
 468:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 469:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 470:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** #if defined(ADC_SAR_1_theACLK__CFG3)
 471:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 472:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 473:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_SetPhaseRegister
 475:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 476:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 477:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 478:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  delay to avoid glitches.
 481:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 482:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 483:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *   produces a 10ns delay.
 487:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 488:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 489:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 490:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 491:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 492:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** void ADC_SAR_1_theACLK_SetPhaseRegister(uint8 clkPhase) 
 493:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 633              		.loc 1 493 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 22


 636              		@ frame_needed = 0, uses_anonymous_args = 0
 637              		@ link register save eliminated.
 638              	.LVL29:
 494:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     ADC_SAR_1_theACLK_PHASE = clkPhase & ADC_SAR_1_theACLK_PHASE_MASK;
 639              		.loc 1 494 0
 640 0000 024B     		ldr	r3, .L72
 641 0002 00F00F00 		and	r0, r0, #15
 642              	.LVL30:
 643 0006 1870     		strb	r0, [r3, #0]
 644 0008 7047     		bx	lr
 645              	.L73:
 646 000a 00BF     		.align	2
 647              	.L72:
 648 000c 03410040 		.word	1073758467
 649              		.cfi_endproc
 650              	.LFE11:
 651              		.size	ADC_SAR_1_theACLK_SetPhaseRegister, .-ADC_SAR_1_theACLK_SetPhaseRegister
 652              		.section	.text.ADC_SAR_1_theACLK_GetPhaseRegister,"ax",%progbits
 653              		.align	1
 654              		.global	ADC_SAR_1_theACLK_GetPhaseRegister
 655              		.thumb
 656              		.thumb_func
 657              		.type	ADC_SAR_1_theACLK_GetPhaseRegister, %function
 658              	ADC_SAR_1_theACLK_GetPhaseRegister:
 659              	.LFB12:
 495:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 496:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 497:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** 
 498:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** /*******************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Function Name: ADC_SAR_1_theACLK_GetPhase
 500:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** ********************************************************************************
 501:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 502:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Summary:
 503:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  for analog clocks.
 505:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  None
 508:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** * Returns:
 510:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** uint8 ADC_SAR_1_theACLK_GetPhaseRegister(void) 
 514:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** {
 660              		.loc 1 514 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 515:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c ****     return ADC_SAR_1_theACLK_PHASE & ADC_SAR_1_theACLK_PHASE_MASK;
 665              		.loc 1 515 0
 666 0000 024B     		ldr	r3, .L75
 667 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 516:.\Generated_Source\PSoC5/ADC_SAR_1_theACLK.c **** }
 668              		.loc 1 516 0
 669 0004 00F00F00 		and	r0, r0, #15
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 23


 670 0008 7047     		bx	lr
 671              	.L76:
 672 000a 00BF     		.align	2
 673              	.L75:
 674 000c 03410040 		.word	1073758467
 675              		.cfi_endproc
 676              	.LFE12:
 677              		.size	ADC_SAR_1_theACLK_GetPhaseRegister, .-ADC_SAR_1_theACLK_GetPhaseRegister
 678              		.text
 679              	.Letext0:
 680              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 681              		.section	.debug_info,"",%progbits
 682              	.Ldebug_info0:
 683 0000 18030000 		.4byte	0x318
 684 0004 0200     		.2byte	0x2
 685 0006 00000000 		.4byte	.Ldebug_abbrev0
 686 000a 04       		.byte	0x4
 687 000b 01       		.uleb128 0x1
 688 000c BE020000 		.4byte	.LASF39
 689 0010 01       		.byte	0x1
 690 0011 E6010000 		.4byte	.LASF40
 691 0015 11010000 		.4byte	.LASF41
 692 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 693 001d 00000000 		.4byte	0
 694 0021 00000000 		.4byte	0
 695 0025 00000000 		.4byte	.Ldebug_line0
 696 0029 02       		.uleb128 0x2
 697 002a 01       		.byte	0x1
 698 002b 06       		.byte	0x6
 699 002c 47030000 		.4byte	.LASF0
 700 0030 02       		.uleb128 0x2
 701 0031 01       		.byte	0x1
 702 0032 08       		.byte	0x8
 703 0033 9F000000 		.4byte	.LASF1
 704 0037 02       		.uleb128 0x2
 705 0038 02       		.byte	0x2
 706 0039 05       		.byte	0x5
 707 003a AE020000 		.4byte	.LASF2
 708 003e 02       		.uleb128 0x2
 709 003f 02       		.byte	0x2
 710 0040 07       		.byte	0x7
 711 0041 DB000000 		.4byte	.LASF3
 712 0045 02       		.uleb128 0x2
 713 0046 04       		.byte	0x4
 714 0047 05       		.byte	0x5
 715 0048 2B030000 		.4byte	.LASF4
 716 004c 02       		.uleb128 0x2
 717 004d 04       		.byte	0x4
 718 004e 07       		.byte	0x7
 719 004f C9000000 		.4byte	.LASF5
 720 0053 02       		.uleb128 0x2
 721 0054 08       		.byte	0x8
 722 0055 05       		.byte	0x5
 723 0056 6E020000 		.4byte	.LASF6
 724 005a 02       		.uleb128 0x2
 725 005b 08       		.byte	0x8
 726 005c 07       		.byte	0x7
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 24


 727 005d 28020000 		.4byte	.LASF7
 728 0061 03       		.uleb128 0x3
 729 0062 04       		.byte	0x4
 730 0063 05       		.byte	0x5
 731 0064 696E7400 		.ascii	"int\000"
 732 0068 02       		.uleb128 0x2
 733 0069 04       		.byte	0x4
 734 006a 07       		.byte	0x7
 735 006b 13020000 		.4byte	.LASF8
 736 006f 04       		.uleb128 0x4
 737 0070 B8020000 		.4byte	.LASF9
 738 0074 02       		.byte	0x2
 739 0075 5B       		.byte	0x5b
 740 0076 30000000 		.4byte	0x30
 741 007a 04       		.uleb128 0x4
 742 007b B3010000 		.4byte	.LASF10
 743 007f 02       		.byte	0x2
 744 0080 5C       		.byte	0x5c
 745 0081 3E000000 		.4byte	0x3e
 746 0085 02       		.uleb128 0x2
 747 0086 04       		.byte	0x4
 748 0087 04       		.byte	0x4
 749 0088 77000000 		.4byte	.LASF11
 750 008c 02       		.uleb128 0x2
 751 008d 08       		.byte	0x8
 752 008e 04       		.byte	0x4
 753 008f AC010000 		.4byte	.LASF12
 754 0093 02       		.uleb128 0x2
 755 0094 01       		.byte	0x1
 756 0095 08       		.byte	0x8
 757 0096 A1020000 		.4byte	.LASF13
 758 009a 04       		.uleb128 0x4
 759 009b C4000000 		.4byte	.LASF14
 760 009f 02       		.byte	0x2
 761 00a0 F0       		.byte	0xf0
 762 00a1 A5000000 		.4byte	0xa5
 763 00a5 05       		.uleb128 0x5
 764 00a6 6F000000 		.4byte	0x6f
 765 00aa 04       		.uleb128 0x4
 766 00ab 00000000 		.4byte	.LASF15
 767 00af 02       		.byte	0x2
 768 00b0 F1       		.byte	0xf1
 769 00b1 B5000000 		.4byte	0xb5
 770 00b5 05       		.uleb128 0x5
 771 00b6 7A000000 		.4byte	0x7a
 772 00ba 06       		.uleb128 0x6
 773 00bb 01       		.byte	0x1
 774 00bc 7C020000 		.4byte	.LASF16
 775 00c0 01       		.byte	0x1
 776 00c1 2901     		.2byte	0x129
 777 00c3 01       		.byte	0x1
 778 00c4 7A000000 		.4byte	0x7a
 779 00c8 01       		.byte	0x1
 780 00c9 06       		.uleb128 0x6
 781 00ca 01       		.byte	0x1
 782 00cb 07030000 		.4byte	.LASF17
 783 00cf 01       		.byte	0x1
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 25


 784 00d0 D001     		.2byte	0x1d0
 785 00d2 01       		.byte	0x1
 786 00d3 6F000000 		.4byte	0x6f
 787 00d7 01       		.byte	0x1
 788 00d8 07       		.uleb128 0x7
 789 00d9 01       		.byte	0x1
 790 00da 89010000 		.4byte	.LASF18
 791 00de 01       		.byte	0x1
 792 00df 2D       		.byte	0x2d
 793 00e0 01       		.byte	0x1
 794 00e1 00000000 		.4byte	.LFB0
 795 00e5 18000000 		.4byte	.LFE0
 796 00e9 02       		.byte	0x2
 797 00ea 7D       		.byte	0x7d
 798 00eb 00       		.sleb128 0
 799 00ec 01       		.byte	0x1
 800 00ed 07       		.uleb128 0x7
 801 00ee 01       		.byte	0x1
 802 00ef AD000000 		.4byte	.LASF19
 803 00f3 01       		.byte	0x1
 804 00f4 47       		.byte	0x47
 805 00f5 01       		.byte	0x1
 806 00f6 00000000 		.4byte	.LFB1
 807 00fa 18000000 		.4byte	.LFE1
 808 00fe 02       		.byte	0x2
 809 00ff 7D       		.byte	0x7d
 810 0100 00       		.sleb128 0
 811 0101 01       		.byte	0x1
 812 0102 08       		.uleb128 0x8
 813 0103 01       		.byte	0x1
 814 0104 5B000000 		.4byte	.LASF20
 815 0108 01       		.byte	0x1
 816 0109 64       		.byte	0x64
 817 010a 01       		.byte	0x1
 818 010b 00000000 		.4byte	.LFB2
 819 010f 6C000000 		.4byte	.LFE2
 820 0113 00000000 		.4byte	.LLST0
 821 0117 01       		.byte	0x1
 822 0118 36010000 		.4byte	0x136
 823 011c 09       		.uleb128 0x9
 824 011d 0A000000 		.4byte	.LBB10
 825 0121 6C000000 		.4byte	.LBE10
 826 0125 0A       		.uleb128 0xa
 827 0126 50000000 		.4byte	.LASF26
 828 012a 01       		.byte	0x1
 829 012b 69       		.byte	0x69
 830 012c 7A000000 		.4byte	0x7a
 831 0130 20000000 		.4byte	.LLST1
 832 0134 00       		.byte	0
 833 0135 00       		.byte	0
 834 0136 0B       		.uleb128 0xb
 835 0137 01       		.byte	0x1
 836 0138 06000000 		.4byte	.LASF21
 837 013c 01       		.byte	0x1
 838 013d 9D       		.byte	0x9d
 839 013e 01       		.byte	0x1
 840 013f 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 26


 841 0143 18000000 		.4byte	.LFE3
 842 0147 02       		.byte	0x2
 843 0148 7D       		.byte	0x7d
 844 0149 00       		.sleb128 0
 845 014a 01       		.byte	0x1
 846 014b 5F010000 		.4byte	0x15f
 847 014f 0C       		.uleb128 0xc
 848 0150 25000000 		.4byte	.LASF23
 849 0154 01       		.byte	0x1
 850 0155 9D       		.byte	0x9d
 851 0156 6F000000 		.4byte	0x6f
 852 015a 3E000000 		.4byte	.LLST2
 853 015e 00       		.byte	0
 854 015f 08       		.uleb128 0x8
 855 0160 01       		.byte	0x1
 856 0161 2B000000 		.4byte	.LASF22
 857 0165 01       		.byte	0x1
 858 0166 C1       		.byte	0xc1
 859 0167 01       		.byte	0x1
 860 0168 00000000 		.4byte	.LFB4
 861 016c CC000000 		.4byte	.LFE4
 862 0170 78000000 		.4byte	.LLST3
 863 0174 01       		.byte	0x1
 864 0175 DF010000 		.4byte	0x1df
 865 0179 0C       		.uleb128 0xc
 866 017a A1010000 		.4byte	.LASF24
 867 017e 01       		.byte	0x1
 868 017f C1       		.byte	0xc1
 869 0180 7A000000 		.4byte	0x7a
 870 0184 98000000 		.4byte	.LLST4
 871 0188 0C       		.uleb128 0xc
 872 0189 BA010000 		.4byte	.LASF25
 873 018d 01       		.byte	0x1
 874 018e C1       		.byte	0xc1
 875 018f 6F000000 		.4byte	0x6f
 876 0193 F3000000 		.4byte	.LLST5
 877 0197 0A       		.uleb128 0xa
 878 0198 5D010000 		.4byte	.LASF27
 879 019c 01       		.byte	0x1
 880 019d C4       		.byte	0xc4
 881 019e 6F000000 		.4byte	0x6f
 882 01a2 46010000 		.4byte	.LLST6
 883 01a6 0D       		.uleb128 0xd
 884 01a7 20020000 		.4byte	.LASF28
 885 01ab 01       		.byte	0x1
 886 01ac C6       		.byte	0xc6
 887 01ad 6F000000 		.4byte	0x6f
 888 01b1 01       		.byte	0x1
 889 01b2 56       		.byte	0x56
 890 01b3 0D       		.uleb128 0xd
 891 01b4 50000000 		.4byte	.LASF26
 892 01b8 01       		.byte	0x1
 893 01b9 C7       		.byte	0xc7
 894 01ba 7A000000 		.4byte	0x7a
 895 01be 01       		.byte	0x1
 896 01bf 52       		.byte	0x52
 897 01c0 0E       		.uleb128 0xe
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 27


 898 01c1 C9000000 		.4byte	0xc9
 899 01c5 02000000 		.4byte	.LBB11
 900 01c9 00000000 		.4byte	.Ldebug_ranges0+0
 901 01cd 01       		.byte	0x1
 902 01ce C6       		.byte	0xc6
 903 01cf 0E       		.uleb128 0xe
 904 01d0 BA000000 		.4byte	0xba
 905 01d4 04000000 		.4byte	.LBB15
 906 01d8 20000000 		.4byte	.Ldebug_ranges0+0x20
 907 01dc 01       		.byte	0x1
 908 01dd C7       		.byte	0xc7
 909 01de 00       		.byte	0
 910 01df 0F       		.uleb128 0xf
 911 01e0 BA000000 		.4byte	0xba
 912 01e4 00000000 		.4byte	.LFB5
 913 01e8 0C000000 		.4byte	.LFE5
 914 01ec 02       		.byte	0x2
 915 01ed 7D       		.byte	0x7d
 916 01ee 00       		.sleb128 0
 917 01ef 01       		.byte	0x1
 918 01f0 10       		.uleb128 0x10
 919 01f1 01       		.byte	0x1
 920 01f2 7D000000 		.4byte	.LASF29
 921 01f6 01       		.byte	0x1
 922 01f7 4C01     		.2byte	0x14c
 923 01f9 01       		.byte	0x1
 924 01fa 00000000 		.4byte	.LFB6
 925 01fe 14000000 		.4byte	.LFE6
 926 0202 02       		.byte	0x2
 927 0203 7D       		.byte	0x7d
 928 0204 00       		.sleb128 0
 929 0205 01       		.byte	0x1
 930 0206 1B020000 		.4byte	0x21b
 931 020a 11       		.uleb128 0x11
 932 020b 62020000 		.4byte	.LASF30
 933 020f 01       		.byte	0x1
 934 0210 4C01     		.2byte	0x14c
 935 0212 6F000000 		.4byte	0x6f
 936 0216 5D010000 		.4byte	.LLST7
 937 021a 00       		.byte	0
 938 021b 10       		.uleb128 0x10
 939 021c 01       		.byte	0x1
 940 021d 65010000 		.4byte	.LASF31
 941 0221 01       		.byte	0x1
 942 0222 6F01     		.2byte	0x16f
 943 0224 01       		.byte	0x1
 944 0225 00000000 		.4byte	.LFB7
 945 0229 14000000 		.4byte	.LFE7
 946 022d 02       		.byte	0x2
 947 022e 7D       		.byte	0x7d
 948 022f 00       		.sleb128 0
 949 0230 01       		.byte	0x1
 950 0231 46020000 		.4byte	0x246
 951 0235 11       		.uleb128 0x11
 952 0236 62020000 		.4byte	.LASF30
 953 023a 01       		.byte	0x1
 954 023b 6F01     		.2byte	0x16f
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 28


 955 023d 6F000000 		.4byte	0x6f
 956 0241 7E010000 		.4byte	.LLST8
 957 0245 00       		.byte	0
 958 0246 12       		.uleb128 0x12
 959 0247 01       		.byte	0x1
 960 0248 53030000 		.4byte	.LASF37
 961 024c 01       		.byte	0x1
 962 024d 8401     		.2byte	0x184
 963 024f 01       		.byte	0x1
 964 0250 6F000000 		.4byte	0x6f
 965 0254 00000000 		.4byte	.LFB8
 966 0258 10000000 		.4byte	.LFE8
 967 025c 02       		.byte	0x2
 968 025d 7D       		.byte	0x7d
 969 025e 00       		.sleb128 0
 970 025f 01       		.byte	0x1
 971 0260 10       		.uleb128 0x10
 972 0261 01       		.byte	0x1
 973 0262 C2010000 		.4byte	.LASF32
 974 0266 01       		.byte	0x1
 975 0267 A301     		.2byte	0x1a3
 976 0269 01       		.byte	0x1
 977 026a 00000000 		.4byte	.LFB9
 978 026e 50000000 		.4byte	.LFE9
 979 0272 02       		.byte	0x2
 980 0273 7D       		.byte	0x7d
 981 0274 00       		.sleb128 0
 982 0275 01       		.byte	0x1
 983 0276 C5020000 		.4byte	0x2c5
 984 027a 11       		.uleb128 0x11
 985 027b 34030000 		.4byte	.LASF33
 986 027f 01       		.byte	0x1
 987 0280 A301     		.2byte	0x1a3
 988 0282 6F000000 		.4byte	0x6f
 989 0286 9F010000 		.4byte	.LLST9
 990 028a 13       		.uleb128 0x13
 991 028b A6020000 		.4byte	.LASF34
 992 028f 01       		.byte	0x1
 993 0290 A501     		.2byte	0x1a5
 994 0292 7A000000 		.4byte	0x7a
 995 0296 01       		.byte	0x1
 996 0297 51       		.byte	0x51
 997 0298 14       		.uleb128 0x14
 998 0299 75030000 		.4byte	.LASF42
 999 029d 01       		.byte	0x1
 1000 029e A601     		.2byte	0x1a6
 1001 02a0 6F000000 		.4byte	0x6f
 1002 02a4 15       		.uleb128 0x15
 1003 02a5 BA000000 		.4byte	0xba
 1004 02a9 00000000 		.4byte	.LBB23
 1005 02ad 40000000 		.4byte	.Ldebug_ranges0+0x40
 1006 02b1 01       		.byte	0x1
 1007 02b2 A501     		.2byte	0x1a5
 1008 02b4 16       		.uleb128 0x16
 1009 02b5 C9000000 		.4byte	0xc9
 1010 02b9 04000000 		.4byte	.LBB26
 1011 02bd 08000000 		.4byte	.LBE26
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 29


 1012 02c1 01       		.byte	0x1
 1013 02c2 A601     		.2byte	0x1a6
 1014 02c4 00       		.byte	0
 1015 02c5 0F       		.uleb128 0xf
 1016 02c6 C9000000 		.4byte	0xc9
 1017 02ca 00000000 		.4byte	.LFB10
 1018 02ce 10000000 		.4byte	.LFE10
 1019 02d2 02       		.byte	0x2
 1020 02d3 7D       		.byte	0x7d
 1021 02d4 00       		.sleb128 0
 1022 02d5 01       		.byte	0x1
 1023 02d6 10       		.uleb128 0x10
 1024 02d7 01       		.byte	0x1
 1025 02d8 EE000000 		.4byte	.LASF35
 1026 02dc 01       		.byte	0x1
 1027 02dd EC01     		.2byte	0x1ec
 1028 02df 01       		.byte	0x1
 1029 02e0 00000000 		.4byte	.LFB11
 1030 02e4 10000000 		.4byte	.LFE11
 1031 02e8 02       		.byte	0x2
 1032 02e9 7D       		.byte	0x7d
 1033 02ea 00       		.sleb128 0
 1034 02eb 01       		.byte	0x1
 1035 02ec 01030000 		.4byte	0x301
 1036 02f0 11       		.uleb128 0x11
 1037 02f1 3E030000 		.4byte	.LASF36
 1038 02f5 01       		.byte	0x1
 1039 02f6 EC01     		.2byte	0x1ec
 1040 02f8 6F000000 		.4byte	0x6f
 1041 02fc F2010000 		.4byte	.LLST10
 1042 0300 00       		.byte	0
 1043 0301 12       		.uleb128 0x12
 1044 0302 01       		.byte	0x1
 1045 0303 3F020000 		.4byte	.LASF38
 1046 0307 01       		.byte	0x1
 1047 0308 0102     		.2byte	0x201
 1048 030a 01       		.byte	0x1
 1049 030b 6F000000 		.4byte	0x6f
 1050 030f 00000000 		.4byte	.LFB12
 1051 0313 10000000 		.4byte	.LFE12
 1052 0317 02       		.byte	0x2
 1053 0318 7D       		.byte	0x7d
 1054 0319 00       		.sleb128 0
 1055 031a 01       		.byte	0x1
 1056 031b 00       		.byte	0
 1057              		.section	.debug_abbrev,"",%progbits
 1058              	.Ldebug_abbrev0:
 1059 0000 01       		.uleb128 0x1
 1060 0001 11       		.uleb128 0x11
 1061 0002 01       		.byte	0x1
 1062 0003 25       		.uleb128 0x25
 1063 0004 0E       		.uleb128 0xe
 1064 0005 13       		.uleb128 0x13
 1065 0006 0B       		.uleb128 0xb
 1066 0007 03       		.uleb128 0x3
 1067 0008 0E       		.uleb128 0xe
 1068 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 30


 1069 000a 0E       		.uleb128 0xe
 1070 000b 55       		.uleb128 0x55
 1071 000c 06       		.uleb128 0x6
 1072 000d 11       		.uleb128 0x11
 1073 000e 01       		.uleb128 0x1
 1074 000f 52       		.uleb128 0x52
 1075 0010 01       		.uleb128 0x1
 1076 0011 10       		.uleb128 0x10
 1077 0012 06       		.uleb128 0x6
 1078 0013 00       		.byte	0
 1079 0014 00       		.byte	0
 1080 0015 02       		.uleb128 0x2
 1081 0016 24       		.uleb128 0x24
 1082 0017 00       		.byte	0
 1083 0018 0B       		.uleb128 0xb
 1084 0019 0B       		.uleb128 0xb
 1085 001a 3E       		.uleb128 0x3e
 1086 001b 0B       		.uleb128 0xb
 1087 001c 03       		.uleb128 0x3
 1088 001d 0E       		.uleb128 0xe
 1089 001e 00       		.byte	0
 1090 001f 00       		.byte	0
 1091 0020 03       		.uleb128 0x3
 1092 0021 24       		.uleb128 0x24
 1093 0022 00       		.byte	0
 1094 0023 0B       		.uleb128 0xb
 1095 0024 0B       		.uleb128 0xb
 1096 0025 3E       		.uleb128 0x3e
 1097 0026 0B       		.uleb128 0xb
 1098 0027 03       		.uleb128 0x3
 1099 0028 08       		.uleb128 0x8
 1100 0029 00       		.byte	0
 1101 002a 00       		.byte	0
 1102 002b 04       		.uleb128 0x4
 1103 002c 16       		.uleb128 0x16
 1104 002d 00       		.byte	0
 1105 002e 03       		.uleb128 0x3
 1106 002f 0E       		.uleb128 0xe
 1107 0030 3A       		.uleb128 0x3a
 1108 0031 0B       		.uleb128 0xb
 1109 0032 3B       		.uleb128 0x3b
 1110 0033 0B       		.uleb128 0xb
 1111 0034 49       		.uleb128 0x49
 1112 0035 13       		.uleb128 0x13
 1113 0036 00       		.byte	0
 1114 0037 00       		.byte	0
 1115 0038 05       		.uleb128 0x5
 1116 0039 35       		.uleb128 0x35
 1117 003a 00       		.byte	0
 1118 003b 49       		.uleb128 0x49
 1119 003c 13       		.uleb128 0x13
 1120 003d 00       		.byte	0
 1121 003e 00       		.byte	0
 1122 003f 06       		.uleb128 0x6
 1123 0040 2E       		.uleb128 0x2e
 1124 0041 00       		.byte	0
 1125 0042 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 31


 1126 0043 0C       		.uleb128 0xc
 1127 0044 03       		.uleb128 0x3
 1128 0045 0E       		.uleb128 0xe
 1129 0046 3A       		.uleb128 0x3a
 1130 0047 0B       		.uleb128 0xb
 1131 0048 3B       		.uleb128 0x3b
 1132 0049 05       		.uleb128 0x5
 1133 004a 27       		.uleb128 0x27
 1134 004b 0C       		.uleb128 0xc
 1135 004c 49       		.uleb128 0x49
 1136 004d 13       		.uleb128 0x13
 1137 004e 20       		.uleb128 0x20
 1138 004f 0B       		.uleb128 0xb
 1139 0050 00       		.byte	0
 1140 0051 00       		.byte	0
 1141 0052 07       		.uleb128 0x7
 1142 0053 2E       		.uleb128 0x2e
 1143 0054 00       		.byte	0
 1144 0055 3F       		.uleb128 0x3f
 1145 0056 0C       		.uleb128 0xc
 1146 0057 03       		.uleb128 0x3
 1147 0058 0E       		.uleb128 0xe
 1148 0059 3A       		.uleb128 0x3a
 1149 005a 0B       		.uleb128 0xb
 1150 005b 3B       		.uleb128 0x3b
 1151 005c 0B       		.uleb128 0xb
 1152 005d 27       		.uleb128 0x27
 1153 005e 0C       		.uleb128 0xc
 1154 005f 11       		.uleb128 0x11
 1155 0060 01       		.uleb128 0x1
 1156 0061 12       		.uleb128 0x12
 1157 0062 01       		.uleb128 0x1
 1158 0063 40       		.uleb128 0x40
 1159 0064 0A       		.uleb128 0xa
 1160 0065 9742     		.uleb128 0x2117
 1161 0067 0C       		.uleb128 0xc
 1162 0068 00       		.byte	0
 1163 0069 00       		.byte	0
 1164 006a 08       		.uleb128 0x8
 1165 006b 2E       		.uleb128 0x2e
 1166 006c 01       		.byte	0x1
 1167 006d 3F       		.uleb128 0x3f
 1168 006e 0C       		.uleb128 0xc
 1169 006f 03       		.uleb128 0x3
 1170 0070 0E       		.uleb128 0xe
 1171 0071 3A       		.uleb128 0x3a
 1172 0072 0B       		.uleb128 0xb
 1173 0073 3B       		.uleb128 0x3b
 1174 0074 0B       		.uleb128 0xb
 1175 0075 27       		.uleb128 0x27
 1176 0076 0C       		.uleb128 0xc
 1177 0077 11       		.uleb128 0x11
 1178 0078 01       		.uleb128 0x1
 1179 0079 12       		.uleb128 0x12
 1180 007a 01       		.uleb128 0x1
 1181 007b 40       		.uleb128 0x40
 1182 007c 06       		.uleb128 0x6
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 32


 1183 007d 9742     		.uleb128 0x2117
 1184 007f 0C       		.uleb128 0xc
 1185 0080 01       		.uleb128 0x1
 1186 0081 13       		.uleb128 0x13
 1187 0082 00       		.byte	0
 1188 0083 00       		.byte	0
 1189 0084 09       		.uleb128 0x9
 1190 0085 0B       		.uleb128 0xb
 1191 0086 01       		.byte	0x1
 1192 0087 11       		.uleb128 0x11
 1193 0088 01       		.uleb128 0x1
 1194 0089 12       		.uleb128 0x12
 1195 008a 01       		.uleb128 0x1
 1196 008b 00       		.byte	0
 1197 008c 00       		.byte	0
 1198 008d 0A       		.uleb128 0xa
 1199 008e 34       		.uleb128 0x34
 1200 008f 00       		.byte	0
 1201 0090 03       		.uleb128 0x3
 1202 0091 0E       		.uleb128 0xe
 1203 0092 3A       		.uleb128 0x3a
 1204 0093 0B       		.uleb128 0xb
 1205 0094 3B       		.uleb128 0x3b
 1206 0095 0B       		.uleb128 0xb
 1207 0096 49       		.uleb128 0x49
 1208 0097 13       		.uleb128 0x13
 1209 0098 02       		.uleb128 0x2
 1210 0099 06       		.uleb128 0x6
 1211 009a 00       		.byte	0
 1212 009b 00       		.byte	0
 1213 009c 0B       		.uleb128 0xb
 1214 009d 2E       		.uleb128 0x2e
 1215 009e 01       		.byte	0x1
 1216 009f 3F       		.uleb128 0x3f
 1217 00a0 0C       		.uleb128 0xc
 1218 00a1 03       		.uleb128 0x3
 1219 00a2 0E       		.uleb128 0xe
 1220 00a3 3A       		.uleb128 0x3a
 1221 00a4 0B       		.uleb128 0xb
 1222 00a5 3B       		.uleb128 0x3b
 1223 00a6 0B       		.uleb128 0xb
 1224 00a7 27       		.uleb128 0x27
 1225 00a8 0C       		.uleb128 0xc
 1226 00a9 11       		.uleb128 0x11
 1227 00aa 01       		.uleb128 0x1
 1228 00ab 12       		.uleb128 0x12
 1229 00ac 01       		.uleb128 0x1
 1230 00ad 40       		.uleb128 0x40
 1231 00ae 0A       		.uleb128 0xa
 1232 00af 9742     		.uleb128 0x2117
 1233 00b1 0C       		.uleb128 0xc
 1234 00b2 01       		.uleb128 0x1
 1235 00b3 13       		.uleb128 0x13
 1236 00b4 00       		.byte	0
 1237 00b5 00       		.byte	0
 1238 00b6 0C       		.uleb128 0xc
 1239 00b7 05       		.uleb128 0x5
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 33


 1240 00b8 00       		.byte	0
 1241 00b9 03       		.uleb128 0x3
 1242 00ba 0E       		.uleb128 0xe
 1243 00bb 3A       		.uleb128 0x3a
 1244 00bc 0B       		.uleb128 0xb
 1245 00bd 3B       		.uleb128 0x3b
 1246 00be 0B       		.uleb128 0xb
 1247 00bf 49       		.uleb128 0x49
 1248 00c0 13       		.uleb128 0x13
 1249 00c1 02       		.uleb128 0x2
 1250 00c2 06       		.uleb128 0x6
 1251 00c3 00       		.byte	0
 1252 00c4 00       		.byte	0
 1253 00c5 0D       		.uleb128 0xd
 1254 00c6 34       		.uleb128 0x34
 1255 00c7 00       		.byte	0
 1256 00c8 03       		.uleb128 0x3
 1257 00c9 0E       		.uleb128 0xe
 1258 00ca 3A       		.uleb128 0x3a
 1259 00cb 0B       		.uleb128 0xb
 1260 00cc 3B       		.uleb128 0x3b
 1261 00cd 0B       		.uleb128 0xb
 1262 00ce 49       		.uleb128 0x49
 1263 00cf 13       		.uleb128 0x13
 1264 00d0 02       		.uleb128 0x2
 1265 00d1 0A       		.uleb128 0xa
 1266 00d2 00       		.byte	0
 1267 00d3 00       		.byte	0
 1268 00d4 0E       		.uleb128 0xe
 1269 00d5 1D       		.uleb128 0x1d
 1270 00d6 00       		.byte	0
 1271 00d7 31       		.uleb128 0x31
 1272 00d8 13       		.uleb128 0x13
 1273 00d9 52       		.uleb128 0x52
 1274 00da 01       		.uleb128 0x1
 1275 00db 55       		.uleb128 0x55
 1276 00dc 06       		.uleb128 0x6
 1277 00dd 58       		.uleb128 0x58
 1278 00de 0B       		.uleb128 0xb
 1279 00df 59       		.uleb128 0x59
 1280 00e0 0B       		.uleb128 0xb
 1281 00e1 00       		.byte	0
 1282 00e2 00       		.byte	0
 1283 00e3 0F       		.uleb128 0xf
 1284 00e4 2E       		.uleb128 0x2e
 1285 00e5 00       		.byte	0
 1286 00e6 31       		.uleb128 0x31
 1287 00e7 13       		.uleb128 0x13
 1288 00e8 11       		.uleb128 0x11
 1289 00e9 01       		.uleb128 0x1
 1290 00ea 12       		.uleb128 0x12
 1291 00eb 01       		.uleb128 0x1
 1292 00ec 40       		.uleb128 0x40
 1293 00ed 0A       		.uleb128 0xa
 1294 00ee 9742     		.uleb128 0x2117
 1295 00f0 0C       		.uleb128 0xc
 1296 00f1 00       		.byte	0
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 34


 1297 00f2 00       		.byte	0
 1298 00f3 10       		.uleb128 0x10
 1299 00f4 2E       		.uleb128 0x2e
 1300 00f5 01       		.byte	0x1
 1301 00f6 3F       		.uleb128 0x3f
 1302 00f7 0C       		.uleb128 0xc
 1303 00f8 03       		.uleb128 0x3
 1304 00f9 0E       		.uleb128 0xe
 1305 00fa 3A       		.uleb128 0x3a
 1306 00fb 0B       		.uleb128 0xb
 1307 00fc 3B       		.uleb128 0x3b
 1308 00fd 05       		.uleb128 0x5
 1309 00fe 27       		.uleb128 0x27
 1310 00ff 0C       		.uleb128 0xc
 1311 0100 11       		.uleb128 0x11
 1312 0101 01       		.uleb128 0x1
 1313 0102 12       		.uleb128 0x12
 1314 0103 01       		.uleb128 0x1
 1315 0104 40       		.uleb128 0x40
 1316 0105 0A       		.uleb128 0xa
 1317 0106 9742     		.uleb128 0x2117
 1318 0108 0C       		.uleb128 0xc
 1319 0109 01       		.uleb128 0x1
 1320 010a 13       		.uleb128 0x13
 1321 010b 00       		.byte	0
 1322 010c 00       		.byte	0
 1323 010d 11       		.uleb128 0x11
 1324 010e 05       		.uleb128 0x5
 1325 010f 00       		.byte	0
 1326 0110 03       		.uleb128 0x3
 1327 0111 0E       		.uleb128 0xe
 1328 0112 3A       		.uleb128 0x3a
 1329 0113 0B       		.uleb128 0xb
 1330 0114 3B       		.uleb128 0x3b
 1331 0115 05       		.uleb128 0x5
 1332 0116 49       		.uleb128 0x49
 1333 0117 13       		.uleb128 0x13
 1334 0118 02       		.uleb128 0x2
 1335 0119 06       		.uleb128 0x6
 1336 011a 00       		.byte	0
 1337 011b 00       		.byte	0
 1338 011c 12       		.uleb128 0x12
 1339 011d 2E       		.uleb128 0x2e
 1340 011e 00       		.byte	0
 1341 011f 3F       		.uleb128 0x3f
 1342 0120 0C       		.uleb128 0xc
 1343 0121 03       		.uleb128 0x3
 1344 0122 0E       		.uleb128 0xe
 1345 0123 3A       		.uleb128 0x3a
 1346 0124 0B       		.uleb128 0xb
 1347 0125 3B       		.uleb128 0x3b
 1348 0126 05       		.uleb128 0x5
 1349 0127 27       		.uleb128 0x27
 1350 0128 0C       		.uleb128 0xc
 1351 0129 49       		.uleb128 0x49
 1352 012a 13       		.uleb128 0x13
 1353 012b 11       		.uleb128 0x11
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 35


 1354 012c 01       		.uleb128 0x1
 1355 012d 12       		.uleb128 0x12
 1356 012e 01       		.uleb128 0x1
 1357 012f 40       		.uleb128 0x40
 1358 0130 0A       		.uleb128 0xa
 1359 0131 9742     		.uleb128 0x2117
 1360 0133 0C       		.uleb128 0xc
 1361 0134 00       		.byte	0
 1362 0135 00       		.byte	0
 1363 0136 13       		.uleb128 0x13
 1364 0137 34       		.uleb128 0x34
 1365 0138 00       		.byte	0
 1366 0139 03       		.uleb128 0x3
 1367 013a 0E       		.uleb128 0xe
 1368 013b 3A       		.uleb128 0x3a
 1369 013c 0B       		.uleb128 0xb
 1370 013d 3B       		.uleb128 0x3b
 1371 013e 05       		.uleb128 0x5
 1372 013f 49       		.uleb128 0x49
 1373 0140 13       		.uleb128 0x13
 1374 0141 02       		.uleb128 0x2
 1375 0142 0A       		.uleb128 0xa
 1376 0143 00       		.byte	0
 1377 0144 00       		.byte	0
 1378 0145 14       		.uleb128 0x14
 1379 0146 34       		.uleb128 0x34
 1380 0147 00       		.byte	0
 1381 0148 03       		.uleb128 0x3
 1382 0149 0E       		.uleb128 0xe
 1383 014a 3A       		.uleb128 0x3a
 1384 014b 0B       		.uleb128 0xb
 1385 014c 3B       		.uleb128 0x3b
 1386 014d 05       		.uleb128 0x5
 1387 014e 49       		.uleb128 0x49
 1388 014f 13       		.uleb128 0x13
 1389 0150 00       		.byte	0
 1390 0151 00       		.byte	0
 1391 0152 15       		.uleb128 0x15
 1392 0153 1D       		.uleb128 0x1d
 1393 0154 00       		.byte	0
 1394 0155 31       		.uleb128 0x31
 1395 0156 13       		.uleb128 0x13
 1396 0157 52       		.uleb128 0x52
 1397 0158 01       		.uleb128 0x1
 1398 0159 55       		.uleb128 0x55
 1399 015a 06       		.uleb128 0x6
 1400 015b 58       		.uleb128 0x58
 1401 015c 0B       		.uleb128 0xb
 1402 015d 59       		.uleb128 0x59
 1403 015e 05       		.uleb128 0x5
 1404 015f 00       		.byte	0
 1405 0160 00       		.byte	0
 1406 0161 16       		.uleb128 0x16
 1407 0162 1D       		.uleb128 0x1d
 1408 0163 00       		.byte	0
 1409 0164 31       		.uleb128 0x31
 1410 0165 13       		.uleb128 0x13
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 36


 1411 0166 11       		.uleb128 0x11
 1412 0167 01       		.uleb128 0x1
 1413 0168 12       		.uleb128 0x12
 1414 0169 01       		.uleb128 0x1
 1415 016a 58       		.uleb128 0x58
 1416 016b 0B       		.uleb128 0xb
 1417 016c 59       		.uleb128 0x59
 1418 016d 05       		.uleb128 0x5
 1419 016e 00       		.byte	0
 1420 016f 00       		.byte	0
 1421 0170 00       		.byte	0
 1422              		.section	.debug_loc,"",%progbits
 1423              	.Ldebug_loc0:
 1424              	.LLST0:
 1425 0000 00000000 		.4byte	.LFB2
 1426 0004 02000000 		.4byte	.LCFI0
 1427 0008 0200     		.2byte	0x2
 1428 000a 7D       		.byte	0x7d
 1429 000b 00       		.sleb128 0
 1430 000c 02000000 		.4byte	.LCFI0
 1431 0010 6C000000 		.4byte	.LFE2
 1432 0014 0200     		.2byte	0x2
 1433 0016 7D       		.byte	0x7d
 1434 0017 08       		.sleb128 8
 1435 0018 00000000 		.4byte	0
 1436 001c 00000000 		.4byte	0
 1437              	.LLST1:
 1438 0020 2C000000 		.4byte	.LVL0
 1439 0024 32000000 		.4byte	.LVL1
 1440 0028 0100     		.2byte	0x1
 1441 002a 51       		.byte	0x51
 1442 002b 32000000 		.4byte	.LVL1
 1443 002f 54000000 		.4byte	.LVL2
 1444 0033 0100     		.2byte	0x1
 1445 0035 53       		.byte	0x53
 1446 0036 00000000 		.4byte	0
 1447 003a 00000000 		.4byte	0
 1448              	.LLST2:
 1449 003e 00000000 		.4byte	.LVL3
 1450 0042 0A000000 		.4byte	.LVL4
 1451 0046 0100     		.2byte	0x1
 1452 0048 50       		.byte	0x50
 1453 0049 0A000000 		.4byte	.LVL4
 1454 004d 0C000000 		.4byte	.LVL5
 1455 0051 0400     		.2byte	0x4
 1456 0053 F3       		.byte	0xf3
 1457 0054 01       		.uleb128 0x1
 1458 0055 50       		.byte	0x50
 1459 0056 9F       		.byte	0x9f
 1460 0057 0C000000 		.4byte	.LVL5
 1461 005b 10000000 		.4byte	.LVL6
 1462 005f 0100     		.2byte	0x1
 1463 0061 50       		.byte	0x50
 1464 0062 10000000 		.4byte	.LVL6
 1465 0066 18000000 		.4byte	.LFE3
 1466 006a 0400     		.2byte	0x4
 1467 006c F3       		.byte	0xf3
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 37


 1468 006d 01       		.uleb128 0x1
 1469 006e 50       		.byte	0x50
 1470 006f 9F       		.byte	0x9f
 1471 0070 00000000 		.4byte	0
 1472 0074 00000000 		.4byte	0
 1473              	.LLST3:
 1474 0078 00000000 		.4byte	.LFB4
 1475 007c 02000000 		.4byte	.LCFI1
 1476 0080 0200     		.2byte	0x2
 1477 0082 7D       		.byte	0x7d
 1478 0083 00       		.sleb128 0
 1479 0084 02000000 		.4byte	.LCFI1
 1480 0088 CC000000 		.4byte	.LFE4
 1481 008c 0200     		.2byte	0x2
 1482 008e 7D       		.byte	0x7d
 1483 008f 14       		.sleb128 20
 1484 0090 00000000 		.4byte	0
 1485 0094 00000000 		.4byte	0
 1486              	.LLST4:
 1487 0098 00000000 		.4byte	.LVL7
 1488 009c 2E000000 		.4byte	.LVL11
 1489 00a0 0100     		.2byte	0x1
 1490 00a2 50       		.byte	0x50
 1491 00a3 2E000000 		.4byte	.LVL11
 1492 00a7 36000000 		.4byte	.LVL12
 1493 00ab 0200     		.2byte	0x2
 1494 00ad 74       		.byte	0x74
 1495 00ae 00       		.sleb128 0
 1496 00af 36000000 		.4byte	.LVL12
 1497 00b3 9A000000 		.4byte	.LVL14
 1498 00b7 0100     		.2byte	0x1
 1499 00b9 50       		.byte	0x50
 1500 00ba 9A000000 		.4byte	.LVL14
 1501 00be A4000000 		.4byte	.LVL15
 1502 00c2 0200     		.2byte	0x2
 1503 00c4 73       		.byte	0x73
 1504 00c5 00       		.sleb128 0
 1505 00c6 A4000000 		.4byte	.LVL15
 1506 00ca AA000000 		.4byte	.LVL17
 1507 00ce 0100     		.2byte	0x1
 1508 00d0 50       		.byte	0x50
 1509 00d1 AA000000 		.4byte	.LVL17
 1510 00d5 AE000000 		.4byte	.LVL18
 1511 00d9 0200     		.2byte	0x2
 1512 00db 71       		.byte	0x71
 1513 00dc 00       		.sleb128 0
 1514 00dd AE000000 		.4byte	.LVL18
 1515 00e1 CC000000 		.4byte	.LFE4
 1516 00e5 0400     		.2byte	0x4
 1517 00e7 F3       		.byte	0xf3
 1518 00e8 01       		.uleb128 0x1
 1519 00e9 50       		.byte	0x50
 1520 00ea 9F       		.byte	0x9f
 1521 00eb 00000000 		.4byte	0
 1522 00ef 00000000 		.4byte	0
 1523              	.LLST5:
 1524 00f3 00000000 		.4byte	.LVL7
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 38


 1525 00f7 24000000 		.4byte	.LVL9
 1526 00fb 0100     		.2byte	0x1
 1527 00fd 51       		.byte	0x51
 1528 00fe 24000000 		.4byte	.LVL9
 1529 0102 2A000000 		.4byte	.LVL10
 1530 0106 0400     		.2byte	0x4
 1531 0108 F3       		.byte	0xf3
 1532 0109 01       		.uleb128 0x1
 1533 010a 51       		.byte	0x51
 1534 010b 9F       		.byte	0x9f
 1535 010c 2A000000 		.4byte	.LVL10
 1536 0110 9A000000 		.4byte	.LVL14
 1537 0114 0100     		.2byte	0x1
 1538 0116 51       		.byte	0x51
 1539 0117 9A000000 		.4byte	.LVL14
 1540 011b A4000000 		.4byte	.LVL15
 1541 011f 0400     		.2byte	0x4
 1542 0121 F3       		.byte	0xf3
 1543 0122 01       		.uleb128 0x1
 1544 0123 51       		.byte	0x51
 1545 0124 9F       		.byte	0x9f
 1546 0125 A4000000 		.4byte	.LVL15
 1547 0129 A6000000 		.4byte	.LVL16
 1548 012d 0100     		.2byte	0x1
 1549 012f 51       		.byte	0x51
 1550 0130 A6000000 		.4byte	.LVL16
 1551 0134 CC000000 		.4byte	.LFE4
 1552 0138 0400     		.2byte	0x4
 1553 013a F3       		.byte	0xf3
 1554 013b 01       		.uleb128 0x1
 1555 013c 51       		.byte	0x51
 1556 013d 9F       		.byte	0x9f
 1557 013e 00000000 		.4byte	0
 1558 0142 00000000 		.4byte	0
 1559              	.LLST6:
 1560 0146 18000000 		.4byte	.LVL8
 1561 014a 3A000000 		.4byte	.LVL13
 1562 014e 0500     		.2byte	0x5
 1563 0150 75       		.byte	0x75
 1564 0151 00       		.sleb128 0
 1565 0152 31       		.byte	0x31
 1566 0153 1A       		.byte	0x1a
 1567 0154 9F       		.byte	0x9f
 1568 0155 00000000 		.4byte	0
 1569 0159 00000000 		.4byte	0
 1570              	.LLST7:
 1571 015d 00000000 		.4byte	.LVL19
 1572 0161 06000000 		.4byte	.LVL20
 1573 0165 0100     		.2byte	0x1
 1574 0167 50       		.byte	0x50
 1575 0168 06000000 		.4byte	.LVL20
 1576 016c 14000000 		.4byte	.LFE6
 1577 0170 0400     		.2byte	0x4
 1578 0172 F3       		.byte	0xf3
 1579 0173 01       		.uleb128 0x1
 1580 0174 50       		.byte	0x50
 1581 0175 9F       		.byte	0x9f
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 39


 1582 0176 00000000 		.4byte	0
 1583 017a 00000000 		.4byte	0
 1584              	.LLST8:
 1585 017e 00000000 		.4byte	.LVL21
 1586 0182 04000000 		.4byte	.LVL22
 1587 0186 0100     		.2byte	0x1
 1588 0188 50       		.byte	0x50
 1589 0189 04000000 		.4byte	.LVL22
 1590 018d 14000000 		.4byte	.LFE7
 1591 0191 0400     		.2byte	0x4
 1592 0193 F3       		.byte	0xf3
 1593 0194 01       		.uleb128 0x1
 1594 0195 50       		.byte	0x50
 1595 0196 9F       		.byte	0x9f
 1596 0197 00000000 		.4byte	0
 1597 019b 00000000 		.4byte	0
 1598              	.LLST9:
 1599 019f 00000000 		.4byte	.LVL23
 1600 01a3 1C000000 		.4byte	.LVL24
 1601 01a7 0100     		.2byte	0x1
 1602 01a9 50       		.byte	0x50
 1603 01aa 1C000000 		.4byte	.LVL24
 1604 01ae 26000000 		.4byte	.LVL25
 1605 01b2 0400     		.2byte	0x4
 1606 01b4 F3       		.byte	0xf3
 1607 01b5 01       		.uleb128 0x1
 1608 01b6 50       		.byte	0x50
 1609 01b7 9F       		.byte	0x9f
 1610 01b8 26000000 		.4byte	.LVL25
 1611 01bc 32000000 		.4byte	.LVL26
 1612 01c0 0100     		.2byte	0x1
 1613 01c2 50       		.byte	0x50
 1614 01c3 32000000 		.4byte	.LVL26
 1615 01c7 3E000000 		.4byte	.LVL27
 1616 01cb 0400     		.2byte	0x4
 1617 01cd F3       		.byte	0xf3
 1618 01ce 01       		.uleb128 0x1
 1619 01cf 50       		.byte	0x50
 1620 01d0 9F       		.byte	0x9f
 1621 01d1 3E000000 		.4byte	.LVL27
 1622 01d5 46000000 		.4byte	.LVL28
 1623 01d9 0100     		.2byte	0x1
 1624 01db 50       		.byte	0x50
 1625 01dc 46000000 		.4byte	.LVL28
 1626 01e0 50000000 		.4byte	.LFE9
 1627 01e4 0400     		.2byte	0x4
 1628 01e6 F3       		.byte	0xf3
 1629 01e7 01       		.uleb128 0x1
 1630 01e8 50       		.byte	0x50
 1631 01e9 9F       		.byte	0x9f
 1632 01ea 00000000 		.4byte	0
 1633 01ee 00000000 		.4byte	0
 1634              	.LLST10:
 1635 01f2 00000000 		.4byte	.LVL29
 1636 01f6 06000000 		.4byte	.LVL30
 1637 01fa 0100     		.2byte	0x1
 1638 01fc 50       		.byte	0x50
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 40


 1639 01fd 06000000 		.4byte	.LVL30
 1640 0201 10000000 		.4byte	.LFE11
 1641 0205 0400     		.2byte	0x4
 1642 0207 F3       		.byte	0xf3
 1643 0208 01       		.uleb128 0x1
 1644 0209 50       		.byte	0x50
 1645 020a 9F       		.byte	0x9f
 1646 020b 00000000 		.4byte	0
 1647 020f 00000000 		.4byte	0
 1648              		.section	.debug_aranges,"",%progbits
 1649 0000 7C000000 		.4byte	0x7c
 1650 0004 0200     		.2byte	0x2
 1651 0006 00000000 		.4byte	.Ldebug_info0
 1652 000a 04       		.byte	0x4
 1653 000b 00       		.byte	0
 1654 000c 0000     		.2byte	0
 1655 000e 0000     		.2byte	0
 1656 0010 00000000 		.4byte	.LFB0
 1657 0014 18000000 		.4byte	.LFE0-.LFB0
 1658 0018 00000000 		.4byte	.LFB1
 1659 001c 18000000 		.4byte	.LFE1-.LFB1
 1660 0020 00000000 		.4byte	.LFB2
 1661 0024 6C000000 		.4byte	.LFE2-.LFB2
 1662 0028 00000000 		.4byte	.LFB3
 1663 002c 18000000 		.4byte	.LFE3-.LFB3
 1664 0030 00000000 		.4byte	.LFB4
 1665 0034 CC000000 		.4byte	.LFE4-.LFB4
 1666 0038 00000000 		.4byte	.LFB5
 1667 003c 0C000000 		.4byte	.LFE5-.LFB5
 1668 0040 00000000 		.4byte	.LFB6
 1669 0044 14000000 		.4byte	.LFE6-.LFB6
 1670 0048 00000000 		.4byte	.LFB7
 1671 004c 14000000 		.4byte	.LFE7-.LFB7
 1672 0050 00000000 		.4byte	.LFB8
 1673 0054 10000000 		.4byte	.LFE8-.LFB8
 1674 0058 00000000 		.4byte	.LFB9
 1675 005c 50000000 		.4byte	.LFE9-.LFB9
 1676 0060 00000000 		.4byte	.LFB10
 1677 0064 10000000 		.4byte	.LFE10-.LFB10
 1678 0068 00000000 		.4byte	.LFB11
 1679 006c 10000000 		.4byte	.LFE11-.LFB11
 1680 0070 00000000 		.4byte	.LFB12
 1681 0074 10000000 		.4byte	.LFE12-.LFB12
 1682 0078 00000000 		.4byte	0
 1683 007c 00000000 		.4byte	0
 1684              		.section	.debug_ranges,"",%progbits
 1685              	.Ldebug_ranges0:
 1686 0000 02000000 		.4byte	.LBB11
 1687 0004 04000000 		.4byte	.LBE11
 1688 0008 06000000 		.4byte	.LBB19
 1689 000c 08000000 		.4byte	.LBE19
 1690 0010 0A000000 		.4byte	.LBB21
 1691 0014 0E000000 		.4byte	.LBE21
 1692 0018 00000000 		.4byte	0
 1693 001c 00000000 		.4byte	0
 1694 0020 04000000 		.4byte	.LBB15
 1695 0024 06000000 		.4byte	.LBE15
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 41


 1696 0028 08000000 		.4byte	.LBB20
 1697 002c 0A000000 		.4byte	.LBE20
 1698 0030 0E000000 		.4byte	.LBB22
 1699 0034 10000000 		.4byte	.LBE22
 1700 0038 00000000 		.4byte	0
 1701 003c 00000000 		.4byte	0
 1702 0040 00000000 		.4byte	.LBB23
 1703 0044 04000000 		.4byte	.LBE23
 1704 0048 08000000 		.4byte	.LBB28
 1705 004c 0A000000 		.4byte	.LBE28
 1706 0050 00000000 		.4byte	0
 1707 0054 00000000 		.4byte	0
 1708 0058 00000000 		.4byte	.LFB0
 1709 005c 18000000 		.4byte	.LFE0
 1710 0060 00000000 		.4byte	.LFB1
 1711 0064 18000000 		.4byte	.LFE1
 1712 0068 00000000 		.4byte	.LFB2
 1713 006c 6C000000 		.4byte	.LFE2
 1714 0070 00000000 		.4byte	.LFB3
 1715 0074 18000000 		.4byte	.LFE3
 1716 0078 00000000 		.4byte	.LFB4
 1717 007c CC000000 		.4byte	.LFE4
 1718 0080 00000000 		.4byte	.LFB5
 1719 0084 0C000000 		.4byte	.LFE5
 1720 0088 00000000 		.4byte	.LFB6
 1721 008c 14000000 		.4byte	.LFE6
 1722 0090 00000000 		.4byte	.LFB7
 1723 0094 14000000 		.4byte	.LFE7
 1724 0098 00000000 		.4byte	.LFB8
 1725 009c 10000000 		.4byte	.LFE8
 1726 00a0 00000000 		.4byte	.LFB9
 1727 00a4 50000000 		.4byte	.LFE9
 1728 00a8 00000000 		.4byte	.LFB10
 1729 00ac 10000000 		.4byte	.LFE10
 1730 00b0 00000000 		.4byte	.LFB11
 1731 00b4 10000000 		.4byte	.LFE11
 1732 00b8 00000000 		.4byte	.LFB12
 1733 00bc 10000000 		.4byte	.LFE12
 1734 00c0 00000000 		.4byte	0
 1735 00c4 00000000 		.4byte	0
 1736              		.section	.debug_line,"",%progbits
 1737              	.Ldebug_line0:
 1738 0000 D0010000 		.section	.debug_str,"MS",%progbits,1
 1738      02005000 
 1738      00000201 
 1738      FB0E0D00 
 1738      01010101 
 1739              	.LASF15:
 1740 0000 72656731 		.ascii	"reg16\000"
 1740      3600
 1741              	.LASF21:
 1742 0006 4144435F 		.ascii	"ADC_SAR_1_theACLK_StandbyPower\000"
 1742      5341525F 
 1742      315F7468 
 1742      6541434C 
 1742      4B5F5374 
 1743              	.LASF23:
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 42


 1744 0025 73746174 		.ascii	"state\000"
 1744      6500
 1745              	.LASF22:
 1746 002b 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetDividerRegister\000"
 1746      5341525F 
 1746      315F7468 
 1746      6541434C 
 1746      4B5F5365 
 1747              	.LASF26:
 1748 0050 6F6C6444 		.ascii	"oldDivider\000"
 1748      69766964 
 1748      657200
 1749              	.LASF20:
 1750 005b 4144435F 		.ascii	"ADC_SAR_1_theACLK_StopBlock\000"
 1750      5341525F 
 1750      315F7468 
 1750      6541434C 
 1750      4B5F5374 
 1751              	.LASF11:
 1752 0077 666C6F61 		.ascii	"float\000"
 1752      7400
 1753              	.LASF29:
 1754 007d 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetModeRegister\000"
 1754      5341525F 
 1754      315F7468 
 1754      6541434C 
 1754      4B5F5365 
 1755              	.LASF1:
 1756 009f 756E7369 		.ascii	"unsigned char\000"
 1756      676E6564 
 1756      20636861 
 1756      7200
 1757              	.LASF19:
 1758 00ad 4144435F 		.ascii	"ADC_SAR_1_theACLK_Stop\000"
 1758      5341525F 
 1758      315F7468 
 1758      6541434C 
 1758      4B5F5374 
 1759              	.LASF14:
 1760 00c4 72656738 		.ascii	"reg8\000"
 1760      00
 1761              	.LASF5:
 1762 00c9 6C6F6E67 		.ascii	"long unsigned int\000"
 1762      20756E73 
 1762      69676E65 
 1762      6420696E 
 1762      7400
 1763              	.LASF3:
 1764 00db 73686F72 		.ascii	"short unsigned int\000"
 1764      7420756E 
 1764      7369676E 
 1764      65642069 
 1764      6E7400
 1765              	.LASF35:
 1766 00ee 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetPhaseRegister\000"
 1766      5341525F 
 1766      315F7468 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 43


 1766      6541434C 
 1766      4B5F5365 
 1767              	.LASF41:
 1768 0111 433A5C55 		.ascii	"C:\\Users\\Luke\\Desktop\\Laserschutzschaltung.cyds"
 1768      73657273 
 1768      5C4C756B 
 1768      655C4465 
 1768      736B746F 
 1769 0140 6E5C4C61 		.ascii	"n\\Laserschutzschaltung.cydsn\000"
 1769      73657273 
 1769      63687574 
 1769      7A736368 
 1769      616C7475 
 1770              	.LASF27:
 1771 015d 656E6162 		.ascii	"enabled\000"
 1771      6C656400 
 1772              	.LASF31:
 1773 0165 4144435F 		.ascii	"ADC_SAR_1_theACLK_ClearModeRegister\000"
 1773      5341525F 
 1773      315F7468 
 1773      6541434C 
 1773      4B5F436C 
 1774              	.LASF18:
 1775 0189 4144435F 		.ascii	"ADC_SAR_1_theACLK_Start\000"
 1775      5341525F 
 1775      315F7468 
 1775      6541434C 
 1775      4B5F5374 
 1776              	.LASF24:
 1777 01a1 636C6B44 		.ascii	"clkDivider\000"
 1777      69766964 
 1777      657200
 1778              	.LASF12:
 1779 01ac 646F7562 		.ascii	"double\000"
 1779      6C6500
 1780              	.LASF10:
 1781 01b3 75696E74 		.ascii	"uint16\000"
 1781      313600
 1782              	.LASF25:
 1783 01ba 72657374 		.ascii	"restart\000"
 1783      61727400 
 1784              	.LASF32:
 1785 01c2 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetSourceRegister\000"
 1785      5341525F 
 1785      315F7468 
 1785      6541434C 
 1785      4B5F5365 
 1786              	.LASF40:
 1787 01e6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_1_theACLK.c\000"
 1787      6E657261 
 1787      7465645F 
 1787      536F7572 
 1787      63655C50 
 1788              	.LASF8:
 1789 0213 756E7369 		.ascii	"unsigned int\000"
 1789      676E6564 
 1789      20696E74 
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 44


 1789      00
 1790              	.LASF28:
 1791 0220 63757272 		.ascii	"currSrc\000"
 1791      53726300 
 1792              	.LASF7:
 1793 0228 6C6F6E67 		.ascii	"long long unsigned int\000"
 1793      206C6F6E 
 1793      6720756E 
 1793      7369676E 
 1793      65642069 
 1794              	.LASF38:
 1795 023f 4144435F 		.ascii	"ADC_SAR_1_theACLK_GetPhaseRegister\000"
 1795      5341525F 
 1795      315F7468 
 1795      6541434C 
 1795      4B5F4765 
 1796              	.LASF30:
 1797 0262 6D6F6465 		.ascii	"modeBitMask\000"
 1797      4269744D 
 1797      61736B00 
 1798              	.LASF6:
 1799 026e 6C6F6E67 		.ascii	"long long int\000"
 1799      206C6F6E 
 1799      6720696E 
 1799      7400
 1800              	.LASF16:
 1801 027c 4144435F 		.ascii	"ADC_SAR_1_theACLK_GetDividerRegister\000"
 1801      5341525F 
 1801      315F7468 
 1801      6541434C 
 1801      4B5F4765 
 1802              	.LASF13:
 1803 02a1 63686172 		.ascii	"char\000"
 1803      00
 1804              	.LASF34:
 1805 02a6 63757272 		.ascii	"currDiv\000"
 1805      44697600 
 1806              	.LASF2:
 1807 02ae 73686F72 		.ascii	"short int\000"
 1807      7420696E 
 1807      7400
 1808              	.LASF9:
 1809 02b8 75696E74 		.ascii	"uint8\000"
 1809      3800
 1810              	.LASF39:
 1811 02be 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1811      4320342E 
 1811      372E3320 
 1811      32303133 
 1811      30333132 
 1812 02f1 616E6368 		.ascii	"anch revision 196615]\000"
 1812      20726576 
 1812      6973696F 
 1812      6E203139 
 1812      36363135 
 1813              	.LASF17:
 1814 0307 4144435F 		.ascii	"ADC_SAR_1_theACLK_GetSourceRegister\000"
ARM GAS  C:\Users\Luke\AppData\Local\Temp\ccykLuag.s 			page 45


 1814      5341525F 
 1814      315F7468 
 1814      6541434C 
 1814      4B5F4765 
 1815              	.LASF4:
 1816 032b 6C6F6E67 		.ascii	"long int\000"
 1816      20696E74 
 1816      00
 1817              	.LASF33:
 1818 0334 636C6B53 		.ascii	"clkSource\000"
 1818      6F757263 
 1818      6500
 1819              	.LASF36:
 1820 033e 636C6B50 		.ascii	"clkPhase\000"
 1820      68617365 
 1820      00
 1821              	.LASF0:
 1822 0347 7369676E 		.ascii	"signed char\000"
 1822      65642063 
 1822      68617200 
 1823              	.LASF37:
 1824 0353 4144435F 		.ascii	"ADC_SAR_1_theACLK_GetModeRegister\000"
 1824      5341525F 
 1824      315F7468 
 1824      6541434C 
 1824      4B5F4765 
 1825              	.LASF42:
 1826 0375 6F6C6453 		.ascii	"oldSrc\000"
 1826      726300
 1827              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
