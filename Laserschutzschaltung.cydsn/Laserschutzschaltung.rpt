Loading plugins phase: Elapsed time ==> 0s.483ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -d CY8C5868AXI-LP035 -s C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 3s.432ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.156ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  Laserschutzschaltung.v
Program  :   C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -dcpsoc3 Laserschutzschaltung.v -verilog
======================================================================

======================================================================
Compiling:  Laserschutzschaltung.v
Program  :   C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -dcpsoc3 Laserschutzschaltung.v -verilog
======================================================================

======================================================================
Compiling:  Laserschutzschaltung.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -dcpsoc3 -verilog Laserschutzschaltung.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Mon May 29 14:29:09 2017


======================================================================
Compiling:  Laserschutzschaltung.v
Program  :   vpp
Options  :    -yv2 -q10 Laserschutzschaltung.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Mon May 29 14:29:09 2017

Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_srff_v1_0\cy_srff_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'Laserschutzschaltung.ctl'.
Laserschutzschaltung.v (line 2181, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.

vlogfe:  No errors.


======================================================================
Compiling:  Laserschutzschaltung.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -dcpsoc3 -verilog Laserschutzschaltung.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Mon May 29 14:29:09 2017

Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\codegentemp\Laserschutzschaltung.ctl'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\codegentemp\Laserschutzschaltung.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_srff_v1_0\cy_srff_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.

tovif:  No errors.


======================================================================
Compiling:  Laserschutzschaltung.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -dcpsoc3 -verilog Laserschutzschaltung.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Mon May 29 14:29:10 2017

Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\codegentemp\Laserschutzschaltung.ctl'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\not_v1_0\not_v1_0.v'.
Linking 'C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\codegentemp\Laserschutzschaltung.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_srff_v1_0\cy_srff_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\IDAC8_1:Net_157\
	\Comp_1:Net_9\
	Net_777
	Net_774
	\PWM_1:Net_114\
	\IDAC8_2:Net_157\
	Net_648
	\Counter_1:Net_89\
	\Counter_1:Net_95\
	\Counter_1:Net_102\
	\ADC_DelSig_1:Net_268\
	\ADC_DelSig_1:Net_270\
	Net_487
	Net_488
	Net_490
	Net_491
	Net_492
	Net_493
	\USBUART_1:dma_complete_0\
	\USBUART_1:Net_1922\
	\USBUART_1:dma_complete_1\
	\USBUART_1:Net_1921\
	\USBUART_1:dma_complete_2\
	\USBUART_1:Net_1920\
	\USBUART_1:dma_complete_3\
	\USBUART_1:Net_1919\
	\USBUART_1:dma_complete_4\
	\USBUART_1:Net_1918\
	\USBUART_1:dma_complete_5\
	\USBUART_1:Net_1917\
	\USBUART_1:dma_complete_6\
	\USBUART_1:Net_1916\
	\USBUART_1:dma_complete_7\
	\USBUART_1:Net_1915\
	\ADC_SAR_Seq_2:SAR:Net_221\
	\ADC_SAR_Seq_2:SAR:Net_381\
	\ADC_SAR_Seq_2:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq_2:soc_out\
	\ADC_SAR_Seq_2:Net_3905\
	\ADC_SAR_Seq_2:Net_3867\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq_2:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq_2:MODULE_1:lt\
	\ADC_SAR_Seq_2:MODULE_1:gt\
	\ADC_SAR_Seq_2:MODULE_1:gte\
	\ADC_SAR_Seq_2:MODULE_1:lte\
	\ADC_SAR_Seq_2:MODULE_1:neq\
	Net_923
	Net_920
	\PWM_2:Net_114\
	\Comp_4:Net_9\


Deleted 60 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \IDAC8_1:Net_125\ to zero
Aliasing \IDAC8_1:Net_194\ to zero
Aliasing \IDAC8_1:Net_195\ to zero
Aliasing \VDAC8:Net_83\ to zero
Aliasing \VDAC8:Net_81\ to zero
Aliasing \VDAC8:Net_82\ to zero
Aliasing \Filter:Net_1\ to zero
Aliasing \Filter:Net_4\ to zero
Aliasing \Filter:Net_5\ to zero
Aliasing one to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__DAC_Out_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__Buzzer_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__Diode_Seedseite_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__Seed_ref_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__Pump_ref_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing \PWM_1:Net_113\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_6\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_5\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_4\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_3\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_2\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_1\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \LCD:tmpOE__LCDPort_net_0\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \ADC_SAR_1:vp_ctl_0\ to zero
Aliasing \ADC_SAR_1:vp_ctl_2\ to zero
Aliasing \ADC_SAR_1:vn_ctl_1\ to zero
Aliasing \ADC_SAR_1:vn_ctl_3\ to zero
Aliasing \ADC_SAR_1:vp_ctl_1\ to zero
Aliasing \ADC_SAR_1:vp_ctl_3\ to zero
Aliasing \ADC_SAR_1:vn_ctl_0\ to zero
Aliasing \ADC_SAR_1:vn_ctl_2\ to zero
Aliasing \ADC_SAR_1:soc\ to zero
Aliasing \ADC_SAR_1:Net_381\ to zero
Aliasing \IDAC8_2:Net_125\ to zero
Aliasing \IDAC8_2:Net_194\ to zero
Aliasing \IDAC8_2:Net_195\ to zero
Aliasing tmpOE__DAC_PGA_OUT_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing \PGA_1:Net_37\ to zero
Aliasing \PGA_1:Net_40\ to zero
Aliasing \PGA_1:Net_38\ to zero
Aliasing \PGA_1:Net_39\ to zero
Aliasing tmpOE__DAC_Current_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__Potentiometer_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing \Counter_1:Net_82\ to zero
Aliasing \Counter_1:Net_91\ to zero
Aliasing \ADC_DelSig_1:Net_482\ to zero
Aliasing \ADC_DelSig_1:Net_252\ to zero
Aliasing \ADC_DelSig_1:soc\ to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__temp_sens_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__Fault_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing \Control_RS:clk\ to zero
Aliasing \Control_RS:rst\ to zero
Aliasing \USBUART_1:Vbus_ps:status_1\ to zero
Aliasing \USBUART_1:Vbus_ps:status_2\ to zero
Aliasing \USBUART_1:Vbus_ps:status_3\ to zero
Aliasing \USBUART_1:Vbus_ps:status_4\ to zero
Aliasing \USBUART_1:Vbus_ps:status_5\ to zero
Aliasing \USBUART_1:Vbus_ps:status_6\ to zero
Aliasing \USBUART_1:Vbus_ps:status_7\ to zero
Aliasing \USBUART_1:tmpOE__Dm_net_0\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \USBUART_1:tmpOE__Dp_net_0\ to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__VUSB_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__ADC_IN_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing \Fault_Reg:status_6\ to zero
Aliasing \Fault_Reg:status_7\ to zero
Aliasing \PGA_2:Net_37\ to zero
Aliasing \PGA_2:Net_40\ to zero
Aliasing \PGA_2:Net_38\ to zero
Aliasing \PGA_2:Net_39\ to zero
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_enable\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq_2:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq_2:bSAR_SEQ:status_1\ to zero
Aliasing Net_806 to \ADC_SAR_Seq_2:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__Diode_Pumpseite_net_0
Aliasing \PWM_2:Net_113\ to tmpOE__Diode_Pumpseite_net_0
Aliasing Net_925 to zero
Aliasing tmpOE__Curr_control_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__pump_diode_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__osc_diode_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__seed_diode_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing tmpOE__SW2_net_0 to tmpOE__Diode_Pumpseite_net_0
Aliasing \VDAC8_1:Net_83\ to zero
Aliasing \VDAC8_1:Net_81\ to zero
Aliasing \VDAC8_1:Net_82\ to zero
Aliasing \Comp_4:clock\ to zero
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq_2:MODIN1_5\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq_2:MODIN1_4\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq_2:MODIN1_3\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq_2:MODIN1_2\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq_2:MODIN1_1\
Aliasing \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq_2:MODIN1_0\
Removing Lhs of wire \IDAC8_1:Net_125\[7] = zero[2]
Removing Lhs of wire \IDAC8_1:Net_158\[8] = zero[2]
Removing Lhs of wire \IDAC8_1:Net_123\[9] = zero[2]
Removing Lhs of wire \IDAC8_1:Net_194\[14] = zero[2]
Removing Lhs of wire \IDAC8_1:Net_195\[15] = zero[2]
Removing Lhs of wire \VDAC8:Net_83\[17] = zero[2]
Removing Lhs of wire \VDAC8:Net_81\[18] = zero[2]
Removing Lhs of wire \VDAC8:Net_82\[19] = zero[2]
Removing Rhs of wire Osc_err[27] = \Comp_1:Net_1\[26]
Removing Rhs of wire Seed2[34] = \Comp_2:Net_9\[35]
Removing Lhs of wire \Filter:Net_1\[37] = zero[2]
Removing Lhs of wire \Filter:Net_4\[39] = zero[2]
Removing Lhs of wire \Filter:Net_5\[40] = zero[2]
Removing Lhs of wire one[57] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Rhs of wire Seed1[60] = \Comp_3:Net_9\[79]
Removing Rhs of wire Temp_err[61] = \Control_RS:control_out_1\[333]
Removing Rhs of wire Temp_err[61] = \Control_RS:control_1\[353]
Removing Rhs of wire Osc_err_low[62] = \Comp_4:Net_1\[873]
Removing Lhs of wire tmpOE__DAC_Out_net_0[64] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__Buzzer_net_0[81] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Rhs of wire Net_802[82] = \PWM_1:Net_57\[124]
Removing Lhs of wire tmpOE__Diode_Seedseite_net_0[88] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__Seed_ref_net_0[94] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__Pump_ref_net_0[101] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \PWM_1:Net_107\[121] = Net_771[128]
Removing Lhs of wire \PWM_1:Net_113\[122] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_6\[131] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_5\[132] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_4\[133] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_3\[134] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_2\[135] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_1\[136] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \LCD:tmpOE__LCDPort_net_0\[137] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_0\[159] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_2\[160] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_1\[161] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_3\[162] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_1\[163] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_3\[164] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_0\[165] = zero[2]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_2\[166] = zero[2]
Removing Rhs of wire \ADC_SAR_1:Net_188\[169] = \ADC_SAR_1:Net_221\[170]
Removing Lhs of wire \ADC_SAR_1:soc\[176] = zero[2]
Removing Lhs of wire \ADC_SAR_1:Net_381\[202] = zero[2]
Removing Lhs of wire \IDAC8_2:Net_125\[204] = zero[2]
Removing Lhs of wire \IDAC8_2:Net_158\[205] = zero[2]
Removing Lhs of wire \IDAC8_2:Net_123\[206] = zero[2]
Removing Lhs of wire \IDAC8_2:Net_194\[210] = zero[2]
Removing Lhs of wire \IDAC8_2:Net_195\[211] = zero[2]
Removing Lhs of wire tmpOE__DAC_PGA_OUT_net_0[213] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \PGA_1:Net_37\[221] = zero[2]
Removing Lhs of wire \PGA_1:Net_40\[222] = zero[2]
Removing Lhs of wire \PGA_1:Net_38\[223] = zero[2]
Removing Lhs of wire \PGA_1:Net_39\[224] = zero[2]
Removing Lhs of wire tmpOE__DAC_Current_net_0[230] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__Potentiometer_net_0[240] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \Counter_1:Net_82\[248] = zero[2]
Removing Lhs of wire \Counter_1:Net_91\[249] = zero[2]
Removing Rhs of wire Net_437[253] = \Counter_1:Net_42\[252]
Removing Rhs of wire \ADC_DelSig_1:Net_488\[272] = \ADC_DelSig_1:Net_250\[308]
Removing Lhs of wire \ADC_DelSig_1:Net_481\[275] = zero[2]
Removing Lhs of wire \ADC_DelSig_1:Net_482\[276] = zero[2]
Removing Lhs of wire \ADC_DelSig_1:Net_252\[310] = zero[2]
Removing Lhs of wire \ADC_DelSig_1:soc\[312] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__temp_sens_net_0[316] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire Net_465[322] = cy_srff_1[321]
Removing Rhs of wire Net_795[323] = \Control_RS:control_out_0\[332]
Removing Rhs of wire Net_795[323] = \Control_RS:control_0\[354]
Removing Lhs of wire tmpOE__Fault_net_0[325] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \Control_RS:clk\[330] = zero[2]
Removing Lhs of wire \Control_RS:rst\[331] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_0\[357] = Net_522[358]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_1\[359] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_2\[360] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_3\[361] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_4\[362] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_5\[363] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_6\[364] = zero[2]
Removing Lhs of wire \USBUART_1:Vbus_ps:status_7\[365] = zero[2]
Removing Lhs of wire \USBUART_1:tmpOE__Dm_net_0\[370] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \USBUART_1:tmpOE__Dp_net_0\[377] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__VUSB_net_0[432] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__ADC_IN_net_0[445] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \Fault_Reg:status_0\[452] = cy_srff_1[321]
Removing Lhs of wire \Fault_Reg:status_1\[453] = Net_943[59]
Removing Lhs of wire \Fault_Reg:status_2\[454] = Seed1[60]
Removing Lhs of wire \Fault_Reg:status_3\[455] = Seed2[34]
Removing Lhs of wire \Fault_Reg:status_4\[456] = Osc_err[27]
Removing Lhs of wire \Fault_Reg:status_5\[457] = Temp_err[61]
Removing Lhs of wire \Fault_Reg:status_6\[458] = zero[2]
Removing Lhs of wire \Fault_Reg:status_7\[459] = zero[2]
Removing Lhs of wire \PGA_2:Net_37\[463] = zero[2]
Removing Lhs of wire \PGA_2:Net_40\[464] = zero[2]
Removing Lhs of wire \PGA_2:Net_38\[465] = zero[2]
Removing Lhs of wire \PGA_2:Net_39\[466] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_enable\[474] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \ADC_SAR_Seq_2:cmp_vv_vv_MODGEN_1\[476] = \ADC_SAR_Seq_2:MODULE_1:g1:a0:xeq\[810]
Removing Rhs of wire \ADC_SAR_Seq_2:clock\[477] = \ADC_SAR_Seq_2:Net_3874\[710]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_5\[479] = \ADC_SAR_Seq_2:bSAR_SEQ:count_5\[677]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_4\[481] = \ADC_SAR_Seq_2:bSAR_SEQ:count_4\[678]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_3\[483] = \ADC_SAR_Seq_2:bSAR_SEQ:count_3\[679]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_2\[485] = \ADC_SAR_Seq_2:bSAR_SEQ:count_2\[680]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_1\[487] = \ADC_SAR_Seq_2:bSAR_SEQ:count_1\[681]
Removing Rhs of wire \ADC_SAR_Seq_2:ch_addr_0\[489] = \ADC_SAR_Seq_2:bSAR_SEQ:count_0\[682]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_0\[622] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_2\[623] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_1\[624] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_3\[625] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_1\[626] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vp_ctl_3\[627] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_0\[628] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:vn_ctl_2\[629] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:Net_188\[630] = \ADC_SAR_Seq_2:clock\[477]
Removing Lhs of wire \ADC_SAR_Seq_2:SAR:soc\[636] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:enable\[667] = \ADC_SAR_Seq_2:bSAR_SEQ:control_0\[668]
Removing Rhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:load_period\[669] = \ADC_SAR_Seq_2:bSAR_SEQ:control_1\[670]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_7\[683] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_6\[684] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_5\[685] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_4\[686] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_3\[687] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_2\[688] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_1\[689] = zero[2]
Removing Rhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:status_0\[690] = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_edge_detect_reg\[691]
Removing Rhs of wire Net_806[698] = \ADC_SAR_Seq_2:bSAR_SEQ:status_0\[690]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newa_5\[721] = \ADC_SAR_Seq_2:MODIN1_5\[722]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN1_5\[722] = \ADC_SAR_Seq_2:ch_addr_5\[479]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newa_4\[723] = \ADC_SAR_Seq_2:MODIN1_4\[724]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN1_4\[724] = \ADC_SAR_Seq_2:ch_addr_4\[481]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newa_3\[725] = \ADC_SAR_Seq_2:MODIN1_3\[726]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN1_3\[726] = \ADC_SAR_Seq_2:ch_addr_3\[483]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newa_2\[727] = \ADC_SAR_Seq_2:MODIN1_2\[728]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN1_2\[728] = \ADC_SAR_Seq_2:ch_addr_2\[485]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newa_1\[729] = \ADC_SAR_Seq_2:MODIN1_1\[730]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN1_1\[730] = \ADC_SAR_Seq_2:ch_addr_1\[487]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newa_0\[731] = \ADC_SAR_Seq_2:MODIN1_0\[732]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN1_0\[732] = \ADC_SAR_Seq_2:ch_addr_0\[489]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newb_5\[733] = \ADC_SAR_Seq_2:MODIN2_5\[734]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN2_5\[734] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\[478]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newb_4\[735] = \ADC_SAR_Seq_2:MODIN2_4\[736]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN2_4\[736] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\[480]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newb_3\[737] = \ADC_SAR_Seq_2:MODIN2_3\[738]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN2_3\[738] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\[482]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newb_2\[739] = \ADC_SAR_Seq_2:MODIN2_2\[740]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN2_2\[740] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\[484]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newb_1\[741] = \ADC_SAR_Seq_2:MODIN2_1\[742]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN2_1\[742] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\[486]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:newb_0\[743] = \ADC_SAR_Seq_2:MODIN2_0\[744]
Removing Lhs of wire \ADC_SAR_Seq_2:MODIN2_0\[744] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\[488]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:dataa_5\[745] = \ADC_SAR_Seq_2:ch_addr_5\[479]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:dataa_4\[746] = \ADC_SAR_Seq_2:ch_addr_4\[481]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:dataa_3\[747] = \ADC_SAR_Seq_2:ch_addr_3\[483]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:dataa_2\[748] = \ADC_SAR_Seq_2:ch_addr_2\[485]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:dataa_1\[749] = \ADC_SAR_Seq_2:ch_addr_1\[487]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:dataa_0\[750] = \ADC_SAR_Seq_2:ch_addr_0\[489]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:datab_5\[751] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\[478]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:datab_4\[752] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\[480]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:datab_3\[753] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\[482]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:datab_2\[754] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\[484]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:datab_1\[755] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\[486]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:datab_0\[756] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\[488]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:a_5\[757] = \ADC_SAR_Seq_2:ch_addr_5\[479]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:a_4\[758] = \ADC_SAR_Seq_2:ch_addr_4\[481]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:a_3\[759] = \ADC_SAR_Seq_2:ch_addr_3\[483]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:a_2\[760] = \ADC_SAR_Seq_2:ch_addr_2\[485]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:a_1\[761] = \ADC_SAR_Seq_2:ch_addr_1\[487]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:a_0\[762] = \ADC_SAR_Seq_2:ch_addr_0\[489]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:b_5\[763] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\[478]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:b_4\[764] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\[480]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:b_3\[765] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\[482]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:b_2\[766] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\[484]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:b_1\[767] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\[486]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:b_0\[768] = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\[488]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:aeqb_0\[775] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_0\[776] = \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_0\[774]
Removing Lhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eqi_0\[782] = \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_5\[781]
Removing Rhs of wire \ADC_SAR_Seq_2:MODULE_1:g1:a0:xeq\[810] = \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:aeqb_1\[783]
Removing Lhs of wire \PWM_2:Net_107\[823] = zero[2]
Removing Lhs of wire \PWM_2:Net_113\[824] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Rhs of wire Net_938[828] = \PWM_2:Net_57\[826]
Removing Lhs of wire Net_925[831] = zero[2]
Removing Lhs of wire tmpOE__Curr_control_net_0[835] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__pump_diode_net_0[841] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__osc_diode_net_0[847] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__seed_diode_net_0[853] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire tmpOE__SW2_net_0[859] = tmpOE__Diode_Pumpseite_net_0[53]
Removing Lhs of wire \VDAC8_1:Net_83\[865] = zero[2]
Removing Lhs of wire \VDAC8_1:Net_81\[866] = zero[2]
Removing Lhs of wire \VDAC8_1:Net_82\[867] = zero[2]
Removing Lhs of wire \Comp_4:clock\[872] = zero[2]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\\D\[876] = \ADC_SAR_Seq_2:ch_addr_5\[479]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\\D\[877] = \ADC_SAR_Seq_2:ch_addr_4\[481]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\\D\[878] = \ADC_SAR_Seq_2:ch_addr_3\[483]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\\D\[879] = \ADC_SAR_Seq_2:ch_addr_2\[485]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\\D\[880] = \ADC_SAR_Seq_2:ch_addr_1\[487]
Removing Lhs of wire \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\\D\[881] = \ADC_SAR_Seq_2:ch_addr_0\[489]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:nrq_edge_detect_reg\\D\[946] = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_edge_detect\[697]
Removing Lhs of wire \ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\\D\[948] = \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\[694]

------------------------------------------------------
Aliased 0 equations, 198 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for 'Seed2' (cost = 0):
Seed2 <= (not \Comp_2:Net_1\);

Note:  Expanding virtual equation for 'tmpOE__Diode_Pumpseite_net_0' (cost = 0):
tmpOE__Diode_Pumpseite_net_0 <=  ('1') ;

Note:  Expanding virtual equation for 'Seed1' (cost = 0):
Seed1 <= (not \Comp_3:Net_1\);

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for 'Net_943' (cost = 5):
Net_943 <= (Osc_err_low
	OR Temp_err
	OR not \Comp_3:Net_1\
	OR not \Comp_2:Net_1\
	OR Osc_err);

Note:  Expanding virtual equation for '\ADC_SAR_Seq_2:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq_2:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq_2:ch_addr_0\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (not \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\)
	OR (\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq_2:ch_addr_5\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq_2:ch_addr_4\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq_2:ch_addr_3\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq_2:ch_addr_2\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq_2:ch_addr_1\ and \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq_2:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 25 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Removing Lhs of wire \ADC_SAR_1:Net_188\[169] = \ADC_SAR_1:Net_376\[168]

------------------------------------------------------
Aliased 0 equations, 1 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp
Warp Program   : C:\Program Files\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -dcpsoc3 Laserschutzschaltung.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 0s.982ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.0.0.432, Family: PSoC3, Started at: Monday, 29 May 2017 14:29:10
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\Luggi\Documents\GitHub\laserschutzschaltung\Laserschutzschaltung.cydsn\Laserschutzschaltung.cyprj -d CY8C5868AXI-LP035 Laserschutzschaltung.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.031ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq_2:MODULE_1:g1:a0:gx:u0:gt_2\
Assigning clock Clock_1 to clock BUS_CLK because it is a pass-through
Assigning clock Clock_2 to clock BUS_CLK because it is a pass-through
Assigning clock USBUART_1_Clock_1 to clock BUS_CLK because it is a pass-through
Assigning clock ADC_SAR_Seq_2_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'Clock_5'. Fanout=1, Signal=Net_919
    Digital Clock 1: Automatic-assigning  clock 'Clock_3'. Fanout=1, Signal=Net_347
    Digital Clock 2: Automatic-assigning  clock 'ADC_DelSig_1_Ext_CP_Clk'. Fanout=1, Signal=\ADC_DelSig_1:Net_93\
    Digital Clock 3: Automatic-assigning  clock 'ADC_SAR_Seq_2_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq_2:clock\
    Digital Clock 4: Automatic-assigning  clock 'ADC_SAR_1_theACLK'. Fanout=1, Signal=\ADC_SAR_1:Net_376\
    Analog  Clock 0: Automatic-assigning  clock 'ADC_DelSig_1_theACLK'. Fanout=1, Signal=\ADC_DelSig_1:Net_488\
    Digital Clock 5: Automatic-assigning  clock 'Clock_4'. Fanout=1, Signal=Net_773
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ADC_SAR_Seq_2:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_2_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_2_IntClock, EnableOut: \ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq_2:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_2_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_2_IntClock, EnableOut: Constant 1
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = Diode_Pumpseite(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Diode_Pumpseite(0)__PA ,
            analog_term => Net_558 ,
            annotation => Net_543 ,
            pad => Diode_Pumpseite(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DAC_Out(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DAC_Out(0)__PA ,
            analog_term => Net_51 ,
            pad => DAC_Out(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Buzzer(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Buzzer(0)__PA ,
            input => Net_802 ,
            pad => Buzzer(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Diode_Seedseite(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Diode_Seedseite(0)__PA ,
            analog_term => Net_91 ,
            annotation => Net_548 ,
            pad => Diode_Seedseite(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Seed_ref(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Seed_ref(0)__PA ,
            analog_term => Net_93 ,
            annotation => Net_132 ,
            pad => Seed_ref(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pump_ref(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pump_ref(0)__PA ,
            analog_term => Net_69 ,
            annotation => Net_126 ,
            pad => Pump_ref(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(0)\__PA ,
            pad => \LCD:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(1)\__PA ,
            pad => \LCD:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(2)\__PA ,
            pad => \LCD:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(3)\__PA ,
            pad => \LCD:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(4)\__PA ,
            pad => \LCD:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(5)\__PA ,
            pad => \LCD:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD:LCDPort(6)\__PA ,
            pad => \LCD:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = DAC_PGA_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DAC_PGA_OUT(0)__PA ,
            analog_term => Net_308 ,
            pad => DAC_PGA_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DAC_Current(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DAC_Current(0)__PA ,
            analog_term => Net_302 ,
            annotation => Net_310 ,
            pad => DAC_Current(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Potentiometer(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Potentiometer(0)__PA ,
            analog_term => Net_951 ,
            pad => Potentiometer(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ );
        Properties:
        {
        }

    Pin : Name = temp_sens(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => temp_sens(0)__PA ,
            analog_term => Net_412 ,
            pad => temp_sens(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Fault(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: True
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: HIGH
            SIO Hyst: ENABLED
            SIO Vtrip: MULTIPLIER_0_4_OR_1
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE, SIO, HOTSWAP
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Fault(0)__PA ,
            input => Net_771 ,
            pad => Fault(0)_PAD );
        Properties:
        {
        }

    Pin : Name = \USBUART_1:Dm(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: USB_D_MINUS
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART_1:Dm(0)\__PA ,
            analog_term => \USBUART_1:Net_597\ ,
            pad => \USBUART_1:Dm(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \USBUART_1:Dp(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: HI_Z_ANALOG
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: USB_D_PLUS
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => \USBUART_1:Dp(0)\__PA ,
            analog_term => \USBUART_1:Net_1000\ ,
            pad => \USBUART_1:Dp(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = VUSB(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => VUSB(0)__PA ,
            fb => Net_522 ,
            pad => VUSB(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ADC_IN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ADC_IN(0)__PA ,
            analog_term => Net_616 ,
            annotation => Net_630 ,
            pad => ADC_IN(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Curr_control(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Curr_control(0)__PA ,
            input => Net_938 ,
            pad => Curr_control(0)_PAD );
        Properties:
        {
        }

    Pin : Name = pump_diode(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => pump_diode(0)__PA ,
            analog_term => Net_808 ,
            pad => pump_diode(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = osc_diode(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => osc_diode(0)__PA ,
            analog_term => Net_807 ,
            pad => osc_diode(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = seed_diode(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => seed_diode(0)__PA ,
            analog_term => Net_957 ,
            pad => seed_diode(0)_PAD ,
            input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ );
        Properties:
        {
        }

    Pin : Name = SW2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => SW2(0)__PA ,
            pad => SW2(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:ch_addr_5\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:ch_addr_4\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:ch_addr_3\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:ch_addr_2\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:ch_addr_1\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:ch_addr_1\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_2:ch_addr_0\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Seed2, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\Comp_2:Net_1\
        );
        Output = Seed2 (fanout=1)

    MacroCell: Name=Net_943, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Osc_err * \Comp_2:Net_1\ * !Temp_err * !Osc_err_low * 
              \Comp_3:Net_1\
        );
        Output = Net_943 (fanout=2)

    MacroCell: Name=Seed1, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\Comp_3:Net_1\
        );
        Output = Seed1 (fanout=1)

    MacroCell: Name=Net_771, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !cy_srff_1
        );
        Output = Net_771 (fanout=2)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:ch_addr_5\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:ch_addr_4\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:ch_addr_3\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:ch_addr_2\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_805 * !\ADC_SAR_Seq_2:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=__ZERO__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = __ZERO__ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=3)

    MacroCell: Name=cy_srff_1, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !Osc_err * \Comp_2:Net_1\ * !Temp_err * !Osc_err_low * 
              \Comp_3:Net_1\ * !cy_srff_1
            + Net_795
        );
        Output = cy_srff_1 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_806, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\
        );
        Output = Net_806 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_806
            + \ADC_SAR_Seq_2:Net_3935\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\USBUART_1:Vbus_ps:sts:sts_reg\
        PORT MAP (
            status_0 => Net_522_SYNCOUT );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True

    statuscell: Name =\Fault_Reg:sts:sts_reg\
        PORT MAP (
            status_5 => Temp_err ,
            status_4 => Osc_err ,
            status_3 => Seed2 ,
            status_2 => Seed1 ,
            status_1 => Net_943 ,
            status_0 => cy_srff_1 );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True

    statuscell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq_2:clock\ ,
            status_0 => Net_806 ,
            clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =VUSB(0)_SYNC
        PORT MAP (
            in => Net_522 ,
            out => Net_522_SYNCOUT ,
            clock => ClockBlock_BUS_CLK );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =\ADC_SAR_Seq_2:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq_2:nrq\ ,
            out => \ADC_SAR_Seq_2:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\Control_RS:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \Control_RS:control_7\ ,
            control_6 => \Control_RS:control_6\ ,
            control_5 => \Control_RS:control_5\ ,
            control_4 => \Control_RS:control_4\ ,
            control_3 => \Control_RS:control_3\ ,
            control_2 => \Control_RS:control_2\ ,
            control_1 => Temp_err ,
            control_0 => Net_795 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq_2:clock\ ,
            control_7 => \ADC_SAR_Seq_2:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq_2:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq_2:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq_2:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq_2:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq_2:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq_2:clock\ ,
            load => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq_2:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq_2:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq_2:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq_2:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq_2:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq_2:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq_2:ch_addr_0\ ,
            tc => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =DMA
        PORT MAP (
            dmareq => Net_449 ,
            termin => zero ,
            termout => Net_2 );
        Properties:
        {
            drq_type = "10"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_2:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq_2:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =isr
        PORT MAP (
            interrupt => Net_436 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =Fault_isr
        PORT MAP (
            interrupt => Net_943 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_449 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =PID_isr
        PORT MAP (
            interrupt => Net_437 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_DelSig_1:IRQ\
        PORT MAP (
            interrupt => Net_415 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:dp_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_4\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_4\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_3\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_2\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_1\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_0\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:bus_reset\
        PORT MAP (
            interrupt => \USBUART_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:arb_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:sof_int\
        PORT MAP (
            interrupt => Net_521 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_5\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_5\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\USBUART_1:ep_6\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_6\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_Seq_2:IRQ\
        PORT MAP (
            interrupt => Net_806 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    6 :    2 :    8 : 75.00 %
Analog Clocks                 :    1 :    3 :    4 : 25.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    1 :    0 :    1 : 100.00 %
Interrupts                    :   17 :   15 :   32 : 53.13 %
IO                            :   34 :   38 :   72 : 47.22 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    1 :    0 :    1 : 100.00 %
DMA Channels                  :    3 :   21 :   24 : 12.50 %
Timer                         :    3 :    1 :    4 : 75.00 %
UDB                           :      :      :      :        
  Macrocells                  :   83 :  109 :  192 : 43.23 %
  Unique P-terms              :   94 :  290 :  384 : 24.48 %
  Total P-terms               :   94 :      :      :        
  Datapath Cells              :    0 :   24 :   24 :  0.00 %
  Status Cells                :    5 :   19 :   24 : 20.83 %
    Status Registers          :    3 :      :      :        
    Sync Cells (x2)           :    1 :      :      :        
    Routed Count7 Load/Enable :    1 :      :      :        
  Control Cells               :    3 :   21 :   24 : 12.50 %
    Control Registers         :    2 :      :      :        
    Count7 Cells              :    1 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    4 :    0 :    4 : 100.00 %
Delta-Sigma ADC               :    1 :    0 :    1 : 100.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    2 :    0 :    2 : 100.00 %
Analog (SC/CT) Blocks         :    2 :    2 :    4 : 50.00 %
DAC                           :      :      :      :        
  VIDAC                       :    4 :    0 :    4 : 100.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.140ms
Tech Mapping phase: Elapsed time ==> 0s.234ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "\ADC_DelSig_1:Net_35\" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_813" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_815" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_816" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_818" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_820" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_821" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_823" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_825" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_826" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_828" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_830" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_831" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_833" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_835" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_836" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_838" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_840" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_841" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_843" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_845" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_846" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_848" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_850" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_851" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_853" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_855" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_856" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_858" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_860" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_861" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_863" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_865" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_866" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_868" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_870" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_871" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_873" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_875" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_876" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_878" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_880" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_881" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_883" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_885" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_886" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_887" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_888" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_889" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_890" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_891" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_892" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_893" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_894" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_895" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_896" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_897" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_898" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_899" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_900" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_901" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_4@[IOP=(0)][IoId=(4)] : ADC_IN(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Buzzer(0) (fixed)
IO_0@[IOP=(6)][IoId=(0)] : Curr_control(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : DAC_Current(0) (fixed)
IO_5@[IOP=(4)][IoId=(5)] : DAC_Out(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : DAC_PGA_OUT(0) (fixed)
IO_1@[IOP=(4)][IoId=(1)] : Diode_Pumpseite(0) (fixed)
IO_0@[IOP=(4)][IoId=(0)] : Diode_Seedseite(0) (fixed)
[IOP=(12)][IoId=(2)] : Fault(0) (fixed)
IO_2@[IOP=(12)][IoId=(2)] : Fault_SIOREF_0 (fixed)
IO_5@[IOP=(6)][IoId=(5)] : Potentiometer(0) (fixed)
IO_3@[IOP=(4)][IoId=(3)] : Pump_ref(0) (fixed)
IO_1@[IOP=(6)][IoId=(1)] : SW2(0) (fixed)
IO_2@[IOP=(4)][IoId=(2)] : Seed_ref(0) (fixed)
IO_7@[IOP=(6)][IoId=(7)] : VUSB(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART_1:Dp(0)\ (fixed)
IO_3@[IOP=(5)][IoId=(3)] : osc_diode(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : pump_diode(0) (fixed)
IO_7@[IOP=(5)][IoId=(7)] : seed_diode(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : temp_sens(0) (fixed)
DSM[0]@[FFB(DSM,0)] : \ADC_DelSig_1:DSM\
Vref[6]@[FFB(Vref,6)] : \ADC_DelSig_1:vRef_2\
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_1:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_1:vRef_Vdda_1\
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq_2:SAR:ADC_SAR\
Comparator[3]@[FFB(Comparator,3)] : \Comp_1:ctComp\
Comparator[2]@[FFB(Comparator,2)] : \Comp_2:ctComp\
Comparator[1]@[FFB(Comparator,1)] : \Comp_3:ctComp\
Comparator[0]@[FFB(Comparator,0)] : \Comp_4:ctComp\
VIDAC[3]@[FFB(VIDAC,3)] : \IDAC8_1:viDAC8\
VIDAC[1]@[FFB(VIDAC,1)] : \IDAC8_2:viDAC8\
SC[0]@[FFB(SC,0)] : \PGA_1:SC\
SC[2]@[FFB(SC,2)] : \PGA_2:SC\
USB[0]@[FFB(USB,0)] : \USBUART_1:USB\
VIDAC[0]@[FFB(VIDAC,0)] : \VDAC8:viDAC8\
VIDAC[2]@[FFB(VIDAC,2)] : \VDAC8_1:viDAC8\
Log: apr.M0058: The analog placement iterative improvement is 39% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 65% done. (App=cydsfit)
Analog Placement Results:
IO_4@[IOP=(0)][IoId=(4)] : ADC_IN(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Buzzer(0) (fixed)
IO_0@[IOP=(6)][IoId=(0)] : Curr_control(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : DAC_Current(0) (fixed)
IO_5@[IOP=(4)][IoId=(5)] : DAC_Out(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : DAC_PGA_OUT(0) (fixed)
IO_1@[IOP=(4)][IoId=(1)] : Diode_Pumpseite(0) (fixed)
IO_0@[IOP=(4)][IoId=(0)] : Diode_Seedseite(0) (fixed)
[IOP=(12)][IoId=(2)] : Fault(0) (fixed)
IO_2@[IOP=(12)][IoId=(2)] : Fault_SIOREF_0 (fixed)
IO_5@[IOP=(6)][IoId=(5)] : Potentiometer(0) (fixed)
IO_3@[IOP=(4)][IoId=(3)] : Pump_ref(0) (fixed)
IO_1@[IOP=(6)][IoId=(1)] : SW2(0) (fixed)
IO_2@[IOP=(4)][IoId=(2)] : Seed_ref(0) (fixed)
IO_7@[IOP=(6)][IoId=(7)] : VUSB(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD:LCDPort(6)\ (fixed)
IO_7@[IOP=(15)][IoId=(7)] : \USBUART_1:Dm(0)\ (fixed)
IO_6@[IOP=(15)][IoId=(6)] : \USBUART_1:Dp(0)\ (fixed)
IO_3@[IOP=(5)][IoId=(3)] : osc_diode(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : pump_diode(0) (fixed)
IO_7@[IOP=(5)][IoId=(7)] : seed_diode(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : temp_sens(0) (fixed)
DSM[0]@[FFB(DSM,0)] : \ADC_DelSig_1:DSM\
Vref[6]@[FFB(Vref,6)] : \ADC_DelSig_1:vRef_2\
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_1:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_1:vRef_Vdda_1\
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq_2:SAR:ADC_SAR\
Comparator[2]@[FFB(Comparator,2)] : \Comp_1:ctComp\
Comparator[3]@[FFB(Comparator,3)] : \Comp_2:ctComp\
Comparator[0]@[FFB(Comparator,0)] : \Comp_3:ctComp\
Comparator[1]@[FFB(Comparator,1)] : \Comp_4:ctComp\
VIDAC[1]@[FFB(VIDAC,1)] : \IDAC8_1:viDAC8\
VIDAC[0]@[FFB(VIDAC,0)] : \IDAC8_2:viDAC8\
SC[0]@[FFB(SC,0)] : \PGA_1:SC\
SC[2]@[FFB(SC,2)] : \PGA_2:SC\
USB[0]@[FFB(USB,0)] : \USBUART_1:USB\
VIDAC[2]@[FFB(VIDAC,2)] : \VDAC8:viDAC8\
VIDAC[3]@[FFB(VIDAC,3)] : \VDAC8_1:viDAC8\

Analog Placement phase: Elapsed time ==> 4s.414ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Net "Net_616" overuses wire "AGL[4]"
Net "Net_51" overuses wire "comp2- Wire"
Net "Net_51" overuses wire "AGL[5]"
Net "Net_558" overuses wire "comp2- Wire"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_558" overuses wire "AGR[5]"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_91" overuses wire "AGL[4]"
Net "Net_412" overuses wire "AGL[4]"
Net "Net_966" overuses wire "AGR[5]"
Net "Net_51" overuses wire "comp2- Wire"
Net "Net_51" overuses wire "AGL[5]"
Net "Net_558" overuses wire "comp2- Wire"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_558" overuses wire "AGR[4]"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_412" overuses wire "AGR[4]"
Net "Net_412" overuses wire "SAR vplus wire R"
Net "Net_412" overuses wire "Vssa Wire"
Net "AmuxNose::\ADC_DelSig_1:AMux\" overuses wire "Vssa Wire"
Net "AmuxEye::\ADC_SAR_Seq_2:AMuxHw_2\" overuses wire "SAR vplus wire R"
Net "AmuxEye::\ADC_SAR_Seq_2:AMuxHw_2\" overuses wire "SAR vplus wire R"
Net "Net_616" overuses wire "amuxbusL"
Net "Net_558" overuses wire "comp0- Wire"
Net "Net_558" overuses wire "amuxbusL"
Net "Net_558" overuses wire "amuxbusL"
Net "Net_93" overuses wire "comp0- Wire"
Net "Net_412" overuses wire "SAR vminus wire R"
Net "Net_412" overuses wire "Vssa Wire"
Net "\ADC_SAR_Seq_2:SAR:Net_126\" overuses wire "SAR vminus wire R"
Net "AmuxNose::\ADC_DelSig_1:AMux\" overuses wire "Vssa Wire"
Net "Net_616" overuses wire "AGL[4]"
Net "Net_308" overuses wire "AGR[6]"
Net "Net_91" overuses wire "AGL[4]"
Net "Net_93" overuses wire "AGL[6]"
Net "Net_412" overuses wire "AGR[6]"
Net "Net_412" overuses wire "AGL[6]"
Net "Net_616" overuses wire "AGL[4]"
Net "Net_91" overuses wire "AGL[4]"
Net "Net_412" overuses wire "SAR vminus wire R"
Net "Net_412" overuses wire "Vssa Wire"
Net "\ADC_SAR_Seq_2:SAR:Net_126\" overuses wire "SAR vminus wire R"
Net "AmuxNose::\ADC_DelSig_1:AMux\" overuses wire "Vssa Wire"
Net "Net_616" overuses wire "AGL[7]"
Net "Net_91" overuses wire "AGL[4]"
Net "Net_69" overuses wire "AGL[7]"
Net "Net_412" overuses wire "AGL[4]"
Net "Net_558" overuses wire "amuxbusL"
Net "Net_558" overuses wire "amuxbusL"
Net "Net_91" overuses wire "amuxbusL"
Net "Net_51" overuses wire "comp2- Wire"
Net "Net_51" overuses wire "AGL[5]"
Net "Net_558" overuses wire "comp2- Wire"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_51" overuses wire "AGL[5]"
Net "Net_558" overuses wire "amuxbusL"
Net "Net_558" overuses wire "AGL[5]"
Net "Net_91" overuses wire "amuxbusL"
Net "Net_558" overuses wire "AGL[2]"
Net "Net_91" overuses wire "AGL[4]"
Net "Net_412" overuses wire "AGL[4]"
Net "Net_965" overuses wire "AGL[2]"
Net "Net_412" overuses wire "v3 Wire"
Net "Net_966" overuses wire "v3 Wire"
Net "Net_412" overuses wire "sc2 out Wire"
Net "Net_965" overuses wire "sc2 out Wire"
Net "Net_412" overuses wire "SAR vplus wire R"
Net "Net_412" overuses wire "Vssa Wire"
Net "AmuxNose::\ADC_DelSig_1:AMux\" overuses wire "Vssa Wire"
Net "AmuxEye::\ADC_SAR_Seq_2:AMuxHw_2\" overuses wire "SAR vplus wire R"
Net "AmuxEye::\ADC_SAR_Seq_2:AMuxHw_2\" overuses wire "SAR vplus wire R"
Net "Net_308" overuses wire "sc0 out Wire"
Net "Net_308" overuses wire "sc1vin2sc0out Sw__0b"
Net "Net_308" overuses wire "sc1 Vin Wire"
Net "Net_412" overuses wire "sc1 Vin Wire"
Net "Net_412" overuses wire "sc1vin2sc0out Sw__0b"
Net "Net_412" overuses wire "sc0 out Wire"
Net "Net_412" overuses wire "sc2 out Wire"
Net "Net_965" overuses wire "sc2 out Wire"
Analog Routing phase: Elapsed time ==> 0s.187ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_DelSig_1:Net_20\ {
    dsm_0_vminus
  }
  Net: \ADC_DelSig_1:Net_244\ {
    common_vssa
  }
  Net: \ADC_DelSig_1:Net_35\ {
  }
  Net: \ADC_SAR_Seq_2:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_807 {
    p5_3
  }
  Net: Net_808 {
    p1_7
  }
  Net: Net_957 {
    p5_7
  }
  Net: Net_951 {
    p6_5
  }
  Net: Net_813 {
  }
  Net: Net_815 {
  }
  Net: Net_816 {
  }
  Net: Net_818 {
  }
  Net: Net_820 {
  }
  Net: Net_821 {
  }
  Net: Net_823 {
  }
  Net: Net_825 {
  }
  Net: Net_826 {
  }
  Net: Net_828 {
  }
  Net: Net_830 {
  }
  Net: Net_831 {
  }
  Net: Net_833 {
  }
  Net: Net_835 {
  }
  Net: Net_836 {
  }
  Net: Net_838 {
  }
  Net: Net_840 {
  }
  Net: Net_841 {
  }
  Net: Net_843 {
  }
  Net: Net_845 {
  }
  Net: Net_846 {
  }
  Net: Net_848 {
  }
  Net: Net_850 {
  }
  Net: Net_851 {
  }
  Net: Net_853 {
  }
  Net: Net_855 {
  }
  Net: Net_856 {
  }
  Net: Net_858 {
  }
  Net: Net_860 {
  }
  Net: Net_861 {
  }
  Net: Net_863 {
  }
  Net: Net_865 {
  }
  Net: Net_866 {
  }
  Net: Net_868 {
  }
  Net: Net_870 {
  }
  Net: Net_871 {
  }
  Net: Net_873 {
  }
  Net: Net_875 {
  }
  Net: Net_876 {
  }
  Net: Net_878 {
  }
  Net: Net_880 {
  }
  Net: Net_881 {
  }
  Net: Net_883 {
  }
  Net: Net_885 {
  }
  Net: Net_886 {
  }
  Net: Net_887 {
  }
  Net: Net_888 {
  }
  Net: Net_889 {
  }
  Net: Net_890 {
  }
  Net: Net_891 {
  }
  Net: Net_892 {
  }
  Net: Net_893 {
  }
  Net: Net_894 {
  }
  Net: Net_895 {
  }
  Net: Net_896 {
  }
  Net: Net_897 {
  }
  Net: Net_898 {
  }
  Net: Net_899 {
  }
  Net: Net_900 {
  }
  Net: Net_901 {
  }
  Net: Net_616 {
    sc_2_vin
    abusl1_x_sc_2_vin
    abusl1
    abusl1_x_opamp_2_vplus
    opamp_2_vplus
    opamp_2_vplus_x_p0_4
    p0_4
  }
  Net: Net_302 {
    sc_0_vin
    agl0_x_sc_0_vin
    agl0
    agl0_x_agr0
    agr0
    agr0_x_vidac_1_iout
    vidac_1_iout
    agl0_x_vidac_0_iout
    vidac_0_iout
    p3_0_x_vidac_1_iout
    p3_0
  }
  Net: Net_51 {
    vidac_2_vout
    agl5_x_vidac_2_vout
    agl5
    agl5_x_p4_5
    p4_5
    abusl2_x_vidac_2_vout
    abusl2
    abusl2_x_comp_2_vminus
    comp_2_vminus
  }
  Net: Net_308 {
    sc_0_vout
    sc_0_vout_x_sc_1_vin
    sc_1_vin
    agr6_x_sc_1_vin
    agr6
    agr6_x_p3_2
    p3_2
  }
  Net: Net_558 {
    comp_1_vminus
    amuxbusr_x_comp_1_vminus
    amuxbusr
    amuxbusl_x_amuxbusr
    amuxbusl
    amuxbusl_x_p4_1
    p4_1
    amuxbusl_x_comp_2_vplus
    comp_2_vplus
    amuxbusr_x_comp_3_vplus
    comp_3_vplus
  }
  Net: Net_91 {
    comp_0_vplus
    agl4_x_comp_0_vplus
    agl4
    agl4_x_p4_0
    p4_0
  }
  Net: Net_69 {
    comp_3_vminus
    agr7_x_comp_3_vminus
    agr7
    agl7_x_agr7
    agl7
    agl7_x_p4_3
    p4_3
  }
  Net: Net_93 {
    comp_0_vminus
    agl6_x_comp_0_vminus
    agl6
    agl6_x_p4_2
    p4_2
  }
  Net: Net_412 {
    p3_4
    agr4_x_p3_4
    agr4
    agr4_x_sc_3_vin
    sc_3_vin
    agr2_x_sc_3_vin
    agr2
    agl2_x_agr2
    agl2
    agl2_x_dsm_0_vplus
    dsm_0_vplus
  }
  Net: \ADC_DelSig_1:Net_249\ {
  }
  Net: \ADC_DelSig_1:Net_257\ {
  }
  Net: \ADC_DelSig_1:Net_109\ {
  }
  Net: \ADC_DelSig_1:Net_34\ {
  }
  Net: Net_965 {
    sc_2_vout
    abusl0_x_sc_2_vout
    abusl0
    abusl0_x_sar_0_vplus
    sar_0_vplus
  }
  Net: \ADC_SAR_1:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_1:Net_209\ {
  }
  Net: \ADC_SAR_1:Net_235\ {
    sar_1_vref
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: \ADC_SAR_Seq_2:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_SAR_Seq_2:SAR:Net_209\ {
  }
  Net: Net_966 {
    vidac_3_vout
    agr5_x_vidac_3_vout
    agr5
    agr5_x_comp_1_vplus
    comp_1_vplus
  }
  Net: \IDAC8_1:Net_124\ {
  }
  Net: \IDAC8_2:Net_124\ {
  }
  Net: \PGA_1:Net_17\ {
  }
  Net: \PGA_2:Net_17\ {
  }
  Net: \VDAC8:Net_77\ {
  }
  Net: \VDAC8_1:Net_77\ {
  }
  Net: AmuxNet::\ADC_DelSig_1:AMux\ {
    dsm_0_vminus
    dsm_0_vminus_x_dsm_0_vminus_vssa
    dsm_0_vminus_vssa
    common_vssa
  }
  Net: AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\ {
    sar_1_vplus
    agr1_x_sar_1_vplus
    agr1
    agl1_x_agr1
    agl1
    agl1_x_p6_5
    agr3_x_sar_1_vplus
    agr3
    agr3_x_p5_3
    agr3_x_p1_7
    agr3_x_p5_7
    p6_5
    p5_3
    p1_7
    p5_7
  }
}
Map of item to net {
  sc_2_vin                                         -> Net_616
  abusl1_x_sc_2_vin                                -> Net_616
  abusl1                                           -> Net_616
  abusl1_x_opamp_2_vplus                           -> Net_616
  opamp_2_vplus                                    -> Net_616
  opamp_2_vplus_x_p0_4                             -> Net_616
  p0_4                                             -> Net_616
  sc_0_vin                                         -> Net_302
  agl0_x_sc_0_vin                                  -> Net_302
  agl0                                             -> Net_302
  agl0_x_agr0                                      -> Net_302
  agr0                                             -> Net_302
  agr0_x_vidac_1_iout                              -> Net_302
  vidac_1_iout                                     -> Net_302
  agl0_x_vidac_0_iout                              -> Net_302
  vidac_0_iout                                     -> Net_302
  p3_0_x_vidac_1_iout                              -> Net_302
  p3_0                                             -> Net_302
  vidac_2_vout                                     -> Net_51
  agl5_x_vidac_2_vout                              -> Net_51
  agl5                                             -> Net_51
  agl5_x_p4_5                                      -> Net_51
  p4_5                                             -> Net_51
  abusl2_x_vidac_2_vout                            -> Net_51
  abusl2                                           -> Net_51
  abusl2_x_comp_2_vminus                           -> Net_51
  comp_2_vminus                                    -> Net_51
  sc_0_vout                                        -> Net_308
  sc_0_vout_x_sc_1_vin                             -> Net_308
  sc_1_vin                                         -> Net_308
  agr6_x_sc_1_vin                                  -> Net_308
  agr6                                             -> Net_308
  agr6_x_p3_2                                      -> Net_308
  p3_2                                             -> Net_308
  comp_1_vminus                                    -> Net_558
  amuxbusr_x_comp_1_vminus                         -> Net_558
  amuxbusr                                         -> Net_558
  amuxbusl_x_amuxbusr                              -> Net_558
  amuxbusl                                         -> Net_558
  amuxbusl_x_p4_1                                  -> Net_558
  p4_1                                             -> Net_558
  amuxbusl_x_comp_2_vplus                          -> Net_558
  comp_2_vplus                                     -> Net_558
  amuxbusr_x_comp_3_vplus                          -> Net_558
  comp_3_vplus                                     -> Net_558
  comp_0_vplus                                     -> Net_91
  agl4_x_comp_0_vplus                              -> Net_91
  agl4                                             -> Net_91
  agl4_x_p4_0                                      -> Net_91
  p4_0                                             -> Net_91
  comp_3_vminus                                    -> Net_69
  agr7_x_comp_3_vminus                             -> Net_69
  agr7                                             -> Net_69
  agl7_x_agr7                                      -> Net_69
  agl7                                             -> Net_69
  agl7_x_p4_3                                      -> Net_69
  p4_3                                             -> Net_69
  comp_0_vminus                                    -> Net_93
  agl6_x_comp_0_vminus                             -> Net_93
  agl6                                             -> Net_93
  agl6_x_p4_2                                      -> Net_93
  p4_2                                             -> Net_93
  p3_4                                             -> Net_412
  agr4_x_p3_4                                      -> Net_412
  agr4                                             -> Net_412
  agr4_x_sc_3_vin                                  -> Net_412
  sc_3_vin                                         -> Net_412
  agr2_x_sc_3_vin                                  -> Net_412
  agr2                                             -> Net_412
  agl2_x_agr2                                      -> Net_412
  agl2                                             -> Net_412
  agl2_x_dsm_0_vplus                               -> Net_412
  dsm_0_vplus                                      -> Net_412
  sc_2_vout                                        -> Net_965
  abusl0_x_sc_2_vout                               -> Net_965
  abusl0                                           -> Net_965
  abusl0_x_sar_0_vplus                             -> Net_965
  sar_0_vplus                                      -> Net_965
  sar_0_vrefhi                                     -> \ADC_SAR_1:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_1:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_1:Net_126\
  sar_1_vref                                       -> \ADC_SAR_1:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ADC_SAR_1:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ADC_SAR_1:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ADC_SAR_1:Net_235\
  common_sar_vref_vdda/2                           -> \ADC_SAR_1:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_SAR_1:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_SAR_1:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_SAR_1:Net_235\
  sar_0_vref                                       -> \ADC_SAR_1:Net_235\
  sar_1_vrefhi                                     -> \ADC_SAR_Seq_2:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_SAR_Seq_2:SAR:Net_126\
  sar_1_vminus                                     -> \ADC_SAR_Seq_2:SAR:Net_126\
  vidac_3_vout                                     -> Net_966
  agr5_x_vidac_3_vout                              -> Net_966
  agr5                                             -> Net_966
  agr5_x_comp_1_vplus                              -> Net_966
  comp_1_vplus                                     -> Net_966
  dsm_0_vminus                                     -> \ADC_DelSig_1:Net_20\
  common_vssa                                      -> \ADC_DelSig_1:Net_244\
  sar_1_vplus                                      -> \ADC_SAR_Seq_2:Net_2803\
  p5_3                                             -> Net_807
  p1_7                                             -> Net_808
  p5_7                                             -> Net_957
  p6_5                                             -> Net_951
  dsm_0_vminus_x_dsm_0_vminus_vssa                 -> AmuxNet::\ADC_DelSig_1:AMux\
  dsm_0_vminus_vssa                                -> AmuxNet::\ADC_DelSig_1:AMux\
  agr1_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr1                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agl1_x_agr1                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agl1                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agl1_x_p6_5                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr3_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr3                                             -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr3_x_p5_3                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr3_x_p1_7                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
  agr3_x_p5_7                                      -> AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_DelSig_1:AMux\ {
     Mouth: \ADC_DelSig_1:Net_20\
     Guts:  AmuxNet::\ADC_DelSig_1:AMux\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   \ADC_DelSig_1:Net_244\
      Outer: dsm_0_vminus_x_dsm_0_vminus_vssa
      Inner: __open__
      Path {
        common_vssa
        dsm_0_vminus_vssa
        dsm_0_vminus_x_dsm_0_vminus_vssa
        dsm_0_vminus
      }
    }
    Arm: 1 {
      Net:   \ADC_DelSig_1:Net_35\
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
  Mux: \ADC_SAR_Seq_2:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq_2:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq_2:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_807
      Outer: agr3_x_p5_3
      Inner: __open__
      Path {
        p5_3
        agr3_x_p5_3
        agr3
        agr3_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_808
      Outer: agr3_x_p1_7
      Inner: __open__
      Path {
        p1_7
        agr3_x_p1_7
        agr3
        agr3_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_957
      Outer: agr3_x_p5_7
      Inner: __open__
      Path {
        p5_7
        agr3_x_p5_7
        agr3
        agr3_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 3 {
      Net:   Net_951
      Outer: agl1_x_p6_5
      Inner: agr1_x_sar_1_vplus
      Path {
        p6_5
        agl1_x_p6_5
        agl1
        agl1_x_agr1
        agr1
        agr1_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 4 {
      Net:   Net_813
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_815
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_816
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_818
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_820
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_821
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_823
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_825
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_826
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_828
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_830
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_831
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_833
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_835
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_836
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_838
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_840
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_841
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_843
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_845
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_846
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_848
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_850
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_851
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_853
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_855
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_856
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_858
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_860
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_861
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_863
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_865
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_866
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_868
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_870
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_871
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_873
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_875
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_876
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_878
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_880
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_881
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_883
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_885
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_886
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_887
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_888
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_889
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_890
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_891
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_892
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_893
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_894
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_895
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_896
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_897
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_898
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_899
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_900
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_901
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.031ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.0 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   23 :   25 :   48 :  47.92%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.48
                   Pterms :            4.09
               Macrocells :            3.61
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.249ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         13 :       7.38 :       6.38
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\USBUART_1:Vbus_ps:sts:sts_reg\
    PORT MAP (
        status_0 => Net_522_SYNCOUT );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_805 * !\ADC_SAR_Seq_2:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq_2:clock\ ,
        control_7 => \ADC_SAR_Seq_2:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq_2:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq_2:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq_2:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq_2:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq_2:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_3\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_1\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_4\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq_2:clock\ ,
        load => \ADC_SAR_Seq_2:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq_2:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq_2:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq_2:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq_2:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq_2:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq_2:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq_2:ch_addr_0\ ,
        tc => \ADC_SAR_Seq_2:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:ch_addr_5\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:ch_addr_4\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:ch_addr_3\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:ch_addr_2\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:ch_addr_1\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:ch_addr_1\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq_2:ch_addr_0\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq_2:ch_addr_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=__ZERO__, Mode=(Combinatorial) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = __ZERO__ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,3)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=1][MC=3]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:ch_addr_5\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:ch_addr_4\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:ch_addr_3\
            + !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:ch_addr_2\
            + \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_2\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:ch_addr_5\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =VUSB(0)_SYNC
    PORT MAP (
        in => Net_522 ,
        out => Net_522_SYNCOUT ,
        clock => ClockBlock_BUS_CLK );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

synccell: Name =\ADC_SAR_Seq_2:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq_2:nrq\ ,
        out => \ADC_SAR_Seq_2:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq_2:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=10, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=cy_srff_1, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !Osc_err * \Comp_2:Net_1\ * !Temp_err * !Osc_err_low * 
              \Comp_3:Net_1\ * !cy_srff_1
            + Net_795
        );
        Output = cy_srff_1 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Seed2, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\Comp_2:Net_1\
        );
        Output = Seed2 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_943, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Osc_err * \Comp_2:Net_1\ * !Temp_err * !Osc_err_low * 
              \Comp_3:Net_1\
        );
        Output = Net_943 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_806
            + \ADC_SAR_Seq_2:Net_3935\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=4, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_806, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\
        );
        Output = Net_806 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq_2:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq_2:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq_2:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_771, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !cy_srff_1
        );
        Output = Net_771 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Seed1, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\Comp_3:Net_1\
        );
        Output = Seed1 (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\Fault_Reg:sts:sts_reg\
    PORT MAP (
        status_5 => Temp_err ,
        status_4 => Osc_err ,
        status_3 => Seed2 ,
        status_2 => Seed1 ,
        status_1 => Net_943 ,
        status_0 => cy_srff_1 );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

controlcell: Name =\Control_RS:Sync:ctrl_reg\
    PORT MAP (
        control_7 => \Control_RS:control_7\ ,
        control_6 => \Control_RS:control_6\ ,
        control_5 => \Control_RS:control_5\ ,
        control_4 => \Control_RS:control_4\ ,
        control_3 => \Control_RS:control_3\ ,
        control_2 => \Control_RS:control_2\ ,
        control_1 => Temp_err ,
        control_0 => Net_795 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

UDB [UDB=(2,1)] is empty.
UDB [UDB=(2,2)] is empty.
UDB [UDB=(2,3)] is empty.
UDB [UDB=(2,4)] is empty.
UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] contents:
statuscell: Name =\ADC_SAR_Seq_2:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq_2:clock\ ,
        status_0 => Net_806 ,
        clk_en => \ADC_SAR_Seq_2:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq_2:bSAR_SEQ:enable\)

UDB [UDB=(3,1)] is empty.
UDB [UDB=(3,2)] is empty.
UDB [UDB=(3,3)] is empty.
UDB [UDB=(3,4)] is empty.
UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=1, #inputs=0, #pterms=0
{
    [McSlotId=0]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =Fault_isr
        PORT MAP (
            interrupt => Net_943 );
        Properties:
        {
            int_type = "00"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_449 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\ADC_SAR_Seq_2:IRQ\
        PORT MAP (
            interrupt => Net_806 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(3)] 
    interrupt: Name =\USBUART_1:ep_1\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_1\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(4)] 
    interrupt: Name =\USBUART_1:ep_2\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_2\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =\USBUART_1:ep_3\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_3\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(6)] 
    interrupt: Name =\USBUART_1:ep_4\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_4\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(7)] 
    interrupt: Name =\USBUART_1:ep_5\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_5\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(8)] 
    interrupt: Name =\USBUART_1:ep_6\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_6\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(12)] 
    interrupt: Name =\USBUART_1:dp_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1010\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(17)] 
    interrupt: Name =PID_isr
        PORT MAP (
            interrupt => Net_437 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(21)] 
    interrupt: Name =\USBUART_1:sof_int\
        PORT MAP (
            interrupt => Net_521 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(22)] 
    interrupt: Name =\USBUART_1:arb_int\
        PORT MAP (
            interrupt => \USBUART_1:Net_1889\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(23)] 
    interrupt: Name =\USBUART_1:bus_reset\
        PORT MAP (
            interrupt => \USBUART_1:Net_1876\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(24)] 
    interrupt: Name =\USBUART_1:ep_0\
        PORT MAP (
            interrupt => \USBUART_1:ep_int_0\ );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(28)] 
    interrupt: Name =isr
        PORT MAP (
            interrupt => Net_436 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(29)] 
    interrupt: Name =\ADC_DelSig_1:IRQ\
        PORT MAP (
            interrupt => Net_415 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =DMA
        PORT MAP (
            dmareq => Net_449 ,
            termin => zero ,
            termout => Net_2 );
        Properties:
        {
            drq_type = "10"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq_2:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(2)] 
    drqcell: Name =\ADC_SAR_Seq_2:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq_2:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq_2:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=4]: 
Pin : Name = ADC_IN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => ADC_IN(0)__PA ,
        analog_term => Net_616 ,
        annotation => Net_630 ,
        pad => ADC_IN(0)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=7]: 
Pin : Name = pump_diode(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => pump_diode(0)__PA ,
        analog_term => Net_808 ,
        pad => pump_diode(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=0]: 
Pin : Name = \LCD:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(0)\__PA ,
        pad => \LCD:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \LCD:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(1)\__PA ,
        pad => \LCD:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \LCD:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(2)\__PA ,
        pad => \LCD:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \LCD:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(3)\__PA ,
        pad => \LCD:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \LCD:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(4)\__PA ,
        pad => \LCD:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \LCD:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(5)\__PA ,
        pad => \LCD:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \LCD:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD:LCDPort(6)\__PA ,
        pad => \LCD:LCDPort(6)_PAD\ );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=0]: 
Pin : Name = DAC_Current(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DAC_Current(0)__PA ,
        analog_term => Net_302 ,
        annotation => Net_310 ,
        pad => DAC_Current(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = DAC_PGA_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DAC_PGA_OUT(0)__PA ,
        analog_term => Net_308 ,
        pad => DAC_PGA_OUT(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = temp_sens(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => temp_sens(0)__PA ,
        analog_term => Net_412 ,
        pad => temp_sens(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Buzzer(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Buzzer(0)__PA ,
        input => Net_802 ,
        pad => Buzzer(0)_PAD );
    Properties:
    {
    }

Port 4 contains the following IO cells:
[IoId=0]: 
Pin : Name = Diode_Seedseite(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Diode_Seedseite(0)__PA ,
        analog_term => Net_91 ,
        annotation => Net_548 ,
        pad => Diode_Seedseite(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = Diode_Pumpseite(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Diode_Pumpseite(0)__PA ,
        analog_term => Net_558 ,
        annotation => Net_543 ,
        pad => Diode_Pumpseite(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = Seed_ref(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Seed_ref(0)__PA ,
        analog_term => Net_93 ,
        annotation => Net_132 ,
        pad => Seed_ref(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = Pump_ref(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pump_ref(0)__PA ,
        analog_term => Net_69 ,
        annotation => Net_126 ,
        pad => Pump_ref(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = DAC_Out(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DAC_Out(0)__PA ,
        analog_term => Net_51 ,
        pad => DAC_Out(0)_PAD );
    Properties:
    {
    }

Port 5 contains the following IO cells:
[IoId=3]: 
Pin : Name = osc_diode(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => osc_diode(0)__PA ,
        analog_term => Net_807 ,
        pad => osc_diode(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = seed_diode(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => seed_diode(0)__PA ,
        analog_term => Net_957 ,
        pad => seed_diode(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

Port 6 contains the following IO cells:
[IoId=0]: 
Pin : Name = Curr_control(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Curr_control(0)__PA ,
        input => Net_938 ,
        pad => Curr_control(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = SW2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => SW2(0)__PA ,
        pad => SW2(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Potentiometer(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Potentiometer(0)__PA ,
        analog_term => Net_951 ,
        pad => Potentiometer(0)_PAD ,
        input => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = VUSB(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => VUSB(0)__PA ,
        fb => Net_522 ,
        pad => VUSB(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=2]: 
Pin : Name = Fault(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: True
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: HIGH
        SIO Hyst: ENABLED
        SIO Vtrip: MULTIPLIER_0_4_OR_1
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE, SIO, HOTSWAP
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Fault(0)__PA ,
        input => Net_771 ,
        pad => Fault(0)_PAD );
    Properties:
    {
    }

Port 15 generates interrupt for logical port:
    logicalport: Name =\USBUART_1:Dp\
        PORT MAP (
            in_clock_en => tmpOE__Diode_Pumpseite_net_0 ,
            in_reset => zero ,
            out_clock_en => tmpOE__Diode_Pumpseite_net_0 ,
            out_reset => zero ,
            interrupt => \USBUART_1:Net_1010\ ,
            in_clock => ClockBlock_BUS_CLK );
        Properties:
        {
            drive_mode = "000"
            ibuf_enabled = "0"
            id = "2b269b96-47a4-4e9a-937e-76d4080bb211/618a72fc-5ddd-4df5-958f-a3d55102db42"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "1"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=6]: 
Pin : Name = \USBUART_1:Dp(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: HI_Z_ANALOG
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: USB_D_PLUS
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART_1:Dp(0)\__PA ,
        analog_term => \USBUART_1:Net_1000\ ,
        pad => \USBUART_1:Dp(0)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = \USBUART_1:Dm(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: USB_D_MINUS
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \USBUART_1:Dm(0)\__PA ,
        analog_term => \USBUART_1:Net_597\ ,
        pad => \USBUART_1:Dm(0)_PAD\ );
    Properties:
    {
    }

ARM group 0: empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => Net_919 ,
            dclk_0 => Net_919_local ,
            dclk_glb_1 => Net_347 ,
            dclk_1 => Net_347_local ,
            dclk_glb_2 => \ADC_DelSig_1:Net_93\ ,
            dclk_2 => \ADC_DelSig_1:Net_93_local\ ,
            dclk_glb_3 => \ADC_SAR_Seq_2:clock\ ,
            dclk_3 => \ADC_SAR_Seq_2:clock_local\ ,
            dclk_glb_4 => \ADC_SAR_1:Net_376\ ,
            dclk_4 => \ADC_SAR_1:Net_376_local\ ,
            aclk_glb_0 => \ADC_DelSig_1:Net_488\ ,
            aclk_0 => \ADC_DelSig_1:Net_488_local\ ,
            clk_a_dig_glb_0 => \ADC_DelSig_1:Net_488_adig\ ,
            clk_a_dig_0 => \ADC_DelSig_1:Net_488_adig_local\ ,
            dclk_glb_5 => Net_773 ,
            dclk_5 => Net_773_local );
        Properties:
        {
        }
Comparator group 0: 
    Comparator Block @ F(Comparator,0): 
    comparatorcell: Name =\Comp_3:ctComp\
        PORT MAP (
            vplus => Net_91 ,
            vminus => Net_93 ,
            clk_udb => ClockBlock_BUS_CLK_local ,
            out => \Comp_3:Net_1\ );
        Properties:
        {
            cy_registers = ""
        }
    Comparator Block @ F(Comparator,1): 
    comparatorcell: Name =\Comp_4:ctComp\
        PORT MAP (
            vplus => Net_966 ,
            vminus => Net_558 ,
            out => Osc_err_low );
        Properties:
        {
            cy_registers = ""
        }
    Comparator Block @ F(Comparator,2): 
    comparatorcell: Name =\Comp_1:ctComp\
        PORT MAP (
            vplus => Net_558 ,
            vminus => Net_51 ,
            clk_udb => ClockBlock_BUS_CLK_local ,
            out => Osc_err );
        Properties:
        {
            cy_registers = ""
        }
    Comparator Block @ F(Comparator,3): 
    comparatorcell: Name =\Comp_2:ctComp\
        PORT MAP (
            vplus => Net_558 ,
            vminus => Net_69 ,
            clk_udb => ClockBlock_BUS_CLK_local ,
            out => \Comp_2:Net_1\ );
        Properties:
        {
            cy_registers = ""
        }
Digital Filter Block group 0: 
    DFB Block @ F(DFB,0): 
    dfbcell: Name =\Filter:DFB\
        PORT MAP (
            out_1 => \Filter:Net_8\ ,
            out_2 => \Filter:Net_9\ ,
            dmareq_1 => Net_645 ,
            dmareq_2 => Net_646 ,
            interrupt => Net_436 );
        Properties:
        {
            cy_registers = ""
        }
Delta-Sigma ADC group 0: 
    DS Modulator @ F(DSM,0): 
    dsmodcell: Name =\ADC_DelSig_1:DSM\
        PORT MAP (
            aclock => \ADC_DelSig_1:Net_488\ ,
            vplus => Net_412 ,
            vminus => \ADC_DelSig_1:Net_20\ ,
            reset_dec => \ADC_DelSig_1:mod_reset\ ,
            extclk_cp_udb => \ADC_DelSig_1:Net_93_local\ ,
            ext_pin_1 => \ADC_DelSig_1:Net_249\ ,
            ext_pin_2 => \ADC_DelSig_1:Net_257\ ,
            ext_vssa => \ADC_DelSig_1:Net_109\ ,
            qtz_ref => \ADC_DelSig_1:Net_34\ ,
            dec_clock => \ADC_DelSig_1:aclock\ ,
            mod_dat_3 => \ADC_DelSig_1:mod_dat_3\ ,
            mod_dat_2 => \ADC_DelSig_1:mod_dat_2\ ,
            mod_dat_1 => \ADC_DelSig_1:mod_dat_1\ ,
            mod_dat_0 => \ADC_DelSig_1:mod_dat_0\ ,
            dout_udb_7 => \ADC_DelSig_1:Net_245_7\ ,
            dout_udb_6 => \ADC_DelSig_1:Net_245_6\ ,
            dout_udb_5 => \ADC_DelSig_1:Net_245_5\ ,
            dout_udb_4 => \ADC_DelSig_1:Net_245_4\ ,
            dout_udb_3 => \ADC_DelSig_1:Net_245_3\ ,
            dout_udb_2 => \ADC_DelSig_1:Net_245_2\ ,
            dout_udb_1 => \ADC_DelSig_1:Net_245_1\ ,
            dout_udb_0 => \ADC_DelSig_1:Net_245_0\ );
        Properties:
        {
            cy_registers = ""
            resolution = 16
        }
Decimator group 0: 
    Decimator Block @ F(Decimator,0): 
    decimatorcell: Name =\ADC_DelSig_1:DEC\
        PORT MAP (
            aclock => \ADC_DelSig_1:aclock\ ,
            mod_dat_3 => \ADC_DelSig_1:mod_dat_3\ ,
            mod_dat_2 => \ADC_DelSig_1:mod_dat_2\ ,
            mod_dat_1 => \ADC_DelSig_1:mod_dat_1\ ,
            mod_dat_0 => \ADC_DelSig_1:mod_dat_0\ ,
            ext_start => __ONE__ ,
            modrst => \ADC_DelSig_1:mod_reset\ ,
            interrupt => Net_415 );
        Properties:
        {
            cy_registers = ""
        }
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: 
    SC Block @ F(SC,0): 
    sccell: Name =\PGA_1:SC\
        PORT MAP (
            vref => \PGA_1:Net_17\ ,
            vin => Net_302 ,
            modout => \PGA_1:Net_41\ ,
            vout => Net_308 );
        Properties:
        {
            cy_registers = ""
        }
    SC Block @ F(SC,2): 
    sccell: Name =\PGA_2:SC\
        PORT MAP (
            vref => \PGA_2:Net_17\ ,
            vin => Net_616 ,
            modout => \PGA_2:Net_41\ ,
            vout => Net_965 );
        Properties:
        {
            cy_registers = ""
        }
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\Counter_1:CounterHW\
        PORT MAP (
            clock => Net_347 ,
            enable => __ZERO__ ,
            tc => \Counter_1:Net_48\ ,
            cmp => \Counter_1:Net_47\ ,
            irq => Net_437 );
        Properties:
        {
            cy_registers = ""
        }
    Timer Block @ F(Timer,1): 
    timercell: Name =\PWM_1:PWMHW\
        PORT MAP (
            clock => Net_773 ,
            kill => Net_771 ,
            enable => __ONE__ ,
            tc => \PWM_1:Net_63\ ,
            cmp => Net_802 ,
            irq => \PWM_1:Net_54\ );
        Properties:
        {
            cy_registers = ""
        }
    Timer Block @ F(Timer,2): 
    timercell: Name =\PWM_2:PWMHW\
        PORT MAP (
            clock => Net_919 ,
            enable => __ONE__ ,
            tc => \PWM_2:Net_63\ ,
            cmp => Net_938 ,
            irq => \PWM_2:Net_54\ );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: 
    USB Block @ F(USB,0): 
    usbcell: Name =\USBUART_1:USB\
        PORT MAP (
            dp => \USBUART_1:Net_1000\ ,
            dm => \USBUART_1:Net_597\ ,
            sof_int => Net_521 ,
            arb_int => \USBUART_1:Net_1889\ ,
            usb_int => \USBUART_1:Net_1876\ ,
            ept_int_8 => \USBUART_1:ep_int_8\ ,
            ept_int_7 => \USBUART_1:ep_int_7\ ,
            ept_int_6 => \USBUART_1:ep_int_6\ ,
            ept_int_5 => \USBUART_1:ep_int_5\ ,
            ept_int_4 => \USBUART_1:ep_int_4\ ,
            ept_int_3 => \USBUART_1:ep_int_3\ ,
            ept_int_2 => \USBUART_1:ep_int_2\ ,
            ept_int_1 => \USBUART_1:ep_int_1\ ,
            ept_int_0 => \USBUART_1:ep_int_0\ ,
            ord_int => \USBUART_1:Net_95\ ,
            dma_req_7 => \USBUART_1:dma_request_7\ ,
            dma_req_6 => \USBUART_1:dma_request_6\ ,
            dma_req_5 => \USBUART_1:dma_request_5\ ,
            dma_req_4 => \USBUART_1:dma_request_4\ ,
            dma_req_3 => \USBUART_1:dma_request_3\ ,
            dma_req_2 => \USBUART_1:dma_request_2\ ,
            dma_req_1 => \USBUART_1:dma_request_1\ ,
            dma_req_0 => \USBUART_1:dma_request_0\ ,
            dma_termin => \USBUART_1:dma_terminate\ );
        Properties:
        {
            cy_registers = ""
        }
VIDAC group 0: 
    VIDAC Block @ F(VIDAC,0): 
    vidaccell: Name =\IDAC8_2:viDAC8\
        PORT MAP (
            vout => \IDAC8_2:Net_124\ ,
            iout => Net_302 );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
    VIDAC Block @ F(VIDAC,1): 
    vidaccell: Name =\IDAC8_1:viDAC8\
        PORT MAP (
            vout => \IDAC8_1:Net_124\ ,
            iout => Net_302 );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
    VIDAC Block @ F(VIDAC,2): 
    vidaccell: Name =\VDAC8:viDAC8\
        PORT MAP (
            vout => Net_51 ,
            iout => \VDAC8:Net_77\ );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
    VIDAC Block @ F(VIDAC,3): 
    vidaccell: Name =\VDAC8_1:viDAC8\
        PORT MAP (
            vout => Net_966 ,
            iout => \VDAC8_1:Net_77\ );
        Properties:
        {
            cy_registers = ""
            is_all_if_any = 0
            reg_data = 0
        }
Opamp group 0: empty
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,6): 
    vrefcell: Name =\ADC_DelSig_1:vRef_2\
        PORT MAP (
            vout => \ADC_DelSig_1:Net_244\ );
        Properties:
        {
            autoenable = 1
            guid = "15B3DB15-B7B3-4d62-A2DF-25EA392A7161"
            ignoresleep = 0
            name = "Vssa (GND)"
        }
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR_1:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR_1:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_1:ADC_SAR\
        PORT MAP (
            vplus => Net_965 ,
            vminus => \ADC_SAR_1:Net_126\ ,
            ext_pin => \ADC_SAR_1:Net_209\ ,
            vrefhi_out => \ADC_SAR_1:Net_126\ ,
            vref => \ADC_SAR_1:Net_235\ ,
            clk_udb => \ADC_SAR_1:Net_376_local\ ,
            irq => \ADC_SAR_1:Net_252\ ,
            next => Net_275 ,
            data_out_udb_11 => \ADC_SAR_1:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_1:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_1:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_1:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_1:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_1:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_1:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_1:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_1:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_1:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_1:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_1:Net_207_0\ ,
            eof_udb => Net_449 );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_SAR_Seq_2:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq_2:Net_2803\ ,
            vminus => \ADC_SAR_Seq_2:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq_2:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq_2:SAR:Net_126\ ,
            vref => \ADC_SAR_1:Net_235\ ,
            clk_udb => \ADC_SAR_Seq_2:clock_local\ ,
            irq => \ADC_SAR_Seq_2:SAR:Net_252\ ,
            next => Net_805 ,
            data_out_udb_11 => \ADC_SAR_Seq_2:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq_2:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq_2:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq_2:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq_2:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq_2:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq_2:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq_2:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq_2:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq_2:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq_2:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq_2:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq_2:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_DelSig_1:AMux\
        PORT MAP (
            muxin_1 => \ADC_DelSig_1:Net_35\ ,
            muxin_0 => \ADC_DelSig_1:Net_244\ ,
            vout => \ADC_DelSig_1:Net_20\ );
        Properties:
        {
            api_type = 0
            connect_mode = 1
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "00"
            muxin_width = 2
            one_active = 0
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq_2:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_901 ,
            muxin_62 => Net_900 ,
            muxin_61 => Net_899 ,
            muxin_60 => Net_898 ,
            muxin_59 => Net_897 ,
            muxin_58 => Net_896 ,
            muxin_57 => Net_895 ,
            muxin_56 => Net_894 ,
            muxin_55 => Net_893 ,
            muxin_54 => Net_892 ,
            muxin_53 => Net_891 ,
            muxin_52 => Net_890 ,
            muxin_51 => Net_889 ,
            muxin_50 => Net_888 ,
            muxin_49 => Net_887 ,
            muxin_48 => Net_886 ,
            muxin_47 => Net_885 ,
            muxin_46 => Net_883 ,
            muxin_45 => Net_881 ,
            muxin_44 => Net_880 ,
            muxin_43 => Net_878 ,
            muxin_42 => Net_876 ,
            muxin_41 => Net_875 ,
            muxin_40 => Net_873 ,
            muxin_39 => Net_871 ,
            muxin_38 => Net_870 ,
            muxin_37 => Net_868 ,
            muxin_36 => Net_866 ,
            muxin_35 => Net_865 ,
            muxin_34 => Net_863 ,
            muxin_33 => Net_861 ,
            muxin_32 => Net_860 ,
            muxin_31 => Net_858 ,
            muxin_30 => Net_856 ,
            muxin_29 => Net_855 ,
            muxin_28 => Net_853 ,
            muxin_27 => Net_851 ,
            muxin_26 => Net_850 ,
            muxin_25 => Net_848 ,
            muxin_24 => Net_846 ,
            muxin_23 => Net_845 ,
            muxin_22 => Net_843 ,
            muxin_21 => Net_841 ,
            muxin_20 => Net_840 ,
            muxin_19 => Net_838 ,
            muxin_18 => Net_836 ,
            muxin_17 => Net_835 ,
            muxin_16 => Net_833 ,
            muxin_15 => Net_831 ,
            muxin_14 => Net_830 ,
            muxin_13 => Net_828 ,
            muxin_12 => Net_826 ,
            muxin_11 => Net_825 ,
            muxin_10 => Net_823 ,
            muxin_9 => Net_821 ,
            muxin_8 => Net_820 ,
            muxin_7 => Net_818 ,
            muxin_6 => Net_816 ,
            muxin_5 => Net_815 ,
            muxin_4 => Net_813 ,
            muxin_3 => Net_951 ,
            muxin_2 => Net_957 ,
            muxin_1 => Net_808 ,
            muxin_0 => Net_807 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \ADC_SAR_Seq_2:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                    | 
Port | Pin | Fixed |      Type |       Drive Mode |               Name | Connections
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   0 |   4 |     * |      NONE |      HI_Z_ANALOG |          ADC_IN(0) | Analog(Net_616)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   1 |   7 |     * |      NONE |      HI_Z_ANALOG |      pump_diode(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_808)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(0)\ | 
     |   1 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(1)\ | 
     |   2 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(2)\ | 
     |   3 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(3)\ | 
     |   4 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(4)\ | 
     |   5 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(5)\ | 
     |   6 |     * |      NONE |         CMOS_OUT |   \LCD:LCDPort(6)\ | 
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   3 |   0 |     * |      NONE |      HI_Z_ANALOG |     DAC_Current(0) | Analog(Net_302)
     |   2 |     * |      NONE |      HI_Z_ANALOG |     DAC_PGA_OUT(0) | Analog(Net_308)
     |   4 |     * |      NONE |      HI_Z_ANALOG |       temp_sens(0) | Analog(Net_412)
     |   7 |     * |      NONE |         CMOS_OUT |          Buzzer(0) | In(Net_802)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   4 |   0 |     * |      NONE |      HI_Z_ANALOG | Diode_Seedseite(0) | Analog(Net_91)
     |   1 |     * |      NONE |      HI_Z_ANALOG | Diode_Pumpseite(0) | Analog(Net_558)
     |   2 |     * |      NONE |      HI_Z_ANALOG |        Seed_ref(0) | Analog(Net_93)
     |   3 |     * |      NONE |      HI_Z_ANALOG |        Pump_ref(0) | Analog(Net_69)
     |   5 |     * |      NONE |      HI_Z_ANALOG |         DAC_Out(0) | Analog(Net_51)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   5 |   3 |     * |      NONE |      HI_Z_ANALOG |       osc_diode(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_807)
     |   7 |     * |      NONE |      HI_Z_ANALOG |      seed_diode(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_957)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
   6 |   0 |     * |      NONE |         CMOS_OUT |    Curr_control(0) | In(Net_938)
     |   1 |     * |      NONE |      RES_PULL_UP |             SW2(0) | 
     |   5 |     * |      NONE |      HI_Z_ANALOG |   Potentiometer(0) | In(\ADC_SAR_Seq_2:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_951)
     |   7 |     * |      NONE |     HI_Z_DIGITAL |            VUSB(0) | FB(Net_522)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
  12 |   2 |     * |      NONE |         CMOS_OUT |           Fault(0) | In(Net_771)
-----+-----+-------+-----------+------------------+--------------------+----------------------------------------------------------------
  15 |   6 |     * |   FALLING |      HI_Z_ANALOG |  \USBUART_1:Dp(0)\ | Analog(\USBUART_1:Net_1000\)
     |   7 |     * |      NONE |      HI_Z_ANALOG |  \USBUART_1:Dm(0)\ | Analog(\USBUART_1:Net_597\)
----------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.000ms
Digital Placement phase: Elapsed time ==> 4s.149ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.744ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.249ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.093ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in Laserschutzschaltung_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.624ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.296ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 14s.086ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 14s.086ms
API generation phase: Elapsed time ==> 4s.648ms
Dependency generation phase: Elapsed time ==> 0s.046ms
Cleanup phase: Elapsed time ==> 0s.031ms
